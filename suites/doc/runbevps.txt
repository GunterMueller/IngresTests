Copyright (c) 2004 Ingres Corporation


DOCUMENTATION TO RUN BACK-END VPS SEP TESTS (UNIX/WINDOWS)

        Created   06-Jun-2000	(wu$ca01) 
		  30-Jun-2000	(vande02) Added the 4th parameter to syntax
				examples under Execution Process.
		  13-Oct-2004	(legru01) Remove irrelevant information for
		  		OpenSource Test package.

	This test suite exercises the use of variable page sizes (DBMS cache)
	of either 2K, 4K, 8K, 16K, 32K or 64K and each storage structure
	of either heap, hash, btree, or isam.
                                      
        This document describes:
         A.   The environment variables used by this script.
         B.   The execution process.
         C.   Tables showing the facility name, databases, database variables, 
              setup scripts, output files and .lis file names needed for each 
              facility.
         D.   Monitor progress of back-end vps test

A.  ENVIRONMENT VARIABLES:

        ING_TST         This variable points to the top of your testing area
                        structure.  This variable must be set in order to 
                        execute this script.  This variable should be set in 
                        your environment setup file.

        TST_ROOT_OUTPUT This variable has been set in the environment setup
			file. This script will use this variable to point to
			the location of the test output files generated by
			this script. Your test output will be directed to:

			UNIX: $TST_ROOT_OUTPUT/be/vps.
			WINDOWS: %TST_ROOT_OUTPUT%\be\vps

        TST_CFG         This variable points to the location of the .cfg files.

			UNIX: $ING_TST/suites/acceptst
			WINDOWS: %ING_TST%\suites\acceptst

	TST_SHELL       This variable points to the location of the shell files.

			UNIX: $ING_TST/suites/shell
			WINDOWS: %ING_TST%\suites\bat

	TST_TESTOOLS    This variable points to the driver directory.

			UNIX: $ING_TST/testtool/driver
			WINDOWS: %ING_TST%\testtool\driver

 B.  EXECUTION PROCESS:

        1.  Initialize the databases.

	    The script can be executed in two ways, a)in its entirety, or
	    b)by facility.

	    a) To initialize all the areas of vps testing:

		UNIX:	 % sh $TST_SHELL/runbevps.sh all all init vps
		WINDOWS: > %TST_SHELL%\runbevps.bat all all init vps
		
	    b) To initialize selected area:

		UNIX:	 % sh $TST_SHELL/runbevps.sh page_size storage init vps
		WINDOWS: > %TST_SHELL%\runbevps.bat page_size storage init vps
		
		 	=> where page_size = 2, 4, 8, 16, 32, 64
		 	=> where storage = heap, hash, isam, btree

            The resulting output of the initialization can be found in
            $TST_ROOT_OUTPUT/beinit.out or %TST_ROOT_OUTPUT%\beinit.out.

            The following databases will be created: vpsdb

        2.  Execute the script.

	    The script can be executed in two ways, a)in its entirety, or
	    b)by facility.

            a) To execute the script in its entirety: 

		UNIX:	 % sh $TST_SHELL/runbevps.sh all all vps vps
		WINDOWS: > %TST_SHELL%\runbevps.bat all all vps vps

            b) To run selected test area:

		UNIX:	 % sh $TST_SHELL/runbevps.sh page_size storage vps vps
		WINDOWS: > %TST_SHELL%\runbevps.bat page_size storage vps vps

		 	=> where page_size = 2, 4, 8, 16, 32, 64 
		 	=> where storage = heap, hash, isam, btree

 C.  ADDITIONAL DOCUMENTATION BY FACILITY:


           Database     Database   ($TST_CFG)   ($TST_ROOT_OUTPUT)
Facility   Variable       Name     LIST FILES    OUTPUT FILES 
------------------------------------------------------------------------
vps       | SEPPARAMDB  | vpsdb   | bevps.lis  | bevps.rpt, *.log, *.out
------------------------------------------------------------------------

 D.  MONITOR PROGRESS OF BACK-END VPS TEST:

     Open 3 windows to view the performance of the test:

        1. To execute the commands to run the test suite

        2. Watch the errlog.log file
           (located in II_SYSTEM/ingres/files)
            
		UNIX/WINDOWS: 
		tail -f errlog.log

	3. To monitor the test progress, go to 
	  (located in TST_OUTPUT/be/vps/page_size/storage)

		UNIX/WINDOWS:
            	tail -f [any output file named above in section C.]
