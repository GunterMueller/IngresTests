/*
  Copyright (c) 2008 Ingres Corporation

  Test Name     : glc37.sep
  Suite         : embed!esqlc
  Focus         : Ingres Regression Test
                : Test for bug 119856 - Compiling a *.sc program fails with 
                : E_EQ0244
                :
  Databases     : SEPPARAMDB
  Tables        : b116752_*
  Filled Files  : b119856.sc 
  Copied Files  :
  Output Files  :
  Prerequisites : None
  Run as user   : testenv 
  Summary       : Verifies fix for bug 119856
                :
                :
  Exp. DIFFs    : None
                :
  History       : 5-Feb-2008  (kiria01) Created
                : 27-Aug-2008 (wanfr01) Modified to current format
                : 27-Aug-2008 (sarjo01) Formalized for piccolo.
                : 03-Nov-2008 (wanfr01) Cleaned up compiler warnings
*/
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}
!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
<<
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING object_id
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
%% Error in file b119856.sc, Line 31:
E_EQ0244 Syntax error on 'object_id'.

>>
<<
%% Error in file b119856.sc, Line 31:
E_EQ0244 Syntax error on 'object_id'.

>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING (object_id)
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
>>
<<
>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING (object_id,object_id,object_id)
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
>>
<<
>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING (object_id,object_id,)
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
<<
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="test";
char    usr_name[18]="bpas";
int     ingerr,status;
EXEC SQL END DECLARE SECTION;
EXEC SQL WHENEVER SQLERROR stop;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    EXEC SQL SET NOPRINTQRY;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING (object_id,object_id,)
      WHERE 1 = 0;
    EXEC SQL ROLLBACK;
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? esqlc b119856.sc 
<<
ESQL b119856.sc:
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
<<
%% Error in file b119856.sc, Line 32:
E_EQ0244 Syntax error on 'where'.

>>
? fill b119856.sc 
!!
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
EXEC SQL INCLUDE SQLCA;
int main(int argc, char* argv[])
{
EXEC SQL BEGIN DECLARE SECTION;
char    db_name[18]="iidbdb";
char    usr_name[18]="ingres";

EXEC SQL END DECLARE SECTION;
    printf("Test using syntax\n");

    EXEC SQL CONNECT :db_name IDENTIFIED BY :usr_name;
    printf("drop test table\n");
    EXEC SQL DROP TABLE test_junker;

EXEC SQL WHENEVER SQLERROR stop;
    printf("Create test table\n");
    EXEC SQL
      CREATE TABLE test_junker AS
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o, ii_rcommands c
      WHERE o.object_id = c.object_id AND 1 = 0;
    printf("Inserting USING\n");
    EXEC SQL
      INSERT INTO test_junker
      SELECT o.object_name,c.rcocommand,c.rcotext
      FROM ii_objects o JOIN ii_rcommands c
      USING (object_id)
      WHERE 1 = 0;
    printf("Rolling back\n");
    EXEC SQL ROLLBACK;
    printf("Disconnect\n");
    EXEC SQL DISCONNECT;
    exit(0);
}

!!
? sepesqlc b119856.sc 
<<
ESQL b119856.sc:
>>
<<
>>
? sepcc b119856.c 
<<
>>
<<
b119856.c
>>
? seplnk b119856
<<
>>
? run b119856.exe 
<<
Test using syntax
drop test table
Create test table
Inserting USING
Rolling back
Disconnect
>>
? delete b119856.c
<<
~
>>
? delete b119856.o
<<
~
>>
? delete b119856.obj
<<
~
>>
? delete b119856.exe
<<
~
>>
