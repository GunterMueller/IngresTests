/*
	Test Name: pza27sc.sep
	Time: Thu Mar  3 20:00:38 1994
	User Name: jbryson
	Terminal type: septerm
 
	Test ID : pza27sc
	Module  : 3gl
	Filename: pza27sc.sep
	Purpose	: Test the preprocessor syntax for C2.
	Input Files  :
	Output Files :
	Database     : NONE
	Tables       : 
	Synopsis     : This test code will only be preprocessed to
		       test the preprocessors interaction with C2.
		       There should be no output/ERRORS.

 History:  3-Mar-1994	(jbryson)	Created
*/
? delete pza27sc.c 
<<
~
>>
? fill pza27sc.sc 
!!
/*  3GL version of a 4GL test of C2 Security statements
**  This test just compiles the code and does not run.  Most statements
**  require special privileges and some need to be run against iidbdb.
**  This feature is fully tested in the BE.
*/

main()
{
   /* put this in the init file later */
   EXEC SQL drop table c2tbl;
   EXEC SQL create table c2tbl
        (col1 char(20), col2 decimal(10,3), col3 integer);
   EXEC SQL insert into c2tbl values ('a', 1.1, 10);

   /* 'C2_loc' */
   /* 'testing create/alter/drop location...' */
   EXEC SQL CREATE LOCATION loc_name WITH AREA = 'area_name';
   EXEC SQL ALTER LOCATION loc_name WITH USAGE = NOUSAGE;
   EXEC SQL DROP LOCATION loc_name;

   /* 'C2_user' */
   /* 'testing create/alter/drop user...' */
   EXEC SQL CREATE USER testuser;                              
   EXEC SQL ALTER USER testuser WITH PRIVILEGES = NOPRIVILEGES;
   EXEC SQL DROP USER testuser; 
   
   /* 'C2_enable_audit' */
   /* 'testing enable security_audit...' */
   EXEC SQL ENABLE SECURITY_AUDIT ALL;
   EXEC SQL ENABLE SECURITY_AUDIT TABLE;
   EXEC SQL ENABLE SECURITY_AUDIT PROCEDURE;
   EXEC SQL ENABLE SECURITY_AUDIT DATABASE;
   EXEC SQL ENABLE SECURITY_AUDIT VIEW;
   EXEC SQL ENABLE SECURITY_AUDIT LOCATION;
   EXEC SQL ENABLE SECURITY_AUDIT USER; 
   EXEC SQL ENABLE SECURITY_AUDIT SECURITY;
   EXEC SQL ENABLE SECURITY_AUDIT ALARM;
   EXEC SQL ENABLE SECURITY_AUDIT DBEVENT;
   EXEC SQL ENABLE SECURITY_AUDIT INSTALLATION;
   EXEC SQL ENABLE SECURITY_AUDIT LEVEL;
   EXEC SQL ENABLE SECURITY_AUDIT ROLE;
   EXEC SQL ENABLE SECURITY_AUDIT ROW;
   EXEC SQL ENABLE SECURITY_AUDIT RULE;

   /* 'C2_disable_audit' */
   /* 'testing disable security_audit...' */
   EXEC SQL DISABLE SECURITY_AUDIT ALL;
   EXEC SQL DISABLE SECURITY_AUDIT TABLE;
   EXEC SQL DISABLE SECURITY_AUDIT PROCEDURE;
   EXEC SQL DISABLE SECURITY_AUDIT DATABASE;
   EXEC SQL DISABLE SECURITY_AUDIT VIEW;
   EXEC SQL DISABLE SECURITY_AUDIT LOCATION;
   EXEC SQL DISABLE SECURITY_AUDIT USER; 
   EXEC SQL DISABLE SECURITY_AUDIT SECURITY;
   EXEC SQL DISABLE SECURITY_AUDIT ALARM;
   EXEC SQL DISABLE SECURITY_AUDIT DBEVENT;
   EXEC SQL DISABLE SECURITY_AUDIT INSTALLATION;
   EXEC SQL DISABLE SECURITY_AUDIT LEVEL;
   EXEC SQL DISABLE SECURITY_AUDIT ROLE;
   EXEC SQL DISABLE SECURITY_AUDIT ROW;
   EXEC SQL DISABLE SECURITY_AUDIT RULE;

   /* 'C2_alarm' */
   /* 'testing create security_alarm...' */
   EXEC SQL CREATE SECURITY_ALARM ON c2tbl;
   EXEC SQL CREATE SECURITY_ALARM ON c2tbl IF FAILURE WHEN SELECT BY PUBLIC;
   EXEC SQL CREATE SECURITY_ALARM ON c2tbl IF FAILURE WHEN UPDATE BY PUBLIC;
   EXEC SQL CREATE SECURITY_ALARM ON TABLE c2tbl 
	 IF SUCCESS WHEN INSERT BY testenv;
   EXEC SQL CREATE SECURITY_ALARM ON TABLE c2tbl
	 IF SUCCESS WHEN DELETE BY testenv;
   EXEC SQL DROP SECURITY_ALARM ON c2tbl 2;                         

   /* 'C2_alter_audit' */
   /* This statement is not in yet, as of 7/28/93 */
   /* Syntax error on line 1.  Last symbol read was: 'security_audit'  */
   /* 'testing security_audit...' */
   EXEC SQL ALTER SECURITY_AUDIT WITH LOGFILE = filename;     
   EXEC SQL ALTER SECURITY_AUDIT WITH MAX_LOGSIZE = 1000;     
   EXEC SQL ALTER SECURITY_AUDIT WITH MAX_LOGSIZE = NONE;
   EXEC SQL ALTER SECURITY_AUDIT WITH ON_LOGFULL = SHUTDOWN;
   EXEC SQL ALTER SECURITY_AUDIT WITH ON_LOGFULL = STOP_AUDIT;
}
!!
? esqlc pza27sc.sc 
<<
ESQL pza27sc.sc:
>>
<<
>>
? delete pza27sc.c 
<<
~
>>


Ending at: Thu Mar  3 11:09:39 1994
