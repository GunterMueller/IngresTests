/*
	Test Name: pza19sc.sep
	Time: Thu Jan 20 20:00:38 1994
	User Name: jbryson
	Terminal type: septerm
 
	Test ID : pza19sc
	Module  : 3gl
	Filename: pza19sc.sep
	Purpose	: test SQLCODE and SQLSTATE.
	Input Files  :
	Output Files :
	Database     : SEPPARAMDB
	Tables       : iitables(view)
	Synopsis     : This is a test of SQLCODE and SQLSTATE when they are
		       declared within the DECLARE SECTION.

 History: 20-Jan-1994	(jbryson)	Created
          20-Jan-1995	(qiuji01) Changed canon for "run pza19sc.exe 
                        SEPPARAMDB".
          02-Apr-1997  Modified (chiel02)
                       Added an alternate canon for the sepcc command. 
*/
? delete pza19sc.c 
<<
~
>>
? delete pza19sc.o 
<<
~
>>
? delete pza19sc.obj 
<<
~
>>
? delete pza19sc.exe 
<<
~
>>
? sql -s SEPPARAMDB 
<<
~
>>
* drop table non_table\p\g
<<
~
>>
* \q
<<
~
>>
? fill pza19sc.sc 
!!
EXEC SQL INCLUDE SQLCA;
EXEC SQL BEGIN DECLARE SECTION;
   int SQLCODE;
   char SQLSTATE[6];
EXEC SQL END DECLARE SECTION;

int main(argc,argv)
int  argc;
EXEC SQL BEGIN DECLARE SECTION;
char *argv[];
EXEC SQL END DECLARE SECTION;
{
EXEC SQL BEGIN DECLARE SECTION;
   int count;
EXEC SQL END DECLARE SECTION;

   if (argc < 2)
   {
      printf("Usage: %s <database name>\n",argv[0]);
      exit(1);
   }

   EXEC SQL WHENEVER SQLERROR CALL SQLPRINT;

   EXEC SQL CONNECT foo_invalid;
   printSQL("After invalid connect");

   EXEC SQL CONNECT :argv[1];
   printSQL("After valid connect");

   if(strncmp(SQLSTATE,"00",2) != 0)
      exit(-1);

   EXEC SQL SELECT intcol INTO :count FROM non_table;
   printSQL("After invalid select");

   EXEC SQL SELECT count(*) INTO :count FROM iitables;
   printSQL("After valid select");

   EXEC SQL DISCONNECT;
   printSQL("After valid disconnect");

   exit(0);
} /* Main Program */

printSQL(str)
char *str;
{
   printf("%s\n",str);
   printf("SQLSTATE=%.5s=\n",SQLSTATE);
   printf("SQLCODE=%d=\n",SQLCODE);
   printf("sqlca.sqlcode=%d=\n\n",sqlca.sqlcode);
}
!!
? esqlc pza19sc.sc 
<<
ESQL pza19sc.sc:
>>
<<
>>
? sepcc pza19sc 
<<
>>
<<
pza19sc.c
>>
? seplnk pza19sc 
<<
>>
? run pza19sc.exe SEPPARAMDB 
<<
E_US0010 Database does not exist: 'foo_invalid                     '.
    (Fri Jan 20 17:22:36 1995)
After invalid connect
SQLSTATE=08004=
SQLCODE=-38100=
sqlca.sqlcode=-38100=

After valid connect
SQLSTATE=00000=
SQLCODE=0=
sqlca.sqlcode=0=

E_US0845 Table 'non_table' does not exist or is not owned by you.
    (Fri Jan 20 17:22:37 1995)
After invalid select
SQLSTATE=42500=
SQLCODE=-30100=
sqlca.sqlcode=-30100=

After valid select
SQLSTATE=00000=
SQLCODE=0=
sqlca.sqlcode=0=

After valid disconnect
SQLSTATE=00000=
SQLCODE=0=
sqlca.sqlcode=0=

>>
? delete pza19sc.c 
<<
~
>>
? delete pza19sc.o 
<<
~
>>
? delete pza19sc.obj 
<<
~
>>
? delete pza19sc.exe 
<<
~
>>


Ending at: Fri Jan 20 17:22:49 1995
