/*
	Test Name   : xda08.sep 
	Time        :  9-APR-1990 08:09:46.45
	User Name   : antipa

	Test ID     : xda08.sep 
	Module      : STAR phase I testing
     	Purpose	    : Add tables to uninitialized STAR DDB
	Input Files : 
	Output Files: 
	Database    : SEPPARAMDB 
	Tables      : none
	Synopsis    : REGISTER tables in a STAR DDB from tables in LDBs
			assumes that the registrations do not currently exist

	RUN THIS once

	This test is a required setup for the STAR Phase 1 
	REGISTER tests created by VAL ANTIPA.

	26-nov-1990	jds	modify to just register tables in starddb1
			part of getting tests and databases owned by
			testenv


	  16-09-93     barbh
		       Changed SEPPARAM_DDB to SEPPARAMDB. This makes the
		       star test consistent with testkit standards.

	   6-10-93     barbh
		       Changed test name to xda08.sep. All star init tests 
		       will use the xd identifier.
	  3-Nov-1999      (vande02) Added empty canon to confirm db connection
*/
? sql -s SEPPARAMDB
<<

>>
* set autocommit on;\g
<<
~
>>
* drop link qpr_s1, qpr_p1, qpr_j1, qpr_sp1, qpr_spj1; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s1 as link from qpr_s with node=snode1, database=LDB1;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p1 as link from qpr_p with node=snode1, database=LDB1;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp1 as link from qpr_sp with node=snode1, database=LDB1;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j1 as link from qpr_j with node=snode1, database=LDB1;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj1 as link from qpr_spj with node=snode1, database=LDB1;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s2, qpr_p2, qpr_j2, qpr_sp2, qpr_spj2; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s2 as link from qpr_s with node=snode2, database=LDB2;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p2 as link from qpr_p with node=snode2, database=LDB2;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp2 as link from qpr_sp with node=snode2, database=LDB2;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j2 as link from qpr_j with node=snode2, database=LDB2;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj2 as link from qpr_spj with node=snode2, database=LDB2;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s3, qpr_p3, qpr_j3, qpr_sp3, qpr_spj3; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s3 as link from qpr_s with node=snode3, database=LDB3;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p3 as link from qpr_p with node=snode3, database=LDB3;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp3 as link from qpr_sp with node=snode3, database=LDB3;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j3 as link from qpr_j with node=snode3, database=LDB3;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj3 as link from qpr_spj with node=snode3, database=LDB3;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s4, qpr_p4, qpr_j4, qpr_sp4, qpr_spj4; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s4 as link from qpr_s with node=snode4, database=LDB4;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p4 as link from qpr_p with node=snode4, database=LDB4;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp4 as link from qpr_sp with node=snode4, database=LDB4;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j4 as link from qpr_j with node=snode4, database=LDB4;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj4 as link from qpr_spj with node=snode4, database=LDB4;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s5, qpr_p5, qpr_j5, qpr_sp5, qpr_spj5; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s5 as link from qpr_s with node=snode5, database=LDB5;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p5 as link from qpr_p with node=snode5, database=LDB5;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp5 as link from qpr_sp with node=snode5, database=LDB5;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j5 as link from qpr_j with node=snode5, database=LDB5;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj5 as link from qpr_spj with node=snode5, database=LDB5;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s6, qpr_p6, qpr_j6, qpr_sp6, qpr_spj6; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s6 as link from qpr_s with node=snode6, database=LDB6;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p6 as link from qpr_p with node=snode6, database=LDB6;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp6 as link from qpr_sp with node=snode6, database=LDB6;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j6 as link from qpr_j with node=snode6, database=LDB6;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj6 as link from qpr_spj with node=snode6, database=LDB6;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* drop link qpr_s7, qpr_p7, qpr_j7, qpr_sp7, qpr_spj7; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register qpr_s7 as link from qpr_s with node=snode7, database=LDB7;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_p7 as link from qpr_p with node=snode7, database=LDB7;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_sp7 as link from qpr_sp with node=snode7, database=LDB7;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_j7 as link from qpr_j with node=snode7, database=LDB7;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* register qpr_spj7 as link from qpr_spj with node=snode7, database=LDB7;\g
<<

>>
<<
Executing . . .

continue
* 
>>
* \q
<<
~
>>


Ending at: 30-MAY-1990 12:17:43
