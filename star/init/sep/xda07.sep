/*
	Test Name   : xda07.sep 
	Time        :  9-APR-1990 08:09:46.45
	User Name   : antipa

	Test ID     : XDA07  
	Module      : STAR phase I testing 
	Purpose	    : Add tables to uninitialized STAR DDB
	Input Files : 
	Output Files: 
	Database    : SEPPARAMDB 
	Tables      : none
	Synopsis    : REGISTER tables in a STAR DDB from tables in LDBs
			assumes that the registrations do not currently exist
	RUN THIS once

	This test is a required setup for the STAR Phase 1 
	REGISTER tests created by VAL ANTIPA.

	26-nov-1990	jds	modify to just register tables in starddb1
			part of getting tests and databases owned by
			testenv


	  16-09-93     barbh
		       Changed SEPPARAM_DDB to SEPPARAMDB. This makes the
		       star test consistent with testkit standards.

	   6-10-93     barbh
		       Changed test name to xda07.sep. All star init tests 
		       will use the xd identifier.
	  3-Nov-1999      (vande02) Added empty canon to confirm db connection
*/
? sql -s SEPPARAMDB 
<<

>>
* set autocommit on;\g
<<
~
>>
* drop link ddl_s1, ddl_p1, ddl_j1, ddl_sp1, ddl_spj1; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s1 as link from ddl_s with node=snode1, database=LDB1;\g
<<

>>
* register ddl_p1 as link from ddl_p with node=snode1, database=LDB1;\g
<<

>>
* register ddl_sp1 as link from ddl_sp with node=snode1, database=LDB1;\g
<<

>>
* register ddl_j1 as link from ddl_j with node=snode1, database=LDB1;\g
<<

>>
* register ddl_spj1 as link from ddl_spj with node=snode1, database=LDB1;\g
<<

>>
* drop link ddl_s2, ddl_p2, ddl_j2, ddl_sp2, ddl_spj2; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s2 as link from ddl_s with node=snode2, database=LDB2;\g
<<

>>
* register ddl_p2 as link from ddl_p with node=snode2, database=LDB2;\g
<<

>>
* register ddl_sp2 as link from ddl_sp with node=snode2, database=LDB2;\g
<<

>>
* register ddl_j2 as link from ddl_j with node=snode2, database=LDB2;\g
<<

>>
* register ddl_spj2 as link from ddl_spj with node=snode2, database=LDB2;\g
<<

>>
* drop link ddl_s3, ddl_p3, ddl_j3, ddl_sp3, ddl_spj3; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s3 as link from ddl_s with node=snode3, database=LDB3;\g
<<

>>
* register ddl_p3 as link from ddl_p with node=snode3, database=LDB3;\g
<<

>>
* register ddl_sp3 as link from ddl_sp with node=snode3, database=LDB3;\g
<<

>>
* register ddl_j3 as link from ddl_j with node=snode3, database=LDB3;\g
<<

>>
* register ddl_spj3 as link from ddl_spj with node=snode3, database=LDB3;\g
<<

>>
* drop link ddl_s4, ddl_p4, ddl_j4, ddl_sp4, ddl_spj4; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s4 as link from ddl_s with node=snode4, database=LDB4;\g
<<

>>
* register ddl_p4 as link from ddl_p with node=snode4, database=LDB4;\g
<<

>>
* register ddl_sp4 as link from ddl_sp with node=snode4, database=LDB4;\g
<<

>>
* register ddl_j4 as link from ddl_j with node=snode4, database=LDB4;\g
<<

>>
* register ddl_spj4 as link from ddl_spj with node=snode4, database=LDB4;\g
<<

>>
* drop link ddl_s5, ddl_p5, ddl_j5, ddl_sp5, ddl_spj5; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s5 as link from ddl_s with node=snode5, database=LDB5;\g
<<

>>
* register ddl_p5 as link from ddl_p with node=snode5, database=LDB5;\g
<<

>>
* register ddl_sp5 as link from ddl_sp with node=snode5, database=LDB5;\g
<<

>>
* register ddl_j5 as link from ddl_j with node=snode5, database=LDB5;\g
<<

>>
* register ddl_spj5 as link from ddl_spj with node=snode5, database=LDB5;\g
<<

>>
* drop link ddl_s6, ddl_p6, ddl_j6, ddl_sp6, ddl_spj6; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s6 as link from ddl_s with node=snode6, database=LDB6;\g
<<

>>
* register ddl_p6 as link from ddl_p with node=snode6, database=LDB6;\g
<<

>>
* register ddl_sp6 as link from ddl_sp with node=snode6, database=LDB6;\g
<<

>>
* register ddl_j6 as link from ddl_j with node=snode6, database=LDB6;\g
<<

>>
* register ddl_spj6 as link from ddl_spj with node=snode6, database=LDB6;\g
<<

>>
* drop link ddl_s7, ddl_p7, ddl_j7, ddl_sp7, ddl_spj7; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register ddl_s7 as link from ddl_s with node=snode7, database=LDB7;\g
<<

>>
* register ddl_p7 as link from ddl_p with node=snode7, database=LDB7;\g
<<

>>
* register ddl_sp7 as link from ddl_sp with node=snode7, database=LDB7;\g
<<

>>
* register ddl_j7 as link from ddl_j with node=snode7, database=LDB7;\g
<<

>>
* register ddl_spj7 as link from ddl_spj with node=snode7, database=LDB7;\g
<<

>>
* drop link v_ddl_s1, v_ddl_p1, v_ddl_j1, v_ddl_sp1, v_ddl_spj1; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not

		register views
::::::::::::::::::::::::::::::::::::::::::::::::::::::
*/
<<
~
>>
* register view v_ddl_s1 as link from v_ddl_s with node=snode1, database=LDB1;\g
<<

>>
* register view v_ddl_p1 as link from v_ddl_p with node=snode1, database=LDB1;\g
<<

>>
* register view v_ddl_sp1 as link from v_ddl_sp with node=snode1, database=LDB1;\g
<<

>>
* register view v_ddl_j1 as link from v_ddl_j with node=snode1, database=LDB1;\g
<<

>>
* register view v_ddl_spj1 as link from v_ddl_spj with node=snode1, database=LDB1;\g
<<

>>
* drop link v_ddl_s2, v_ddl_p2, v_ddl_j2, v_ddl_sp2, v_ddl_spj2; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s2 as link from v_ddl_s with node=snode2, database=LDB2;\g
<<

>>
* register view v_ddl_p2 as link from v_ddl_p with node=snode2, database=LDB2;\g
<<

>>
* register view v_ddl_sp2 as link from v_ddl_sp with node=snode2, database=LDB2;\g
<<

>>
* register view v_ddl_j2 as link from v_ddl_j with node=snode2, database=LDB2;\g
<<

>>
* register view v_ddl_spj2 as link from v_ddl_spj with node=snode2, database=LDB2;\g
<<

>>
* drop link v_ddl_s3, v_ddl_p3, v_ddl_j3, v_ddl_sp3, v_ddl_spj3; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s3 as link from v_ddl_s with node=snode3, database=LDB3;\g
<<

>>
* register view v_ddl_p3 as link from v_ddl_p with node=snode3, database=LDB3;\g
<<

>>
* register view v_ddl_sp3 as link from v_ddl_sp with node=snode3, database=LDB3;\g
<<

>>
* register view v_ddl_j3 as link from v_ddl_j with node=snode3, database=LDB3;\g
<<

>>
* register view v_ddl_spj3 as link from v_ddl_spj with node=snode3, database=LDB3;\g
<<

>>
* drop link v_ddl_s4, v_ddl_p4, v_ddl_j4, v_ddl_sp4, v_ddl_spj4; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s4 as link from v_ddl_s with node=snode4, database=LDB4;\g
<<

>>
* register view v_ddl_p4 as link from v_ddl_p with node=snode4, database=LDB4;\g
<<

>>
* register view v_ddl_sp4 as link from v_ddl_sp with node=snode4, database=LDB4;\g
<<

>>
* register view v_ddl_j4 as link from v_ddl_j with node=snode4, database=LDB4;\g
<<

>>
* register view v_ddl_spj4 as link from v_ddl_spj with node=snode4, database=LDB4;\g
<<

>>
* drop link v_ddl_s5, v_ddl_p5, v_ddl_j5, v_ddl_sp5, v_ddl_spj5; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s5 as link from v_ddl_s with node=snode5, database=LDB5;\g
<<

>>
* register view v_ddl_p5 as link from v_ddl_p with node=snode5, database=LDB5;\g
<<

>>
* register view v_ddl_sp5 as link from v_ddl_sp with node=snode5, database=LDB5;\g
<<

>>
* register view v_ddl_j5 as link from v_ddl_j with node=snode5, database=LDB5;\g
<<

>>
* register view v_ddl_spj5 as link from v_ddl_spj with node=snode5, database=LDB5;\g
<<

>>
* drop link v_ddl_s6, v_ddl_p6, v_ddl_j6, v_ddl_sp6, v_ddl_spj6; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s6 as link from v_ddl_s with node=snode6, database=LDB6;\g
<<

>>
* register view v_ddl_p6 as link from v_ddl_p with node=snode6, database=LDB6;\g
<<

>>
* register view v_ddl_sp6 as link from v_ddl_sp with node=snode6, database=LDB6;\g
<<

>>
* register view v_ddl_j6 as link from v_ddl_j with node=snode6, database=LDB6;\g
<<

>>
* register view v_ddl_spj6 as link from v_ddl_spj with node=snode6, database=LDB6;\g
<<

>>
* drop link v_ddl_s7, v_ddl_p7, v_ddl_j7, v_ddl_sp7, v_ddl_spj7; \g
/*
remove the prior registrations, if they exist
IGNORE the results - we just want to have the objects
registered anew, whether previously here or not
*/
<<
~
>>
* register view v_ddl_s7 as link from v_ddl_s with node=snode7, database=LDB7;\g
<<

>>
* register view v_ddl_p7 as link from v_ddl_p with node=snode7, database=LDB7;\g
<<

>>
* register view v_ddl_sp7 as link from v_ddl_sp with node=snode7, database=LDB7;\g
<<

>>
* register view v_ddl_j7 as link from v_ddl_j with node=snode7, database=LDB7;\g
<<

>>
* register view v_ddl_spj7 as link from v_ddl_spj with node=snode7, database=LDB7;\g
<<

>>
* \q
<<
~
>>


Ending at: 20-DEC-1990 13:48:18
