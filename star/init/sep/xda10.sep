/*
	Test Name: xda10.sep 
	Time: 8-JUN-1990 11:45:26.72
	User Name: TESTENV
 
	Test ID : XDA10 
	Module  : Star 
	Filename:
	Purpose	:
	Input Files  :
	Output Files :
	Database     : SEPPARAMDB
	Tables       :
	Synopsis     :
		register basic tables in ddb from 5 ldbs

	History	: 8-JUN-1990 11:45:26.72	Created		TESTENV Author
		 11-nov-1990 10:31a		mod		jds
				merged 6 reg scripts for transaction processing
				forced reg to/from LDB series, not TRANSLDB
				leave this set for TRANSDDB for now, though it
				  should work fine in any ddb with access to 
				  the LDB series.  NOTE that the interesting
				  mods to the EXECUTION of this transction
				  test come from using hetnet definitions
				  for the SNODEs.
		12/03/90			mod		jds
			edit for standard naming conventions, 
			re-canonize.

		01/04/93			mod		jds
			update for more "modern" nomenclature, and to
			correct the behavior; "create permit" has never
			worked in STAR nor was it intended to; this 
			function was also included in SVA01, so I just
			don't know why it's here.


	REQUIRES SEPPARAM_DDB
		VMS definition ' DEFINE SEPPARAM_DDB "starddb1/star" '

	This test expects a DDB in which these tables are NOT 
	already registered, as in a newly created ddb.

	But, it DROPS the LINK, anyway... Either it succeeds or we
	don't care.

	It REQUIRES LDB1 thru LDB5, containing tables tpf_j, tpf_p, 
	tpf_s, tpf_sp, tpf_spj. These come from the SETUP script 
	SVA01.SEP

	This script expects SNODE1 - SNODE5 defined, with a username and
		password entry for the user running it.
              28-jun-1992    alices     Changed sepparam_ddb to SEPPARAM_DDB

	  16-09-93     barbh
		       Changed SEPPARAM_DDB to SEPPARAMDB. This makes the
		       star test consistent with testkit standards.

	   6-10-93     barbh
		       Changed test name to xda10.sep. All star init tests 
		       will use the xd identifier.
	  3-Nov-1999      (vande02) Added empty canon to confirm db connection
*/
? sql -s SEPPARAMDB 
<<

>>
* drop link tpf_j; \g 
<<
~
>>
* drop link tpf_p; \g 
<<
~
>>
* drop link tpf_s; \g 
<<
~
>>
* drop link tpf_sp; \g 
<<
~
>>
* drop link tpf_spj; \g 
<<
~
>>
* drop link tpf_j1; \g 
<<
~
>>
* drop link tpf_p1; \g 
<<
~
>>
* drop link tpf_s1; \g 
<<
~
>>
* drop link tpf_sp1; \g 
<<
~
>>
* drop link tpf_spj1; \g 
<<
~
>>
* register table tpf_s1 as link from tpf_s with node=SNODE1,database=ldb1,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_p1 as link from tpf_p with node=SNODE1,database=ldb1,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_j1 as link from tpf_j with node=SNODE1,database=ldb1,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_sp1 as link from tpf_sp with node=SNODE1,database=ldb1,dbms=ING-
RES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_spj1 as link from tpf_spj with node=SNODE1,database=ldb1,dbms=I-
NGRES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* drop link tpf_j2; \g 
<<
~
>>
* drop link tpf_p2; \g 
<<
~
>>
* drop link tpf_s2; \g 
<<
~
>>
* drop link tpf_sp2; \g 
<<
~
>>
* drop link tpf_spj2; \g 
<<
~
>>
* register table tpf_s2 as link from tpf_s with node=SNODE2,database=ldb2,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_p2 as link from tpf_p with node=SNODE2,database=ldb2,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_j2 as link from tpf_j with node=SNODE2,database=ldb2,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_sp2 as link from tpf_sp with node=SNODE2,database=ldb2,dbms=ING-
RES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_spj2 as link from tpf_spj with node=SNODE2,database=ldb2,dbms=I-
NGRES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* drop link tpf_j3; \g 
<<
~
>>
* drop link tpf_p3; \g 
<<
~
>>
* drop link tpf_s3; \g 
<<
~
>>
* drop link tpf_sp3; \g 
<<
~
>>
* drop link tpf_spj3; \g 
<<
~
>>
* register table tpf_s3 as link from tpf_s with node=SNODE3,database=ldb3,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_p3 as link from tpf_p with node=SNODE3,database=ldb3,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_j3 as link from tpf_j with node=SNODE3,database=ldb3,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_sp3 as link from tpf_sp with node=SNODE3,database=ldb3,dbms=ING-
RES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_spj3 as link from tpf_spj with node=SNODE3,database=ldb3,dbms=I-
NGRES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* drop link tpf_j4; \g 
<<
~
>>
* drop link tpf_p4; \g 
<<
~
>>
* drop link tpf_s4; \g 
<<
~
>>
* drop link tpf_sp4; \g 
<<
~
>>
* drop link tpf_spj4; \g 
<<
~
>>
* register table tpf_s4 as link from tpf_s with node=SNODE4,database=ldb4,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_p4 as link from tpf_p with node=SNODE4,database=ldb4,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_j4 as link from tpf_j with node=SNODE4,database=ldb4,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_sp4 as link from tpf_sp with node=SNODE4,database=ldb4,dbms=ING-
RES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_spj4 as link from tpf_spj with node=SNODE4,database=ldb4,dbms=I-
NGRES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* drop link tpf_j5; \g 
<<
~
>>
* drop link tpf_p5; \g 
<<
~
>>
* drop link tpf_s5; \g 
<<
~
>>
* drop link tpf_sp5; \g 
<<
~
>>
* drop link tpf_spj5; \g 
<<
~
>>
* register table tpf_s5 as link from tpf_s with node=SNODE5,database=ldb5,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_p5 as link from tpf_p with node=SNODE5,database=ldb5,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_j5 as link from tpf_j with node=SNODE5,database=ldb5,dbms=INGRE-
S;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_sp5 as link from tpf_sp with node=SNODE5,database=ldb5,dbms=ING-
RES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* register table tpf_spj5 as link from tpf_spj with node=SNODE5,database=ldb5,dbms=I-
NGRES;	\g
<<
Executing . . .

continue
* 
>>
<<
>>
* \q 
<<
~
>>


Ending at:  3-DEC-1990 11:53:01
