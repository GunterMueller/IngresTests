/*
	Test Name: sza09.sep
	Time: Wed May 23 15:45:49 1990
	User Name: testenv
 
	Test ID : sza09
	Module  : 
	Filename: sza09.sep
	Purpose	: Test syntax of delete, insert and update on rules.	
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : dull, log
	Synopsis     : Test that the delimited id named registrations will
		       run the dbprocs. This should fail around 31 or so.
	Setup        : sza00.sep

	History	: 
           	8-Oct-1993	(barbh)
			Created dbprocedure test that is registered to Star
			database. The dbprocedures are executed in this test.
           7-Jan-1994	(Author)
          17-Jan-1994	(Author)
	   4-Apr-1996   (clate01)
			Modified canons to ignore sepcc
	  13-Apr-2000	(vande02)  Move "remove"'s out of main processing to
                        eliminate spurious DIFS; especially on re-run. Use
                        new SEPPARAM settings (see runstar).
	  19-Sep-2007 	(boija02)
			Trying to reduce compiler warnings. Renamed sdrstub.c to
			better reflect its content & changed return type to void
			when functions don't return anything.
*/
? cp @file(TST_TESTOOLS,driver,driver.sc) driver.sc 
<<
>>
? cp @file(ing_tst,star,qryproc,src,sdrstub.c) sdrstub.c 
<<
>>
? cp @file(ing_tst,star,qryproc,src,sdbproch.sc) sdbproch.sc 
<<
>>
? cp @file(ing_tst,star,qryproc,src,sdbproc.sc) sdbproc.sc 
<<
>>
? cp @file(ing_tst,star,qryproc,src,ingclude.sc) ingclude.sc 
<<
>>
? cp @file(ing_tst,star,qryproc,src,sdrel.c) sdrel.c 
<<
>>
? fill sza09.sc 
!!
/*
**	sza09.sc
*/

#define SZA09

#include "sdrstub.c"

#include <stdio.h>

exec sql include 'sdbproch.sc';

/***********/
/* sza09() */
/***********/

void
sza09()
{
/* Connect to local database and drop/create procedure. */

     exec sql commit;
     exec sql direct connect with node = snode1, database = ldb1;

	build_tables("dull");
	build_tables("log");

	print_tables(LOG);
 	print_tables(DULL);

     exec sql direct disconnect;

exec sql register table dull as link from dull with node = snode1, database = ldb1;
exec sql register table log as link from log with node = snode1, database = ldb1;

/* Do deletes,updates,inserts and fire off db procedure from star database */


	exec sql delete from dull where dull = 1;

	exec sql execute procedure logger1 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql insert into dull ( dull ) values ( 1 );

	exec sql execute procedure logger2 ( txt_buf = 'insert on dull' );

	exec sql commit;

	exec sql update dull set dull = 11 where dull = 1;

        exec sql execute procedure logger3 ( txt_buf = 'update on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 2;
   	
	exec sql execute procedure logger4 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 3;

	exec sql execute procedure logger5 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 4;

	exec sql execute procedure logger6 ( txt_buf = 'delete on dull' ); 

	exec sql commit;

	exec sql delete from dull where dull = 5;

	exec sql execute procedure logger7 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 1;

	exec sql execute procedure logger8 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql insert into dull ( dull ) values ( 1 );

	exec sql execute procedure logger9 ( txt_buf = 'insert on dull' );

	exec sql commit;

	exec sql update dull set dull = 11 where dull = 1;

        exec sql execute procedure logger10 ( txt_buf = 'update on dull' );
	
	exec sql commit;

	exec sql delete from dull where dull = 2;

	exec sql execute procedure logger11 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 3;

	exec sql execute procedure logger12 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 4;

	exec sql execute procedure logger13 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 5;

	exec sql execute procedure logger14 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 1;

	exec sql execute procedure logger15 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql insert into dull ( dull ) values ( 1 );

	exec sql execute procedure logger16 ( txt_buf = 'insert on dull' );

	exec sql commit;

	exec sql update dull set dull = 11 where dull = 1;

        exec sql execute procedure logger17 ( txt_buf = 'update on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 2;

	exec sql execute procedure logger18 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 3;

	exec sql execute procedure logger19 ( txt_buf = 'delete on dull' );
	
	exec sql commit;

	exec sql delete from dull where dull = 4;

	exec sql execute procedure logger20 ( txt_buf = 'delete on dull' ); 

	exec sql commit;

	exec sql delete from dull where dull = 5;

	exec sql execute procedure logger21 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 1;

	exec sql execute procedure logger22 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql insert into dull ( dull ) values ( 1 );

	exec sql execute procedure logger23 ( txt_buf = 'insert on dull' );

	exec sql commit;

	exec sql update dull set dull = 11 where dull = 1;

        exec sql execute procedure logger24 ( txt_buf = 'update on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 2;

	exec sql execute procedure logger25 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 3;

	exec sql execute procedure logger26 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 4;

	exec sql execute procedure logger27 ( txt_buf = 'delete on dull' ); 

	exec sql commit;

	exec sql delete from dull where dull = 5;

	exec sql execute procedure logger28 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql delete from dull where dull = 1;

	exec sql execute procedure logger29 ( txt_buf = 'delete on dull' );

	exec sql commit;

	exec sql insert into dull ( dull ) values ( 1 );

	exec sql execute procedure logger30 ( txt_buf = 'insert on dull' );

	exec sql commit;

	exec sql update dull set dull = 11 where dull = 1;

        exec sql execute procedure logger31 ( txt_buf = 'update on dull' );

	exec sql commit;
	
	print_tables(DULL);
	print_tables(LOG);

} /* sza09() */
!!
? sepesqlc sza09.sc 
<<
ESQL sza09.sc:
>>
? sepcc sza09.c 
<<
~
>>
? sepesqlc driver.sc 
<<
ESQL driver.sc:
>>
? sepcc driver.c 
<<
~
>>
? sepesqlc sdbproc.sc 
<<
ESQL sdbproc.sc:
>>
? sepcc sdbproc.c 
<<
~
>>
? sepcc sdrel.c 
<<
~
>>
? seplnk driver sdrel sdbproc sza09 
<<
>>
? sql SEPPARAMDB -s
<<

>>
* remove table dull \g
<<
~
>>
* remove table log \g
<<
~
>>
* \q
<<
>>
? sql SEPPARAMDB1 -s 
<<

>>
* drop table dull, log;\g
<<
~
>>
* \q 
<<
>>
? run driver.exe SEPPARAMDRIVERDB -tsza09 
<<
TEST DRIVER
source: driver.sc (Fri May 17 00:00:00 1991)
dbproc star tests


XX-----------------XX
XX tests scheduled XX
XX-----------------XX
   sza09
XX-----------------XX

connecting with database...

XX running test sza09 XX

  dropping dull table...
E_US0AC1 DROP: 'dull' does not exist or is not owned by you.
    (Mon Jan 17 17:00:21 1994)
  creating dull table...
  dropping log table...
E_US0AC1 DROP: 'log' does not exist or is not owned by you.
    (Mon Jan 17 17:00:24 1994)
  creating log table...
contents of log:
----------------
----------------
contents of dull:
-----------------
 dull = 1
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
-----------------
MESSAGE 0: delete on dull
MESSAGE 0: insert on dull
MESSAGE 0: update on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: insert on dull
MESSAGE 0: update on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: insert on dull
MESSAGE 0: update on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: insert on dull
MESSAGE 0: update on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: delete on dull
MESSAGE 0: insert on dull
MESSAGE 0: update on dull
contents of dull:
-----------------
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 11
 dull = 11
 dull = 11
 dull = 11
 dull = 11
-----------------
contents of log:
----------------
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = delete on dull
 entry = insert on dull
 entry = insert on dull
 entry = insert on dull
 entry = insert on dull
 entry = insert on dull
 entry = update on dull
 entry = update on dull
 entry = update on dull
 entry = update on dull
 entry = update on dull
----------------

disconnecting with database...
>>
? delete driver.exe 
<<
~
>>
? delete driver.obj 
<<
~
>>
? delete driver.o 
<<
~
>>
? delete driver.sc 
<<
~
>>
? delete driver.c 
<<
~
>>
? delete sdrstub.c 
<<
~
>>
? delete sdrel.c 
<<
~
>>
? delete sdrel.obj 
<<
~
>>
? delete sdrel.o 
<<
~
>>
? delete ingclude.sc 
<<
~
>>
? delete ingclude.c 
<<
~
>>
? delete sdbproch.sc 
<<
~
>>
? delete sdbproch.c 
<<
~
>>
? delete sdbproc.sc 
<<
~
>>
? delete sdbproc.c 
<<
~
>>
? delete sdbproc.obj 
<<
~
>>
? delete sdbproc.o 
<<
~
>>
? delete sza09.c 
<<
~
>>
? delete sza09.obj 
<<
~
>>
? delete sza09.o 
<<
~
>>


Ending at: Mon Jan 17 17:08:53 1994
