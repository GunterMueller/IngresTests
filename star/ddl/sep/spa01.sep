/*
Copyright (c) 2007 Ingres Corporation
 

	Test Name: SPA01
	Time: Thu Dec 26 15:17:10 1991
	User Name: 
 
	Test ID : SPA01
	Module  : star/ddl
	Filename: SPA01.SEP
	Purpose	: COPY testing
	Input Files  :
	Output Files :
	Database     :	LDB1 and starDDB1
	Tables       :
	Synopsis     :

	Cursory testing of copy into/from using empty and filled
	tables, files, views, registered tables.
	This test deals only with character-type data.

	SEPPARAM_DDB must be appropriately defined. ex. 'starddb1/star'

	History:
	  26-Dec-1991	Created	ec
	  08-Oct-1993   Changed SEPPARAM_DDB to SEPPARAMDB. Follows Testkit
				  standards.
	  26-Oct-2004	(wu$ca01) Add an alternate canon for Windows on copying
				  spa01f3.
          30-Jan-2006	(boija02) Updated copyright info for Ingres Corp.
          22-Jan-2007	(vande02) Updated copyright and canon where expected
				  error E_CO0022 now includes E_CO002A COPY:
				  Copy has been aborted.  Aligned history.
*/
? fill spa01f.dat 
!!
n1,one
n2,two
n3,three
!!
? fill spa01e.dat 
!!
!!
? sql -s SEPPARAMDB 
<<

>>
* set autocommit on;\g
<<

>>
* drop table spa01emt; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01emt' does not exist or is not owned by you.
    (Fri Dec 27 12:04:44 1991)

>>
* drop table spa01f1; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01f1' does not exist or is not owned by you.
    (Fri Dec 27 12:04:53 1991)

>>
* drop table spa01f2; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01f2' does not exist or is not owned by you.
    (Fri Dec 27 12:09:29 1991)

>>
* drop table spa01f3; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01f3' does not exist or is not owned by you.
    (Fri Dec 27 12:09:29 1991)

>>
* drop table spa01r1; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01r1' does not exist or is not owned by you.
    (Fri Dec 27 12:04:58 1991)

>>
* drop view spa01v; \g 
<<
>>
<<
E_US0AC1 DROP: 'spa01v' does not exist or is not owned by you.
    (Fri Dec 27 11:39:55 1991)

>>
* create table spa01emt (eno char(6), ename char(10)); \g 
<<
>>
* create table spa01f1 (fno char(6), fname char(10)); \g 
<<
>>
* create table spa01f2 (f2no char(6), f2name char(10)); \g 
<<
>>
* create table spa01f3 (f3no char(6), f3name char(10)); \g 
<<
>>
* copy noexist (no=c0comma, name=c0nl) from 'spa01f.dat'; \g 
<<
E_US0845 Table 'noexist' does not exist or is not owned by you.
    (Thu Dec 26 15:25:35 1991)

>>
* copy spa01f1 (fno=c0comma, fname=c0nl) from 'noexist'; \g 
<<
E_CO0005 COPY: can't open file 'noexist'.

E_CO0022 COPY: Internal error initializing COPY.

E_CO002A COPY: Copy has been aborted.
>>
* copy spa01f3 (f3no=c0comma, f3name=c0comma) from 'spa01f.dat'; \g 
<<
E_CO0040 COPY: Unexpected end of user data while filling domain f3name for
    row 2.

E_CO002A COPY: Copy has been aborted.

>>
<<
E_CO0040 COPY: Unexpected end of user data while filling domain f3name for
    row 2.

E_CO0015 COPY: Warning: 1 character domains were truncated when copied
    from the file to character type columns in the table.

E_CO002A COPY: Copy has been aborted.

>>
* select * from spa01f3 order by f3no; \g 
/*
On VMS and occasionally on UNIX, this select fails due to a problem with
the previous copy incorrectly handling an incorrect data format.
A table ownership error is generated, but the table is actually deleted.
						 See bug #41690

*/
<<

+------+----------+
|f3no  |f3name    |
+------+----------+
+------+----------+
(0 rows)
>>
* select * from spa01emt order by eno; \g 
<<

+------+----------+
|eno   |ename     |
+------+----------+
+------+----------+
(0 rows)
>>
* copy spa01f1 () from 'spa01e.dat'; \g 
<<
(0 rows)
>>
* select * from spa01f1 order by fno; \g
<<

+------+----------+
|fno   |fname     |
+------+----------+
+------+----------+
(0 rows)
>>
* copy spa01f1 (fno=c0comma, fname=c0nl) from 'spa01f.dat'; \g 
<<
(3 rows)
>>
* select * from spa01f1 order by fno; \g 
<<

+------+----------+
|fno   |fname     |
+------+----------+
|n1    |one       |
|n2    |two       |
|n3    |three     |
+------+----------+
(3 rows)
>>
* copy spa01f1 () from 'spa01e.dat'; \g 
<<
(0 rows)
>>
* select * from spa01f1 order by fno; \g
<<

+------+----------+
|fno   |fname     |
+------+----------+
|n1    |one       |
|n2    |two       |
|n3    |three     |
+------+----------+
(3 rows)
>>
* copy spa01f2 (f2no=c0comma, f2name=c0nl) from 'spa01e.dat'; \g 
<<
(0 rows)
>>
* select * from spa01f2 order by f2no; \g 
<<

+------+----------+
|f2no  |f2name    |
+------+----------+
+------+----------+
(0 rows)
>>
* copy spa01f2 (f2no=c0comma, f2name=c0nl) from 'spa01f.dat'; \g 
<<
(3 rows)
>>
* copy spa01f2 (f2no=c0comma, f2name=c0nl) from 'spa01f.dat'; \g 
<<
(3 rows)
>>
* select * from spa01f2 order by f2no; \g 
<<

+------+----------+
|f2no  |f2name    |
+------+----------+
|n1    |one       |
|n1    |one       |
|n2    |two       |
|n2    |two       |
|n3    |three     |
|n3    |three     |
+------+----------+
(6 rows)
>>
* direct connect with node=snode1,database=LDB1,dbms=ingres; \g
<<
>>
* drop table spa01c; \g
<<
E_US0AC1 DROP: 'spa01c' does not exist or is not owned by you.
    (Fri Dec 27 11:40:24 1991)

>>
<<
>>
* create table spa01c (cno char(6), cname char(10)); \g
<<
>>
* direct disconnect ; \g
<<
>>
* register spa01r1 as link from spa01c with node=snode1,database=LDB1,dbms=ingres; \-
g
<<
>>
* select * from spa01r1 order by cno; \g
<<

+------+----------+
|cno   |cname     |
+------+----------+
+------+----------+
(0 rows)
>>
* copy table spa01r1 (cno=c0comma, cname=c0nl) from 'spa01f.dat'; \g
<<
(3 rows)
>>
* select * from spa01r1 order by cno; \g
<<

+------+----------+
|cno   |cname     |
+------+----------+
|n1    |one       |
|n2    |two       |
|n3    |three     |
+------+----------+
(3 rows)
>>
* copy spa01r1 () into 'spa01r.out'; \g 
<<
(3 rows)
>>
* remove table spa01r1; \g
<<
>>
* copy table spa01r1 (cno=c0comma, cname=c0nl) from 'spa01f.dat'; \g
<<
E_US0845 Table 'spa01r1' does not exist or is not owned by you.
    (Mon Jan  6 13:30:18 1992)

>>
* copy table noexist () into 'noexist.out'; \g 
<<
E_US0845 Table 'noexist' does not exist or is not owned by you.
    (Thu Dec 26 16:43:14 1991)

>>
* copy table spa01emt () into 'spa01e.out'; \g
<<
(0 rows)
>>
* create view spa01v as select * from spa01f2; \g
<<
>>
* select * from spa01v order by f2no; \g
<<

+------+----------+
|f2no  |f2name    |
+------+----------+
|n1    |one       |
|n1    |one       |
|n2    |two       |
|n2    |two       |
|n3    |three     |
|n3    |three     |
+------+----------+
(6 rows)
>>
* copy spa01v() into 'spa01v.out'; \g 
<<
E_US16BA COPY: 'spa01v' is a view and can't be copied.
    (Fri Dec 27 08:54:31 1991)

>>
* copy spa01v (cno=c0comma, cname=c0nl) from 'spa01f.dat'; \g 
<<
E_US16BA COPY: 'spa01v' is a view and can't be copied.
    (Mon Jan  6 13:53:36 1992)

>>
* \q 
<<
>>
? delete spa01e.out 
<<
file was deleted
>>
? delete spa01r.out 
<<
file was deleted
>>


Ending at: Thu Jan  9 10:20:24 1992
