/*
  Copyright (c) 2010 Ingres Corporation
    Test ID : geo13.sep
    Module :
    Filename: geo13.sep
    Purpose : To test OGC 1.1 SQL functions - part 5
    Input Files :
    Output Files :
    Database : SEPPARAMDB
    Tables : geo13a/b/c/d/e/f/g
    Synopsis : Tests OGC 1.1 SQL functions - part 5
               Functions tested:
               IsClosed, IsRing, NumPoints,
               PointN, Area, Centroid,
               PointOnSurface, InteriorRingN,
               ExteriorRing, NumInteriorRing
    History: 06-APR-2010 Created by Alex Trofast
             19-OCT-2010 Change spatial types to use the ST_ prefix.

*/
? fill geo13ddl.sql 
!!
CREATE TABLE geo13a (fid INT NOT NULL PRIMARY KEY, shape ST_POINT);
CREATE TABLE geo13b (fid INT NOT NULL PRIMARY KEY, shape ST_POLYGON);
CREATE TABLE geo13c (fid INT NOT NULL PRIMARY KEY, shape ST_LINESTRING);
CREATE TABLE geo13d (fid INT NOT NULL PRIMARY KEY, shape ST_MULTIPOINT);
CREATE TABLE geo13e (fid INT NOT NULL PRIMARY KEY, shape ST_MULTIPOLYGON);
CREATE TABLE geo13f (fid INT NOT NULL PRIMARY KEY, shape ST_MULTILINESTRING);
CREATE TABLE geo13g (fid INT NOT NULL PRIMARY KEY, shape ST_GEOMETRYCOLLECTION);
\g
INSERT INTO geo13a VALUES (1, PointFromText('POINT(1 1)'));
INSERT INTO geo13a VALUES (2, PointFromText('POINT EMPTY'));
INSERT INTO geo13b VALUES (1, PolyFromText('POLYGON((0 0, 4 4, 4 0, 0 0), (1 1, 2 2,-
 2 1, 1 1))'));
INSERT INTO geo13b VALUES (2, PolyFromText('POLYGON((1 1, 5 5, 6 6, 7 9, 10 12, 5 10-
, 1 1))'));
INSERT INTO geo13c VALUES (1, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 4 0, 0 4)-
'));
INSERT INTO geo13c VALUES (2, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 1 1)'));
INSERT INTO geo13c VALUES (3, LineFromText('LINESTRING(0 0, 0 4, 4 4, 4 0, 0 0)'));
INSERT INTO geo13d VALUES (1, MPointFromText('MULTIPOINT(1 1, 2 2, 3 3)'));
INSERT INTO geo13d VALUES (2, MPointFromText('MULTIPOINT(1 1, 3 3)'));
INSERT INTO geo13e VALUES (1, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)-
), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo13e VALUES (2, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 0 0), (4 -
4, 4 0, 5 5, 4 4)), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo13f VALUES (1, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6))'));
INSERT INTO geo13f VALUES (2, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6), (10 10, 12 12, 6 7, 10 10))'));
INSERT INTO geo13g VALUES (1, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), POLYG-
ON((1 1, 2 2, 3 3, 4 4, 1 1)), LINESTRING(1 1, 2 2, 4 4, 5 5))'));
INSERT INTO geo13g VALUES (2, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINES-
TRING(1 1, 2 2, 4 4, 5 5))'));
commit;
\g
!!
<<
>>
? sql SEPPARAMDB -S 
<<
>>
* \i geo13ddl.sql
<<
>>
* SELECT ST_IsClosed(shape) FROM geo13a ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_IsClosed(shape) FROM geo13b ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_IsClosed(shape) FROM geo13c ORDER BY fid;\g
<<
col1          
            0 
            1 
            1 
>>
* SELECT ST_IsClosed(shape) FROM geo13d ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_IsClosed(shape) FROM geo13e ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_IsClosed(shape) FROM geo13f ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_IsClosed(shape) FROM geo13g ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_IsRing(shape) FROM geo13a ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:16 2010)

>>
* SELECT ST_IsRing(shape) FROM geo13b ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:17 2010)

>>
* SELECT ST_IsRing(shape) FROM geo13c ORDER BY fid;\g
<<
col1          
            0 
            0 
            1 
>>
* SELECT ST_IsRing(shape) FROM geo13d ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:18 2010)

>>
* SELECT ST_IsRing(shape) FROM geo13e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:18 2010)

>>
* SELECT ST_IsRing(shape) FROM geo13f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:19 2010)

>>
* SELECT ST_IsRing(shape) FROM geo13g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_isring: Only
    LineString is allowed.
    (Tue Apr  6 10:48:20 2010)

>>
* SELECT ST_NumPoints(shape) FROM geo13a ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumPoints(shape) FROM geo13b ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumPoints(shape) FROM geo13c ORDER BY fid;\g
<<
col1          
            6 
            5 
            5 
>>
* SELECT ST_NumPoints(shape) FROM geo13d ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumPoints(shape) FROM geo13e ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumPoints(shape) FROM geo13f ORDER BY fid;\g
<<
col1          
            3 
            3 
>>
* SELECT ST_NumPoints(shape) FROM geo13g ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13a ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13b ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 6)) FROM geo13c ORDER BY fid;\g
<<
col1                             
 POINT (0 4)                      
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13d ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13e ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13f ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_PointN(shape, 1)) FROM geo13g ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT ST_Area(shape) FROM geo13a ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Area(shape) FROM geo13b ORDER BY fid;\g
<<
col1        
      7.500 
     20.500 
>>
* SELECT ST_Area(shape) FROM geo13c ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
      0.000 
>>
* SELECT ST_Area(shape) FROM geo13d ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Area(shape) FROM geo13e ORDER BY fid;\g
<<
col1        
     17.000 
      7.000 
>>
* SELECT ST_Area(shape) FROM geo13f ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Area(shape) FROM geo13g ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13a ORDER BY fid;\g
<<
col1                             
 POINT (1 1)                      
 GEOMETRYCOLLECTION EMPTY         
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13b ORDER BY fid;\g
<<
col1                             
 POINT (2.7333333333333334 1.3333333333333333) 
 POINT (5.0731707317073171 7.1463414634146343) 
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13c ORDER BY fid;\g
<<
col1                             
 POINT (2.7281790014470086 2.1526185198263588) 
 POINT (2.5 2.5)                  
 POINT (2 2)                      
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13d ORDER BY fid;\g
<<
col1                             
 POINT (2 2)                      
 POINT (2 2)                      
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13e ORDER BY fid;\g
<<
col1                             
 POINT (1.9705882352941178 1.9705882352941178) 
 POINT (0.5 2.4047619047619047)   
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13f ORDER BY fid;\g
<<
col1                             
 POINT (3.5 3.5)                  
 POINT (7.5698481032945164 7.8706212947622944) 
>>
* SELECT AsText(ST_Centroid(shape)) FROM geo13g ORDER BY fid;\g
<<
col1                             
 GEOMETRYCOLLECTION EMPTY         
 POINT (3 3)                      
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13a ORDER BY fid;\g
<<
col1                             
 POINT (1 1)                      
 GEOMETRYCOLLECTION EMPTY         
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13b ORDER BY fid;\g
<<
col1                             
 POINT (3 2)                      
 POINT (4.8055555555555554 6.5)   
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13c ORDER BY fid;\g
<<
col1                             
 POINT (2 2)                      
 POINT (2 2)                      
 POINT (0 4)                      
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13d ORDER BY fid;\g
<<
col1                             
 POINT (2 2)                      
 POINT (1 1)                      
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: PointOnSurface: Failed
    to get PointOnSurface.
    (Tue Apr  6 10:52:57 2010)

>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13f ORDER BY fid;\g
<<
col1                             
 POINT (5 5)                      
 POINT (6 7)                      
>>
* SELECT AsText(ST_PointOnSurface(shape)) FROM geo13g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: PointOnSurface: Failed
    to get PointOnSurface.
    (Tue Apr  6 15:33:04 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13a ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:39:54 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13b ORDER BY fid;\g
<<
col1                             
 LINESTRING (1 1, 2 2, 2 1, 1 1)  
                                  
>>
* SELECT AsText(ST_InteriorRingN(shape, 6)) FROM geo13c ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:00 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13d ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:01 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:02 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:02 2010)

>>
* SELECT AsText(ST_InteriorRingN(shape, 1)) FROM geo13g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_interiorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:03 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13a ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:04 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13b ORDER BY fid;\g
<<
col1                             
 LINESTRING (0 0, 4 4, 4 0, 0 0)  
 LINESTRING (1 1, 5 5, 6 6, 7 9, 10 12, 5 10, 1 1) 
>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13c ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:10 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13d ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:13 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:13 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:14 2010)

>>
* SELECT AsText(ST_ExteriorRing(shape)) FROM geo13g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_exteriorring: Only
    Polygon allowed.
    (Wed Apr  7 08:40:15 2010)

>>
* SELECT NumInteriorRing(shape) FROM geo13a ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT NumInteriorRing(shape) FROM geo13b ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT NumInteriorRing(shape) FROM geo13c ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT NumInteriorRing(shape) FROM geo13d ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT NumInteriorRing(shape) FROM geo13e ORDER BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT NumInteriorRing(shape) FROM geo13f ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT NumInteriorRing(shape) FROM geo13g ORDER BY fid;\g
<<
col1          
              
              
>>
*\q
<<
>>


Ending at: Tue May  4 07:36:59 2010
