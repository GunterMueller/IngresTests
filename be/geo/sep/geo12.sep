/*
  Copyright (c) 2010 Ingres Corporation
    Test ID : geo12.sep
    Module :
    Filename: geo12.sep
    Purpose : To test OGC 1.1 SQL functions - part 4
    Input Files :
    Output Files :
    Database : SEPPARAMDB
    Tables : geo12a/b/c/d/e/f/g
    Synopsis : Tests OGC 1.1 SQL functions - part 4
               Functions tested:
               NumGeometries, GeometryN, X, Y,
               Length, StartPoint, EndPoint
    History: 23-MAR-2010 Created by Alex Trofast

*/
? fill geo12ddl.sql 
!!
CREATE TABLE geo12a (fid INT NOT NULL PRIMARY KEY, shape POINT);
CREATE TABLE geo12b (fid INT NOT NULL PRIMARY KEY, shape POLYGON);
CREATE TABLE geo12c (fid INT NOT NULL PRIMARY KEY, shape LINESTRING);
CREATE TABLE geo12d (fid INT NOT NULL PRIMARY KEY, shape MULTIPOINT);
CREATE TABLE geo12e (fid INT NOT NULL PRIMARY KEY, shape MULTIPOLYGON);
CREATE TABLE geo12f (fid INT NOT NULL PRIMARY KEY, shape MULTILINESTRING);
CREATE TABLE geo12g (fid INT NOT NULL PRIMARY KEY, shape GEOMETRYCOLLECTION);
\g
INSERT INTO geo12a VALUES (1, PointFromText('POINT(1 1)'));
INSERT INTO geo12a VALUES (2, PointFromText('POINT EMPTY'));
INSERT INTO geo12b VALUES (1, PolyFromText('POLYGON((1 1, 2 2, 3 3, 4 4, 1 1))'));
INSERT INTO geo12b VALUES (2, PolyFromText('POLYGON((1 1, 5 5, 6 6, 7 9, 10 12, 5 10-
, 1 1))'));
INSERT INTO geo12c VALUES (1, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 4 0, 0 4)-
'));
INSERT INTO geo12c VALUES (2, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 1 1)'));
INSERT INTO geo12d VALUES (1, MPointFromText('MULTIPOINT(1 1, 2 2, 3 3)'));
INSERT INTO geo12d VALUES (2, MPointFromText('MULTIPOINT(1 1, 3 3)'));
INSERT INTO geo12e VALUES (1, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)-
), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo12e VALUES (2, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 0 0), (4 -
4, 4 0, 5 5, 4 4)), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo12f VALUES (1, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6))'));
INSERT INTO geo12f VALUES (2, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6), (10 10, 12 12, 6 7, 10 10))'));
INSERT INTO geo12g VALUES (1, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), POLYG-
ON((1 1, 2 2, 3 3, 4 4, 1 1)), LINESTRING(1 1, 2 2, 4 4, 5 5))'));
INSERT INTO geo12g VALUES (2, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINES-
TRING(1 1, 2 2, 4 4, 5 5))'));
commit;
\g
!!
<<
>>
? sql SEPPARAMDB -S 
<<
>>
* \i geo12ddl.sql
<<
>>
* SELECT ST_NumGeometries(shape) from geo12a ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumGeometries(shape) from geo12b ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumGeometries(shape) from geo12c ORDER BY fid;\g
<<
col1          
              
              
>>
* SELECT ST_NumGeometries(shape) from geo12d ORDER BY fid;\g
<<
col1          
            3 
            2 
>>
* SELECT ST_NumGeometries(shape) from geo12e ORDER BY fid;\g
<<
col1          
            2 
            2 
>>
* SELECT ST_NumGeometries(shape) from geo12f ORDER BY fid;\g
<<
col1          
            2 
            3 
>>
* SELECT ST_NumGeometries(shape) from geo12g ORDER BY fid;\g
<<
col1          
            3 
            2 
>>
* SELECT AsText(ST_GeometryN(shape, 1)) from geo12a ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_GeometryN(shape, 1)) from geo12b ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_GeometryN(shape, 1)) from geo12c ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_GeometryN(shape, 2)) from geo12d ORDER BY fid;\g
<<
col1                             
 POINT (2 2)                      
 POINT (3 3)                      
>>
* SELECT AsText(ST_GeometryN(shape, 2)) from geo12e ORDER BY fid;\g
<<
col1                             
 POLYGON ((1 1, 1 2, 2 2, 2 1, 1 1)) 
 POLYGON ((1 1, 1 2, 2 2, 2 1, 1 1)) 
>>
* SELECT AsText(ST_GeometryN(shape, 3)) from geo12f ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_GeometryN(shape, 2)) from geo12g ORDER BY fid;\g
<<
col1                             
 POLYGON ((1 1, 2 2, 3 3, 4 4, 1 1)) 
 LINESTRING (1 1, 2 2, 4 4, 5 5)  
>>
* SELECT ST_X(shape) from geo12a ORDER BY fid;\g
<<
col1        
      1.000 
            
>>
* SELECT ST_X(shape) from geo12b ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:24 2010)

>>
* SELECT ST_X(shape) from geo12c ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:25 2010)

>>
* SELECT ST_X(shape) from geo12d ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:25 2010)

>>
* SELECT ST_X(shape) from geo12e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:26 2010)

>>
* SELECT ST_X(shape) from geo12f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:27 2010)

>>
* SELECT ST_X(shape) from geo12g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_x: Only
    Point is allowed.
    (Tue Apr  6 10:29:28 2010)

>>
* SELECT ST_Y(shape) from geo12a ORDER BY fid;\g
<<
col1        
      1.000 
            
>>
* SELECT ST_Y(shape) from geo12b ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:29 2010)

>>
* SELECT ST_Y(shape) from geo12c ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:30 2010)

>>
* SELECT ST_Y(shape) from geo12d ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:31 2010)

>>
* SELECT ST_Y(shape) from geo12e ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:32 2010)

>>
* SELECT ST_Y(shape) from geo12f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:33 2010)

>>
* SELECT ST_Y(shape) from geo12g ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: adu_point_y: Only
    Point is allowed.
    (Tue Apr  6 10:29:33 2010)

>>
* SELECT ST_Length(shape) from geo12a ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Length(shape) from geo12b ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Length(shape) from geo12c ORDER BY fid;\g
<<
col1        
     13.899 
      8.485 
>>
* SELECT ST_Length(shape) from geo12d ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Length(shape) from geo12e ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT ST_Length(shape) from geo12f ORDER BY fid;\g
<<
col1        
      5.657 
     21.296 
>>
* SELECT ST_Length(shape) from geo12g ORDER BY fid;\g
<<
col1        
      0.000 
      0.000 
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12a ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12b ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12c ORDER BY fid;\g
<<
col1                             
 POINT (1 1)                      
 POINT (1 1)                      
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12d ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12e ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_StartPoint(shape)) from geo12f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: StartPoint: Failed to
    get point on Curve.
    (Tue Apr  6 10:29:43 2010)

>>
* SELECT AsText(ST_StartPoint(shape)) from geo12g ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12a ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12b ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12c ORDER BY fid;\g
<<
col1                             
 POINT (0 4)                      
 POINT (1 1)                      
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12d ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12e ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
* SELECT AsText(ST_EndPoint(shape)) from geo12f ORDER BY fid;\g
<<
E_AD5600 An error has occured in Ingres Geospatial: EndPoint: Failed to
    get point on Curve.
    (Tue Apr  6 10:29:51 2010)

>>
* SELECT AsText(ST_EndPoint(shape)) from geo12g ORDER BY fid;\g
<<
col1                             
                                  
                                  
>>
*\q
<<
>>


Ending at: Tue May  4 07:36:32 2010
