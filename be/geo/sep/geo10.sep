/*
  Copyright (c) 2010 Ingres Corporation
    Test ID : geo10.sep
    Module :
    Filename: geo10.sep
    Purpose : To test OGC 1.1 SQL functions - part 2
    Input Files :
    Output Files :
    Database : SEPPARAMDB
    Tables : geo10a/b/c/d/e/f/g
    Synopsis : Tests OGC 1.1 SQL functions - part 2
               Functions tested:
               Equals, Disjoint, Intersects,
               Touches, Crosses, Within,
               Contains, Overlaps
    History: 23-MAR-2010 Created by Alex Trofast
          18-Oct-2010	(troal01) Fixed for WITHIN change
*/
? fill geo10ddl.sql 
!!
CREATE TABLE geo10a (fid INT NOT NULL PRIMARY KEY, shape POINT);
CREATE TABLE geo10b (fid INT NOT NULL PRIMARY KEY, shape POLYGON);
CREATE TABLE geo10c (fid INT NOT NULL PRIMARY KEY, shape LINESTRING);
CREATE TABLE geo10d (fid INT NOT NULL PRIMARY KEY, shape MULTIPOINT);
CREATE TABLE geo10e (fid INT NOT NULL PRIMARY KEY, shape MULTIPOLYGON);
CREATE TABLE geo10f (fid INT NOT NULL PRIMARY KEY, shape MULTILINESTRING);
CREATE TABLE geo10g (fid INT NOT NULL PRIMARY KEY, shape GEOMETRYCOLLECTION);
\g
INSERT INTO geo10a VALUES (1, PointFromText('POINT(1 1)'));
INSERT INTO geo10a VALUES (2, PointFromText('POINT EMPTY'));
INSERT INTO geo10b VALUES (1, PolyFromText('POLYGON((1 1, 2 2, 3 3, 4 4, 1 1))'));
INSERT INTO geo10b VALUES (2, PolyFromText('POLYGON((1 1, 5 5, 6 6, 7 9, 10 12, 5 10-
, 1 1))'));
INSERT INTO geo10c VALUES (1, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 4 0, 0 4)-
'));
INSERT INTO geo10c VALUES (2, LineFromText('LINESTRING(1 1, 2 2, 3 3, 4 4, 1 1)'));
INSERT INTO geo10d VALUES (1, MPointFromText('MULTIPOINT(1 1, 2 2, 3 3)'));
INSERT INTO geo10d VALUES (2, MPointFromText('MULTIPOINT(1 1, 3 3)'));
INSERT INTO geo10e VALUES (1, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)-
), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo10e VALUES (2, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 0 0), (4 -
4, 4 0, 5 5, 4 4)), ((1 1, 1 2, 2 2, 2 1, 1 1)))'));
INSERT INTO geo10f VALUES (1, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6))'));
INSERT INTO geo10f VALUES (2, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6), (10 10, 12 12, 6 7, 10 10))'));
INSERT INTO geo10g VALUES (1, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), POLYG-
ON((1 1, 2 2, 3 3, 4 4, 1 1)), LINESTRING(1 1, 2 2, 4 4, 5 5))'));
INSERT INTO geo10g VALUES (2, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINES-
TRING(1 1, 2 2, 4 4, 5 5))'));
\g
!!
<<
>>
? sql SEPPARAMDB -S 
<<
>>
* \i geo10ddl.sql
<<
>>
* SELECT ST_Equals(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Equals(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo10b-
 ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Equals(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER BY-
 fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Equals(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDER -
BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT ST_Equals(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)), (-
(1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            1 
            2 
>>
* SELECT ST_Equals(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 5,-
 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Equals(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTRIN-
G(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT ST_Disjoint(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT ST_Disjoint(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo1-
0b ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Disjoint(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER -
BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Disjoint(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDE-
R BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Disjoint(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)),-
 ((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            0 
            2 
>>
* SELECT ST_Disjoint(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 -
5, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Disjoint(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTR-
ING(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Intersects(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;-
\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Intersects(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from ge-
o10b ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Intersects(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDE-
R BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Intersects(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d OR-
DER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Intersects(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)-
), ((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            1 
            2 
>>
* SELECT ST_Intersects(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, -
5 5, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Intersects(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINES-
TRING(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Touches(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Touches(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo10-
b ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Touches(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER B-
Y fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Touches(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDER-
 BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Touches(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)), -
((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            0 
            2 
>>
* SELECT ST_Touches(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 5-
, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Touches(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTRI-
NG(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo10-
b ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER B-
Y fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDER-
 BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)), -
((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            0 
            2 
>>
* SELECT ST_Crosses(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 5-
, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Crosses(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTRI-
NG(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Within(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Within(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo10b-
 ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Within(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER BY-
 fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Within(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDER -
BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT ST_Within(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)), (-
(1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            1 
            2 
>>
* SELECT ST_Within(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 5,-
 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Within(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTRIN-
G(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            1 
>>
* SELECT ST_Contains(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            1 
            0 
>>
* SELECT ST_Contains(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo1-
0b ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Contains(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER -
BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Contains(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDE-
R BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Contains(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)),-
 ((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            1 
            2 
>>
* SELECT ST_Contains(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 -
5, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Contains(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTR-
ING(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            1 
            1 
>>
* SELECT ST_Overlaps(shape, PointFromText('POINT(1 1)')) from geo10a ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Overlaps(shape, PolyFromText('POLYGON((1 1, 3 3, 4 4, 1 1))')) from geo1-
0b ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Overlaps(shape, LineFromText('LINESTRING(1 1, 3 3)')) from geo10c ORDER -
BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Overlaps(shape, MPointFromText('MULTIPOINT(1 1, 3 3)')) from geo10d ORDE-
R BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Overlaps(shape, MPolyFromText('MULTIPOLYGON(((0 0, 0 4, 4 4, 4 0, 0 0)),-
 ((1 1, 1 2, 2 2, 2 1, 1 1)))')) from geo10e ORDER BY fid;\g
<<
col1          
            0 
            2 
>>
* SELECT ST_Overlaps(shape, MLineFromText('MULTILINESTRING((1 1, 2 2, 3 3), (4 4, 5 -
5, 6 6))')) from geo10f ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* SELECT ST_Overlaps(shape, GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 1), LINESTR-
ING(1 1, 2 2, 4 4, 5 5))')) from geo10g ORDER BY fid;\g
<<
col1          
            0 
            0 
>>
* \q
<<
>>


Ending at: Mon Oct 18 10:05:53 2010
