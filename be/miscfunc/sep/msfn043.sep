/*
  Copyright (c) 2008 Ingres Corporation

  Test Name     : msfn043.sep
  Suite         : be!miscfunc
  Focus         : Ingres Regression Test
                : Test for bug 120155 - Multiple instances of the random 
                : function in a select list return the same values when
                : each instance should return a different value
                :
  Databases     : SEPPARAMDB
  Tables        : b120155_*
  Filled Files  : b120155.sc
  Copied Files  :
  Output Files  :
  Prerequisites : None
  Run as user   : testenv 
  Summary       : Verifies fix for bug 120155
                :
                :
  Exp. DIFFs    : None
                :
  History       : 1-Sep-2008 (wanfr01) Created.
                : 1-Sep-2008 (sarjo01) Formalized for piccolo.
                : 03-Nov-2008 (wanfr01) Cleaned up compiler warnings
*/
? fill b120155.sc
!!
#include <stdio.h>
#include <stdlib.h>

EXEC SQL include sqlca;
 
int getout()
{   
    EXEC SQL BEGIN declare section;
	char errmsg[101];
    EXEC SQL END declare section;
    printf("SQLCODE: %d : ", sqlca.sqlcode);
    exec sql inquire_sql (:errmsg = ERRORTEXT);
    printf ("Error text: %s\n",errmsg);
    switch (sqlca.sqlcode) {
       case -30100 :
                printf("Table not found\n");
                break;
       case -30140 :
                printf("Unable to connect to database\n");
                break;
       case -30200 :
                printf("Duplicate object\n");
                break;
       case -31000 :
                printf("Syntax Error\n");
                break;
       case -38100 :
                printf("Invalid database\n");
                break;
       default :
                printf(" See SQL reference manual for text\n");
    } 
    EXEC SQL disconnect; 
    exit(-1);
}


int main(int argc, char *argv[])
{
    EXEC SQL BEGIN declare section;
        char dbname[100];
        int var1, var2;
    exec sql end declare section;
    exec sql whenever sqlerror call getout;

    sprintf ( dbname, argv[1]); 
    EXEC SQL connect :dbname;
EXEC SQL set autocommit on;



EXEC SQL select random(1, 100), random(1, 100) into :var1, :var2;

if (var1 == var2) {
printf ("Bug 120155 is not fixed\n");
}
else
printf ("Bug 120155 is fixed\n");


   EXEC SQL disconnect;  
   return (0);
}


!!
? esqlc b120155.sc
<<
ESQL b120155.sc:
>>
<<
>>
? sepcc b120155.c
<<
>>
<<
b120155.c
>>
? seplnk b120155
<<
>>
? run b120155.exe SEPPARAMDB
<<
Bug 120155 is fixed
>>
? delete b120155.c
<<
~
>>
? delete b120155.o
<<
~
>>
? delete b120155.obj
<<
~
>>
? delete b120155.exe
<<
~
>>
