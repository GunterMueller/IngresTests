/*
	Test Name: fja21.sep 
	Time     : 25-Jun-1993 15:57:18
	User Name: testenv 

	Test ID  : fja21 
	Module   : datatypes 
	Filename : fja21.sep 
	Purpose  : It tests the semantics and syntax of float precision 
	Input Files  : none 
	Output Files : none 
	Database     : SEPPARAMDB 
	Tables       : 
	Synopsis     : It creates tables with different datatypes
		       and tests its functionality
                       It uses '-xf' format	
	History      : 25-Jun-1993 (daniel lee)
                       created the test
        <<<IMPORTANT NOTE: >>>
	The float precision display in the canon may
	NOT be correct because of a problem with the
	terminal monitor(TM) when this test was written.
	It is strongly recommended to check the canon FIRST !!!

          20-Jun-1995	(Author)
	  23-Mar-1999   (vande02) Hard-coded VPG_SZ to 8K
          29-Oct-2007	(kiria01) b117790
		Updating canons reflecting string-number coercion changes.
*/
? sql -xf SEPPARAMDB 
<<
~
>>
* drop table foo91;\g
<<
~
>>
* select date(float8(123.123));\g
<<
Executing . . .

E_US10CE '123.123' is not a valid date/time value.
    (Mon Oct 29 15:25:57 2007)

continue
* 
>>
* create table foo91 (cola float8, colb float4, i integer, j integer1, k     integer-
2) with page_size=8192;\g
<<
~
>>
* insert into foo91 ( cola, colb, i, j, k ) values(123456789.123456789,     12345678-
9.123456789, 100, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(1123456789.123456789,     1234567-
89.123456789, 200, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(2123456789.123456789,     1234567-
89.123456789, 300, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(3123456789.123456789,     1234567-
89.123456789, 400, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(4123456789.123456789,     1234567-
89.123456789, 500, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(5123456789.123456789,     1234567-
89.123456789, 600, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(6123456789.123456789,     1234567-
89.123456789, 700, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(7123456789.123456789,     1234567-
89.123456789, 800, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(8123456789.123456789,     1234567-
89.123456789, 900, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(9123456789.123456789,     1234567-
89.123456789, 1000, 125, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(10123456789.123456789,     123456-
789.123456789, 1100, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 11:21:53 1995)

continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(11123456789.123456789,     123456-
789.123456789, 1200, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 11:21:56 1995)

continue
* 
>>
* insert into foo91 ( cola, colb, i, j, k ) values(12123456789.123456789,     123456-
789.123456789, 1300, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 11:22:02 1995)

continue
* 
>>
* commit;\g
<<
~
>>
* select * from foo91;\g
<<
Executing . . .


+-----------+-----------+-------------+------+------+
|cola       |colb       |i            |j     |k     |
+-----------+-----------+-------------+------+------+
| 1.235e+008| 1.235e+008|          100|   123|  2000|
| 1.123e+009| 1.235e+008|          200|   123|  2000|
| 2.123e+009| 1.235e+008|          300|   123|  2000|
| 3.123e+009| 1.235e+008|          400|   123|  2000|
| 4.123e+009| 1.235e+008|          500|   123|  2000|
| 5.123e+009| 1.235e+008|          600|   123|  2000|
| 6.123e+009| 1.235e+008|          700|   123|  2000|
| 7.123e+009| 1.235e+008|          800|   123|  2000|
| 8.123e+009| 1.235e+008|          900|   123|  2000|
| 9.123e+009| 1.235e+008|         1000|   125|  2000|
+-----------+-----------+-------------+------+------+
(10 rows)
continue
* 
>>
* select cola + colb from foo91;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
| 2.469e+008|
| 1.247e+009|
| 2.247e+009|
| 3.247e+009|
| 4.247e+009|
| 5.247e+009|
| 6.247e+009|
| 7.247e+009|
| 8.247e+009|
| 9.247e+009|
+-----------+
(10 rows)
continue
* 
>>
* select int2(cola/0 + colb/0) from foo91;\g
<<
Executing . . .

E_US106B Floating divide by zero detected in query.
    (Tue Jun 20 11:24:15 1995)

continue
* 
>>
* select int2(cola + colb) from foo91;\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 11:24:18 1995)

continue
* 
>>
* select int4(cola + colb) from foo91;\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 11:24:20 1995)

continue
* 
>>
* select float4(i + j)from foo91;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
|    223.000|
|    323.000|
|    423.000|
|    523.000|
|    623.000|
|    723.000|
|    823.000|
|    923.000|
|   1023.000|
|   1125.000|
+-----------+
(10 rows)
continue
* 
>>
* select float8(i + colb)from foo91;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
| 1.235e+008|
+-----------+
(10 rows)
continue
* 
>>
* select decimal(cola + colb) from foo91;\g
<<
Executing . . .


+----------------+
|col1            |
+----------------+
|       246913584|
|      1246913536|
|      2246913536|
|      3246913536|
|      4246913536|
|      5246913536|
|      6246913536|
|      7246913536|
|      8246913536|
|      9246913536|
+----------------+
(10 rows)
continue
* 
>>
* \q
<<
~
>>


Ending at: Mon Oct 29 15:25:59 2007
