/*
	Test Name: hh020.sep     
	Time:
	User Name: testenv      
 
	Test ID : hh020
	Module  : be/datatypes
	Filename: hh020.sep
	Purpose	: test aggregate functions with each datatype,
                  including some with NULL values
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB2
	Tables       : hh022
	Synopsis     : Test aggregate functions with each datatype,
                       including some with NULL values.

	History	: 05-july-1989	Created		Author 

                                  converted by :dennisk             
                 7/90             Test modified to conform to Test Case/
                                  Portability Standards. (Brought to you by
	  11-aug-1993	(sandhya) removed redundant "quel" command and also
				  added \q at the end to exit the TM.
	  30-mar-1999	(yu$pe02) Hard code page size to 4K.
          25-Jun-2004   (vande02) Cleaning up and aligning history comments.
*/
? quel SEPPARAMDB2 -s 
<<
>>
* destroy hh020	\g
<<
>>
<<
E_US1452 DESTROY: hh020 does not exist or is not owned by you.
    ( 8-AUG-1989 12:05:41)

>>
* create  hh020	(	id          = i2,	c20         = c20,	i1          = i1,	i2         -
 = i2,	i4          = i4,	f4          = f4,	f8          = f8,	money       = money,
<<
>>
*	date        = date,	c1          = c1,	t1          = text(1),	char1       = char(1)-
,	varchar1    = varchar(1),
<<
>>
*	i1n         = i1	 with null,	i2n         = i2	 with null,	i4n         = i4	 with n-
ull,	f4n         = f4	 with null,	f8n         = f8	 with null,	moneyn      = money	 -
with null,
<<
>>
*	daten       = date	 with null,	c1n         = c1	 with null,	t1n         = text(1)	-
 with null,	char1n      = char(1)	 with null,	varchar1n   = varchar(1) with null) wi-
th page_size=4096	\g
<<
>>
* append	hh020	(	id          = 1,	c20         = "1",	i1          = 1,	i2          = -
1,	i4          = 1,	f4          = 1,	f8          = 1,	money       = 1,
<<
>>
*	date        = "5/5/97",	c1          = "w",	t1          = "w",	char1       = "w",	v-
archar1    = "w") \g
<<
(1 row)
>>
* append	hh020	(	id          = 2,	c20         = "2",	i1          = 2,	i2          = -
2,	i4          = 2,	f4          = 2,	f8          = 2,	money       = 2,
<<
>>
*	date        = "6/6/2007",	c1          = "X",	t1          = "X",	char1       = "X",-
	varchar1    = "X",	i1n	    = 2,	i2n	    = 2,	i4n	    = 2,	f4n	    = 2,
<<
>>
*	f8n	    = 2,	moneyn      = 2,	daten       = "6/6/2007",	c1n         = "X",	t1n    -
     = "X",	char1n      = "X",	varchar1n   = "X") \g
<<
(1 row)
>>
* append	hh020	(	id          = 3,	C20         = "3",	I1          = 3,	I2          = -
3,	i4          = 3,	f4          = 3,	f8          = 3,	money       = 3,
<<
>>
*	date        = "7/7/2017",	c1          = "y",	t1          = "y",	char1       = "y",-
	varchar1    = "y") \g
<<
(1 row)
>>
* append	hh020	(	id          = 4,	c20         = "4",	I1          = 4,	I2          = -
4,	i4          = 4,	f4          = 4,	f8          = 4,	money       = 4,
<<
>>
*	date        = "8/8/2027",	c1          = "Z",	t1          = "Z",	char1       = "Z",-
	varchar1    = "Z",	i1n         = 4,	I2n         = 4,	i4n         = 4,
<<
>>
*	f4n         = 4,	f8n         = 4,	moneyn      = 4,	daten       = "8/8/2027",	c1n  -
       = "Z",	t1n         = "Z",	char1n      = "Z",	varchar1n   = "Z") \g
<<
(1 row)
>>
* range of r is hh020 \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<
>>
* retrieve (x = c ( r.c1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.c1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.char1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.char1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.date )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|05-may-1997              |
|06-jun-2007              |
|07-jul-2017              |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = c ( r.daten )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|                         |
|06-jun-2007              |
|                         |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = c ( r.f4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = c ( r.f4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = c ( r.f8 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = c ( r.f8n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = c ( r.i1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.i1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.i2 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.i2n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.i4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|1            |
|2            |
|3            |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = c ( r.i4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|             |
|2            |
|             |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = c ( r.money )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|              $ 1.00|
|              $ 2.00|
|              $ 3.00|
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = c ( r.moneyn )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|                    |
|              $ 2.00|
|                    |
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = c ( r.t1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.t1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.varchar1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = c ( r.varchar1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.c1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.c1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.char1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.char1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.date )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|05-may-1997              |
|06-jun-2007              |
|07-jul-2017              |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = char ( r.daten )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|                         |
|06-jun-2007              |
|                         |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = char ( r.f4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = char ( r.f4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = char ( r.f8 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = char ( r.f8n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = char ( r.i1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.i1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.i2 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.i2n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.i4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|1            |
|2            |
|3            |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = char ( r.i4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|             |
|2            |
|             |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = char ( r.money )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|              $ 1.00|
|              $ 2.00|
|              $ 3.00|
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = char ( r.moneyn )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|                    |
|              $ 2.00|
|                    |
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = char ( r.t1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.t1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.varchar1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = char ( r.varchar1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.c1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.c1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.char1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.char1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.date )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|05-may-1997              |
|06-jun-2007              |
|07-jul-2017              |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = varchar ( r.daten )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------------------+
|x                        |
+-------------------------+
|                         |
|06-jun-2007              |
|                         |
|08-aug-2027              |
+-------------------------+
(4 rows)
>>
* retrieve (x = varchar ( r.f4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = varchar ( r.f4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = varchar ( r.f8 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|1.000      |
|2.000      |
|3.000      |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = varchar ( r.f8n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|2.000      |
|           |
|4.000      |
+-----------+
(4 rows)
>>
* retrieve (x = varchar ( r.i1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.i1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.i2 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|1     |
|2     |
|3     |
|4     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.i2n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|2     |
|      |
|4     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.i4 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|1            |
|2            |
|3            |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = varchar ( r.i4n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+-------------+
|x            |
+-------------+
|             |
|2            |
|             |
|4            |
+-------------+
(4 rows)
>>
* retrieve (x = varchar ( r.money )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|              $ 1.00|
|              $ 2.00|
|              $ 3.00|
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = varchar ( r.moneyn )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+--------------------+
|x                   |
+--------------------+
|                    |
|              $ 2.00|
|                    |
|              $ 4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = varchar ( r.t1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.t1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.varchar1 )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|w     |
|X     |
|y     |
|Z     |
+------+
(4 rows)
>>
* retrieve (x = varchar ( r.varchar1n )) \g
/*
tests 6.0 conversion functions with all datatypes  
*/
<<

+------+
|x     |
+------+
|      |
|X     |
|      |
|Z     |
+------+
(4 rows)
>>
* \q
<<
>>


Ending at: Fri Jun 25 17:24:39 2004
