/*
Copyright (c) 2006 Ingres Corporation

	Test Name: hh024.sep     
	Time:
	User Name: testenv      
 
	Test ID : hh024
	Module  : be/datatypes
	Filename: hh024.sep
	Purpose	: Test numeric functions with each datatype
	Input Files  : none
	Output Files : none
	Database     : betstdb2 = SEPPARAMDB2
	Tables       : hh024
	Synopsis     : Test numeric functions with each datatype.

	History	: 05-july-1989	Created		Author

                                  converted by :dennisk             
                 7/90             Test modified to conform to Test Case/
                                  Portability Standards.
	  30-mar-1999	(yu$pe02) Hard code page size to 4K.
          25-Apr-2000	(vande02) Replacing main canons for II 2.5 change to
                        cause the function "ln" to now be a synonym for "log"
                        per SIR 98808.
          25-Jun-2004   (vande02) Cleaning up and aligning history comments.
           1-Nov-2006	(vande02) Updated expected E_US0B5B or E_US0B5C messages
                                  from invalid syntax with the date data type.
                                  Added Copyright.
*/
? quel SEPPARAMDB2 -s 
<<
>>
* destroy hh024	\g
<<
~
>>
* create  hh024	(	id          = i2,	c20         = c20,	i1          = i1,	i2         -
 = i2,	i4          = i4,	f4          = f4,	f8          = f8,	money       = money,
<<
>>
*	date        = date,	c1          = c1,	t1          = text(1),	char1       = char(1)-
,	varchar1    = varchar(1),
<<
>>
*	i1n         = i1	 with null,	i2n         = i2	 with null,	i4n         = i4	 with n-
ull,	f4n         = f4	 with null,	f8n         = f8	 with null,	moneyn      = money	 -
with null,
<<
>>
*	daten       = date	 with null,	c1n         = c1	 with null,	t1n         = text(1)	-
 with null,	char1n      = char(1)	 with null,	varchar1n   = varchar(1) with null) wi-
th page_size=4096	\g
<<
>>
* append	hh024	(	id          = 1,	c20         = "1",	i1          = 1,	i2          = -
1,	i4          = 1,	f4          = 1,	f8          = 1,	money       = 1,
<<
>>
*	date        = "5/5/97",	c1          = "w",	t1          = "w",	char1       = "w",	v-
archar1    = "w") \g
<<
(1 row)
>>
* append	hh024	(	id          = 2,	c20         = "2",	i1          = 2,	i2          = -
2,	i4          = 2,	f4          = 2,	f8          = 2,	money       = 2,
<<
>>
*	date        = "6/6/2007",	c1          = "X",	t1          = "X",	char1       = "X",-
	varchar1    = "X",	i1n	    = 2,	i2n	    = 2,	i4n	    = 2,
<<
>>
*	f4n	    = 2,	f8n	    = 2,	moneyn      = 2,	daten       = "6/6/2007",	c1n         =-
 "X",	t1n         = "X",	char1n      = "X",	varchar1n   = "X") \g
<<
(1 row)
>>
* append	hh024	(	id          = 3,	C20         = "3",	I1          = 3,	I2          = -
3,	i4          = 3,	f4          = 3,	f8          = 3,	money       = 3,
<<
>>
*	date        = "7/7/2017",	c1          = "y",	t1          = "y",	char1       = "y",-
	varchar1    = "y") \g
<<
(1 row)
>>
* append	hh024	(	id          = 4,	c20         = "4",	I1          = 4,	I2          = -
4,	i4          = 4,	f4          = 4,	f8          = 4,	money       = 4,
<<
>>
*	date        = "8/8/2027",	c1          = "Z",	t1          = "Z",	char1       = "Z",-
	varchar1    = "Z",	i1n         = 4,	I2n         = 4,	i4n         = 4,	f4n         =-
 4,
<<
>>
*	f8n         = 4,	moneyn      = 4,	daten       = "8/8/2027",	c1n         = "Z",	t1n-
         = "Z",	char1n      = "Z",	varchar1n   = "Z") \g
<<
(1 row)
>>
* range of z is hh024 \g
<<
>>
* retrieve (x = abs ( z.c1n )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
* retrieve (x = abs ( z.char1 )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
<<
E_US0B5D line 1, Function 'abs' with argument type 'char' is ambiguous.
    Explicitly convert its argument to the desired type.
    (Tue Oct  8 16:14:53 1991)

>>
* retrieve (x = abs ( z.char1n )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
<<
E_US0B5D line 1, Function 'abs' with argument type 'char' is ambiguous.
    Explicitly convert its argument to the desired type.
    (Tue Oct  8 16:14:53 1991)

>>
* retrieve (x = abs ( z.daten )) \g
<<
E_US0B5B line 1, Function 'abs' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:25 2006)

>>
* retrieve (x = abs ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      2.000|
|           |
|      4.000|
+-----------+
(4 rows)
>>
* retrieve (x = abs ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      2.000|
|           |
|      4.000|
+-----------+
(4 rows)
>>
* retrieve (x = abs ( z.i1n )) \g
<<

+------+
|x     |
+------+
|      |
|     2|
|      |
|     4|
+------+
(4 rows)
>>
* retrieve (x = abs ( z.i2n )) \g
<<

+------+
|x     |
+------+
|      |
|     2|
|      |
|     4|
+------+
(4 rows)
>>
* retrieve (x = abs ( z.i4n )) \g
<<

+-------------+
|x            |
+-------------+
|             |
|            2|
|             |
|            4|
+-------------+
(4 rows)
>>
* retrieve (x = abs ( z.moneyn )) \g
<<

+--------------------+
|x                   |
+--------------------+
|                    |
|               $2.00|
|                    |
|               $4.00|
+--------------------+
(4 rows)
>>
* retrieve (x = abs ( z.t1n )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
* retrieve (x = abs ( z.varchar1 )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
<<
E_US0B5D line 1, Function 'abs' with argument type 'varchar' is ambiguous.
    Explicitly convert its argument to the desired type.
    (Tue Oct  8 16:14:53 1991)

>>
* retrieve (x = abs ( z.varchar1n )) \g
<<
E_US1130 illegal character to integer conversion or non-numeric character
    in money field.
    (22-APR-1991 22:30:00)

>>
<<
E_US0B5D line 1, Function 'abs' with argument type 'varchar' is ambiguous.
    Explicitly convert its argument to the desired type.
    (Tue Oct  8 16:14:54 1991)

>>
* retrieve (x = atan ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:41:24)

>>
* retrieve (x = atan ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:41:42)

>>
* retrieve (x = atan ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:43:21)

>>
* retrieve (x = atan ( z.daten )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:35 2006)

>>
* retrieve (x = atan ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.107|
|           |
|      1.326|
+-----------+
(4 rows)
>>
* retrieve (x = atan ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.107|
|           |
|      1.326|
+-----------+
(4 rows)
>>
* retrieve (x = atan ( z.i1n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.107|
|           |
|      1.326|
+-----------+
(4 rows)
>>
* retrieve (x = atan ( z.i2n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.107|
|           |
|      1.326|
+-----------+
(4 rows)
>>
* retrieve (x = atan ( z.i4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.107|
|           |
|      1.326|
+-----------+
(4 rows)
>>
* retrieve (x = atan ( z.moneyn )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type
    'money'. Explicitly convert the argument to the desired type.
    (23-JUL-1990 10:21:24)

>>
* retrieve (x = atan ( z.t1n )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:44:20)

>>
* retrieve (x = atan ( z.varchar1 )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:44:36)

>>
* retrieve (x = atan ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'atan' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:44:45)

>>
* retrieve (x = cos ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:44:56)

>>
* retrieve (x = cos ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:50:41)

>>
* retrieve (x = cos ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:50:56)

>>
* retrieve (x = cos ( z.daten )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:43 2006)

>>
* retrieve (x = cos ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|     -0.416|
|           |
|     -0.654|
+-----------+
(4 rows)
>>
* retrieve (x = cos ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|     -0.416|
|           |
|     -0.654|
+-----------+
(4 rows)
>>
* retrieve (x = cos ( z.i1n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|     -0.416|
|           |
|     -0.654|
+-----------+
(4 rows)
>>
* retrieve (x = cos ( z.i2n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|     -0.416|
|           |
|     -0.654|
+-----------+
(4 rows)
>>
* retrieve (x = cos ( z.i4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|     -0.416|
|           |
|     -0.654|
+-----------+
(4 rows)
>>
* retrieve (x = cos ( z.moneyn )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type 'money'.
    Explicitly convert the argument to the desired type.
    (23-JUL-1990 10:22:11)

>>
* retrieve (x = cos ( z.t1n )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:51:42)

>>
* retrieve (x = cos ( z.varchar1 )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:51:58)

>>
* retrieve (x = cos ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'cos' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:52:12)

>>
* retrieve (x = exp ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:52:23)

>>
* retrieve (x = exp ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:52:36)

>>
* retrieve (x = exp ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:52:58)

>>
* retrieve (x = exp ( z.daten )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:45 2006)

>>
* retrieve (x = exp ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      7.389|
|           |
|     54.598|
+-----------+
(4 rows)
>>
* retrieve (x = exp ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      7.389|
|           |
|     54.598|
+-----------+
(4 rows)
>>
* retrieve (x = exp ( z.i1n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      7.389|
|           |
|     54.598|
+-----------+
(4 rows)
>>
* retrieve (x = exp ( z.i2n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      7.389|
|           |
|     54.598|
+-----------+
(4 rows)
>>
* retrieve (x = exp ( z.i4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      7.389|
|           |
|     54.598|
+-----------+
(4 rows)
>>
* retrieve (x = exp ( z.moneyn )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type 'money'.
    Explicitly convert the argument to the desired type.
    (23-JUL-1990 10:22:49)

>>
* retrieve (x = exp ( z.t1n )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:53:42)

>>
* retrieve (x = exp ( z.varchar1 )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:53:52)

>>
* retrieve (x = exp ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'exp' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:54:02)

>>
* retrieve (x = log ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:51:52 2000)

>>
* retrieve (x = log ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:52:02 2000)

>>
* retrieve (x = log ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:53:09 2000)

>>
* retrieve (x = log ( z.daten )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:49 2006)

>>
* retrieve (x = log ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.693|
|           |
|      1.386|
+-----------+
(4 rows)
>>
* retrieve (x = log ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.693|
|           |
|      1.386|
+-----------+
(4 rows)
>>
* retrieve (x = log ( z.i1n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.693|
|           |
|      1.386|
+-----------+
(4 rows)
>>
* retrieve (x = log ( z.i2n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.693|
|           |
|      1.386|
+-----------+
(4 rows)
>>
* retrieve (x = log ( z.i4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.693|
|           |
|      1.386|
+-----------+
(4 rows)
>>
* retrieve (x = log ( z.moneyn )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type 'money'.
    Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:53:21 2000)

>>
* retrieve (x = log ( z.t1n )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:53:24 2000)

>>
* retrieve (x = log ( z.varchar1 )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:53:26 2000)

>>
* retrieve (x = log ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'ln' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (Tue Apr 25 19:53:29 2000)

>>
* retrieve (x = sin ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:55:57)

>>
* retrieve (x = sin ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:56:18)

>>
* retrieve (x = sin ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:56:31)

>>
* retrieve (x = sin ( z.daten )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:52 2006)

>>
* retrieve (x = sin ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.909|
|           |
|     -0.757|
+-----------+
(4 rows)
>>
* retrieve (x = sin ( z.f8n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.909|
|           |
|     -0.757|
+-----------+
(4 rows)
>>
* retrieve (x = sin ( z.i1n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.909|
|           |
|     -0.757|
+-----------+
(4 rows)
>>
* retrieve (x = sin ( z.i2n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.909|
|           |
|     -0.757|
+-----------+
(4 rows)
>>
* retrieve (x = sin ( z.i4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      0.909|
|           |
|     -0.757|
+-----------+
(4 rows)
>>
* retrieve (x = sin ( z.moneyn )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type 'money'.
    Explicitly convert the argument to the desired type.
    (23-JUL-1990 10:24:26)

>>
* retrieve (x = sin ( z.t1n )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:57:19)

>>
* retrieve (x = sin ( z.varchar1 )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 16:58:31)

>>
* retrieve (x = sin ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'sin' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:00:13)

>>
* retrieve (x = sqrt ( z.c1n )) \g
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type 'c'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:00:25)

>>
* retrieve (x = sqrt ( z.char1 )) \g
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:00:38)

>>
* retrieve (x = sqrt ( z.char1n )) \g
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type 'char'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:00:49)

>>
* retrieve (x = sqrt ( z.daten )) \g
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:20:54 2006)

>>
* retrieve (x = sqrt ( z.f4n )) \g
<<

+-----------+
|x          |
+-----------+
|           |
|      1.414|
|           |
|      2.000|
+-----------+
(4 rows)
>>
* retrieve (x = sqrt ( z.f8n )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|      1.414|
|           |
|      2.000|
+-----------+
(4 rows)
>>
* retrieve (x = sqrt ( z.i1n )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|      1.414|
|           |
|      2.000|
+-----------+
(4 rows)
>>
* retrieve (x = sqrt ( z.i2n )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|      1.414|
|           |
|      2.000|
+-----------+
(4 rows)
>>
* retrieve (x = sqrt ( z.i4n )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<

+-----------+
|x          |
+-----------+
|           |
|      1.414|
|           |
|      2.000|
+-----------+
(4 rows)
>>
* retrieve (x = sqrt ( z.moneyn )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type
    'money'. Explicitly convert the argument to the desired type.
    (23-JUL-1990 10:25:21)

>>
* retrieve (x = sqrt ( z.t1n )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type 'text'.
    Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:02:30)

>>
* retrieve (x = sqrt ( z.varchar1 )) \g
/*
tests numeric functions (except MOD) with 6.0 datatypes  
*/
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:02:48)

>>
* retrieve (x = sqrt ( z.varchar1n )) \g
<<
E_US0B5B line 1, Function 'sqrt' does not take an argument of type
    'varchar'. Explicitly convert the argument to the desired type.
    (26-FEB-1990 17:03:07)

>>
* \q
<<
>>


Ending at: Wed Nov  1 15:20:59 2006
