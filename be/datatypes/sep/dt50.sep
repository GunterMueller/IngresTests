/*
Copyright (c) 2006 Ingres Corporation

	Test Name: dt50.sep
	Time: Mon Dec 23 14:14:41 2002
	User Name: ingres
	Terminal type: septerm
 
	Test ID	: dt50.sep
	Module 	: 
	Filename:
	Purpose	: This test will test the int2(expr) Data Type Conversion
                  Function.
	Input Files  : drop.sql, tables_setup.sql, insert_test.sql	
	Output Files : None
	Database     : datatypedb
	Tables       : tbl_dt50_a, tbl_dt50_b
	Synopsis     : This test checks the maximum(32767) and minimum(-32768)
                       boundaries of the int2(expr) data type conversion
                       function. Data is passed to the int2 function from
                       another conversion function and table tbl_dt50_a. It also
                       tests the supported and non-supported data types.
                       Destructive tests include passing the int2 function data
                       beyond the maximum and minimum boundary to verify that
                       the appropriate error message(s) are displayed.

 History: 23-Dec-2002	(shafa01) Created
           1-Nov-2006	(vande02) Updated expected E_US0B5B or E_US0B5C messages
                                  from invalid syntax with the date data type.
                                  Added Copyright.
*/
/*	
	This fill file is used to initialize the database by dropping the
	tables that will be used in the test.
*/
? fill drop.sql 
!!
drop tbl_dt50_a\p\g
drop tbl_dt50_b\p\g
!!
/*
	This fill file is used to setup the required tables for this test.
*/
? fill tables_setup.sql 
!!
create table tbl_dt50_a(c_byte byte(10) default NULL,c_byte_varying byte varying(10)-
 default NULL,c_c c10 default NULL,c_char char(10) default NULL,c_date date default -
NULL,c_decimal decimal(10,2) default NULL,c_float float default NULL,c_float4 f4 def-
ault NULL,c_int1 i1 default NULL,c_int2 smallint default NULL,c_int4 integer default NU-
LL,c_integer integer default NULL,c_long_byte long byte,c_long_varchar long varchar,-
 c_money money default NULL, c_object_key object_key default NULL, c_table_key table-
_key default NULL, c_text text(10) default NULL,c_varchar varchar(10) default NULL)\g

Insert into tbl_dt50_a (c_byte, c_byte_varying, c_c, c_char, c_date, c_decimal, c_fl-
oat, c_float4, c_int1, c_int2, c_int4, c_integer, c_long_byte, c_long_varchar, c_mon-
ey, c_object_key, c_table_key, c_text, c_varchar) VALUES (byte(32767), '32767', '327-
67', '32767', '100103', 32767.00, 32767.00, 32767.00, 127, 32767, 32767, 32767, '32767'-
, '32767', 32767.00, '0000000000032767', '00032767', '32767', '32767')\g

create table tbl_dt50_b(c_int2 i2 default NULL, from_data_type char(40) default NULL-
)\g
!!
/*
	This fill file executes certain insert and update commands specific to a
	test case performed later into the test.
*/
? fill insert_test.sql 
!!
insert into tbl_dt50_b (c_int2) select int2(c_c) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from c' where from_data_type is NULL-
\g
insert into tbl_dt50_b (c_int2) select int2(c_char) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from char' where from_data_type is N-
ULL\g
insert into tbl_dt50_b (c_int2) select int2(c_decimal) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from decimal' where from_data_type i-
s NULL\g
insert into tbl_dt50_b (c_int2) select int2(c_float) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from float' where from_data_type is -
NULL\g
insert into tbl_dt50_b (c_int2) select int2(c_float4) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from float4' where from_data_type is-
 NULL\g
insert into tbl_dt50_b (c_int2) select int2(c_int1) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from int1' where from_data_type is N-
ULL\g
insert into tbl_dt50_b (c_int2) select int2(c_int2) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from int2' where from_data_type is N-
ULL\g
insert into tbl_dt50_b (c_int2) select int2(c_int4) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from int4' where from_data_type is N-
ULL\g
insert into tbl_dt50_b (c_int2) select int2(c_money) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from money' where from_data_type is -
NULL\g
insert into tbl_dt50_b (c_int2) select int2(c_text) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from text' where from_data_type is N-
ULL\g
insert into tbl_dt50_b (c_int2) select int2(c_varchar) from tbl_dt50_a\g
update tbl_dt50_b set from_data_type='Converted from varchar' where from_data_type i-
s NULL\g
!!
/*
	In this section of the test the int2 function (primary) is calling
	another function (secondary) within it, which first converts the data to
        the respective data type (supported by int2) and further converts to
        type int2. The value used (32767) is the largest possible number that
	can be of type int2.
*/
? sql -s SEPPARAMDB 
<<
>>
* select int2(c('32767'))\g
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(c('-32768'))\g
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(char('32767'))\g
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(char('-32768'))\g
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(decimal(32767.00, 7, 2))\g
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(decimal(-32768.00, 7, 2))\g
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
/*
	Float8 is synonymous to Float and since there is no function called
        float, the float8 function is used instead.
*/
* select int2(float8(32767.00))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(float8(-32768.00))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(float4(32767.00))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(float4(-32768.00))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(int1(127))\g 
<<

+------+
|col1  |
+------+
|   127|
+------+
(1 row)
>>
* select int2(int2(32767))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(int2(-32768))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(int4(32767))\g
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(int4(-32768))\g
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(money(32767.00))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(money(-32768.00))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(text('32767'))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(text('-32768'))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
* select int2(varchar('32767'))\g 
<<

+------+
|col1  |
+------+
| 32767|
+------+
(1 row)
>>
* select int2(varchar('-32768'))\g 
<<

+------+
|col1  |
+------+
|-32768|
+------+
(1 row)
>>
/*
	The following section performs similar steps as those in the previous
	section, but this time the value used to be converted is larger than
	what an int2 data type can be. Respective error messages are canonized.
*/
* select int2(c('32768'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:35:46 2002)
>>
* select int2(c('-32769'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:35:48 2002)
>>
* select int2(char('32768'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:40 2002)
>>
* select int2(char('-32769'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:42 2002)
>>
* select int2(decimal(32768.00, 7, 2))\g
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:45 2002)
>>
* select int2(decimal(-32769.00, 7, 2))\g
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:47 2002)
>>
/*
	Float8 is synonymous to Float and since there is no function called
	float, the float8 function is used instead.
*/
* select int2(float8(32768.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:50 2002)
>>
* select int2(float8(-32769.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:52 2002)
>>
* select int2(float4(32768.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:55 2002)
>>
* select int2(float4(-32769.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:36:57 2002)
>>
* select int2(int2(32768))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:40 2002)
>>
* select int2(int2(-32769))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:41 2002)
>>
* select int2(int4(32768))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:42 2002)
>>
* select int2(int4(-32769))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:43 2002)
>>
* select int2(money(32768.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:45 2002)
>>
* select int2(money(-32769.00))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:46 2002)
>>
* select int2(text('32768'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:50 2002)
>>
* select int2(text('-32769'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:52 2002)
>>
* select int2(varchar('32768'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:55 2002)
>>
* select int2(varchar('-32769'))\g 
<<
E_US1068 Integer overflow detected in query.
    (Mon Dec 23 14:37:56 2002)
>>
/*
	In this section of the test the int2 function in tested against the
	non-supported data types. Testing procedure is similar to that preformed
	above.
*/
* select int2(long_byte('32767'))\g
<<
E_US0B5B line 1, Function 'int2' does not take an argument of type 'long
    byte'. Explicitly convert the argument to the desired type.
    (Fri Jan 03 17:29:42 2003)
>>
* select int2(long_varchar('32767'))\g
<<
E_US0B5B line 1, Function 'int2' does not take an argument of type 'long
    varchar'. Explicitly convert the argument to the desired type.
    (Fri Jan 03 17:32:06 2003)
>>
* select int2(date('32767'))\g
<<
E_US0B5B line 1, Function 'int2' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:31:23 2006)

>>
* select int2(object_key('0000000000032767'))\g
<<

E_US0B5B line 1, Function 'int2' does not take an argument of type
    'object_key'. Explicitly convert the argument to the desired type.
    (Tue Feb 18 11:59:24 2003)
>>
* select int2(table_key('00032767'))\g
<<

E_US0B5B line 1, Function 'int2' does not take an argument of type
    'table_key'. Explicitly convert the argument to the desired type.
    (Tue Feb 18 11:59:29 2003)
>>
/*
	In the following section the required tables for this test are created
	and then inserted with data to be tested with the int2 conversion
	function.
*/
* \i drop.sql
<<
~
>>
* \i tables_setup.sql
<<
(1 row)
>>
/*
	In the following section, values from selected columns of table
	tbl_dt50_a are passed through the int2 conversion function, which in turn
	are then inserted into the c_int2 column of table tbl_dt50_b. The
	from_data_type column of table tbl_dt50_b shows what data type the c_int2
	data was converted from. Please refer to the fill file insert_test.sql
	for more detail.
*/
* \i insert_test.sql
<<
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
(1 row)
>>
* select * from tbl_dt50_b\p\g
<<
select * from tbl_dt50_b

+--------+----------------------------------------+
|c_int2	 |from_data_type                          |
+--------+----------------------------------------+
|   32767|Converted from c                        |
|   32767|Converted from char                     |
|   32767|Converted from decimal                  |
|   32767|Converted from float                    |
|   32767|Converted from float4                   |
|     127|Converted from int1                     |
|   32767|Converted from int2                     |
|   32767|Converted from int4                     |
|   32767|Converted from money                    |
|   32767|Converted from text                     |
|   32767|Converted from varchar                  |
+--------+----------------------------------------+
(11 rows)
>>
/*
	Preforming similar steps to that in the insert_test.sql fill file for
	the non-supported data types.
*/
* insert into tbl_dt50_b (c_int2) select int2(c_long_byte) from tbl_dt50_a\p\g
<<
insert into tbl_dt50_b (c_int2) select int2(c_long_byte) from tbl_dt50_a

E_US0B5B line 1, Function 'int2' does not take an argument of type 'long
    byte'. Explicitly convert the argument to the desired type.
    (Fri Jan 03 17:37:00 2003)
>>
* insert into tbl_dt50_b (c_int2) select int2(c_long_varchar) from tbl_dt50_a\p\g
<<
insert into tbl_dt50_b (c_int2) select int2(c_long_varchar) from tbl_dt50_a

E_US0B5B line 1, Function 'int2' does not take an argument of type 'long
    varchar'. Explicitly convert the argument to the desired type.
    (Fri Jan 03 17:39:34 2003)
>>
* insert into tbl_dt50_b (c_int2) select int2(c_date) from tbl_dt50_a\p\g
<<
 insert into tbl_dt50_b (c_int2) select int2(c_date) from tbl_dt50_a
E_US0B5B line 1, Function 'int2' does not take an argument of type
    'ingresdate'. Explicitly convert the argument to the desired type.
    (Wed Nov  1 15:31:27 2006)

>>
* insert into tbl_dt50_b (c_int2) select int2(c_object_key) from tbl_dt50_a\p\g
<<
insert into tbl_dt50_b (c_int2) select int2(c_object_key) from tbl_dt50_a
E_US0B5B line 1, Function 'int2' does not take an argument of type
    'object_key'. Explicitly convert the argument to the desired type.
    (Tue Feb 18 11:59:24 2003)
>>
* insert into tbl_dt50_b (c_int2) select int2(c_table_key) from tbl_dt50_a\p\g
<<
insert into tbl_dt50_b (c_int2) select int2(c_table_key) from tbl_dt50_a
E_US0B5B line 1, Function 'int2' does not take an argument of type
    'table_key'. Explicitly convert the argument to the desired type.
    (Tue Feb 18 11:59:29 2003)
>>
* \i drop.sql
<<
drop tbl_dt50_a
drop tbl_dt50_b
>>
* \q 
<<
>>


Ending at: Wed Nov  1 15:31:31 2006
