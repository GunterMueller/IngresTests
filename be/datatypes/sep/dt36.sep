/*
Copyright (c) 2008 Ingres Corporation

	Test Name: dt36.sep
	Time: Thu Apr 19 11:59:58 2001
	User Name: testenv
	Terminal type: septerm
 
	Test ID : dt36.sep
	Module  : be/datatypes
	Filename: dt36.sep
        Purpose : To test the maximum size of 32K for character data types
                  in a default instance and test maximum size of 16K in UTF8.
	Input Files  : ctype.sc
	Output Files : ctype.exe
	Database     : datatypedb2
	Tables       : dt36_table
	Synopsis     : This sep test is to test the character data type 'c' 
                       with the maximum size of 32K bytes column. And using
                       various string functions to retrieve the data from the 
                       table.

 History: 19-Apr-2001	(wu$ca01) Created
           3-Nov-2008	(vande02) The test program was changed to accept an
				  additional argument SEPPARAM_CHARSET and set
                                  the max column size to 16K for UTF8 or 32K
                                  (default) for non-UTF8.  Conditional canon
                                  for UTF8 was also created.
*/
? fill ctype.sc 
!!
/* This program is to test the 'c' character data type with the maximum size
** of 32K bytes per column, and the retrieval of the data using various string
** functions.
*/
 
#include <stdio.h>
exec sql include sqlca;

#define MAXVCSZ 32000 
#define MAXUTF8SZ 16000


main(int argc, char* argv[])
{
    exec sql begin declare section;
      char   *dbname;
	varchar struct {
	    short	buf_size;
	    char	buf[MAXVCSZ+1];
	} vch;

	varchar struct {
	    short	buf_size;
	    char	buf[MAXVCSZ+1];
	} vch2;
    int vcsz;
    char  *charset;
    char stmtbuff[256];   
    exec sql end declare section;

    exec sql whenever sqlerror call sqlprint;

    dbname = argv[1];
    charset = argv[2];
    if (strcmp(charset, "UTF8") == 0)
      vcsz = MAXUTF8SZ;
    else
      vcsz = MAXVCSZ;

    exec sql connect :dbname;
    /* Ignore errors from drop table */
    exec sql whenever sqlerror continue;
    exec sql drop table dt36_table;

    exec sql whenever sqlerror call sqlprint;
    sprintf(stmtbuff, "create table dt36_table(col_c c(%d))", vcsz);
    exec sql execute immediate :stmtbuff; 

    /* To set all the bytes in a block of memory with the character 'a' */
    memset(vch.buf, 'a', vcsz);
    vch.buf_size = vcsz;
    /* Between the 6th through 15th character, change the character to '@' */
    memset(vch.buf+5, '@', 10);
    /* Replace the last ten characters with '!' */
    memset(vch.buf+vcsz-10, '!', 10);

    exec sql insert into dt36_table values (:vch);

    exec sql select col_c into :vch2 from dt36_table;

    /* If the table is successfully created, print success. Follow by */
    /* testing various string functions. Otherwise, print failure. */ 
    if (vch.buf_size == vch2.buf_size &&
	memcmp(vch.buf, vch2.buf, vcsz) == 0)
    {
        printf("Success!!!\n");

        printf("Test the left() function.\n"); 
        printf("Query:select varchar(left(col_c, 20), 60) from dt36_table.\n");
        /* All the string functions are enclosed by a varchar() function */
        /* to make the displayed output easier to read instead of ending */
        /* up with 32K byte record(with trailing blanks and all) put to */
        /* standard output with each select statement. */ 
        exec sql select varchar(left(col_c, 20), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the right()function.\n");
        printf("Query:select varchar(right(col_c, 20), 60)from dt36_table.\n");
        exec sql select varchar(right(col_c, 20), 60) into :vch2.buf from dt36_table-
;
        printf("%s\n", vch2.buf);

        printf("Test the locate() function.\n");
        printf("Query:select varchar(locate(col_c,'a'),60) from dt36_table.\n");
        exec sql select varchar(locate(col_c, 'a'), 60) into :vch2.buf from dt36_tab-
le;
        printf("The first occurrence of 'a' is in location: %s\n", vch2.buf);
        printf("Query:select varchar(locate(col_c,'@'),60) from dt36_table.\n");
        exec sql select varchar(locate(col_c, '@'), 60) into :vch2.buf from dt36_tab-
le;
        printf("The first occurrence of '@' is in location: %s\n", vch2.buf);
        printf("Query:select varchar(locate(col_c,'!'),60) from dt36_table.\n");
        exec sql select varchar(locate(col_c, '!'), 60) into :vch2.buf from dt36_tab-
le;
        printf("The first occurrence of '!' is in location: %s\n", vch2.buf);

        printf("Test the shift() function.\n");
        printf("Query:select varchar(shift(left(col_c,20),5),60) from dt36_table.\n"-
);
        exec sql select varchar(shift(left(col_c, 20), 5), 60) into :vch2.buf from d-
t36_table;
        printf("%s\n", vch2.buf);
        printf("Query:select varchar(shift(left(col_c, 20),-5),60) from dt36_table.\-
n");
        exec sql select varchar(shift(left(col_c, 20), -5), 60) into :vch2.buf from -
dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the charextract() function.\n");
        printf("Query:select varchar(charextract(col_c,7),60) from dt36_table.\n");
        exec sql select varchar(charextract(col_c, 7), 60) into :vch2.buf from dt36_-
table;
        printf("The 7th character is: %s\n", vch2.buf);

        printf("Test the concat() function.\n");
        printf("Query:select varchar(concat(right(col_c,1),'The End!'),60) from dt36-
_table.\n"); 
        exec sql select varchar(concat(right(col_c, 1), 'The End!'), 60) into :vch2.-
buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the length() function.\n");
        printf("Query:select varchar(length(col_c), 60) from dt36_table.\n");
        exec sql select varchar(length(col_c), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the pad() function.\n");
        printf("Query:select varchar(length(pad(col_c)), 60) from dt36_table.\n");
        exec sql select varchar(length(pad(col_c)), 60) into :vch2.buf from dt36_tab-
le;
        printf("%s\n", vch2.buf);

        printf("Test the lowercase() function.\n");
        printf("Query:select varchar(lowercase(left(col_c,5)), 60) from dt36_table.\-
n");
        exec sql select varchar(lowercase(left(col_c,5)), 60) into :vch2.buf from dt-
36_table;
        printf("%s\n", vch2.buf);

        printf("Test the uppercase() function.\n");
        printf("Query:select varchar(uppercase(left(col_c,5)), 60) from dt36_table.\-
n");
        exec sql select varchar(uppercase(left(col_c,5)), 60) into :vch2.buf from dt-
36_table;
        printf("%s\n", vch2.buf);

        printf("Test the size() function.\n");
        printf("Query:select varchar(size(col_c),60) from dt36_table.\n");
        exec sql select varchar(size(col_c), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the soundex() function.\n");
        printf("Query:select varchar(soundex(col_c), 60) from dt36_table.\n");
        exec sql select varchar(soundex(col_c), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the squeeze() function.\n");
        printf("Query:select varchar(squeeze(col_c), 60) from dt36_table.\n");
        exec sql select varchar(squeeze(col_c), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("Test the trim() function.\n");
        printf("Query:select varchar(trim(col_c), 60) from dt36_table.\n");
        exec sql select varchar(trim(col_c), 60) into :vch2.buf from dt36_table;
        printf("%s\n", vch2.buf);

        printf("End Testing.\n");
    }
    else
	printf("Failure!!!\n");
    exec sql disconnect;
}

!!
? esqlc ctype.sc 
<<
~
>>
? sepcc ctype 
<<
~
>>
? seplnk ctype 
<<
~
>>
? run ctype.exe SEPPARAMDB SEPPARAM_CHARSET 
<< IF (ING_CHARSET == "UTF8") 
Success!!!
Test the left() function.
Query:select varchar(left(col_c, 20), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaa
Test the right()function.
Query:select varchar(right(col_c, 20), 60)from dt36_table.
aaaaaaaaaa!!!!!!!!!!
Test the locate() function.
Query:select varchar(locate(col_c,'a'),60) from dt36_table.
The first occurrence of 'a' is in location: 1
Query:select varchar(locate(col_c,'@'),60) from dt36_table.
The first occurrence of '@' is in location: 6
Query:select varchar(locate(col_c,'!'),60) from dt36_table.
The first occurrence of '!' is in location: 15991
Test the shift() function.
Query:select varchar(shift(left(col_c,20),5),60) from dt36_table.
     aaaaa@@@@@@@@@@aaaaa
Query:select varchar(shift(left(col_c, 20),-5),60) from dt36_table.
@@@@@@@@@@aaaaa
Test the charextract() function.
Query:select varchar(charextract(col_c,7),60) from dt36_table.
The 7th character is: @
Test the concat() function.
Query:select varchar(concat(right(col_c,1),'The End!'),60) from dt36_table.
!The End!
Test the length() function.
Query:select varchar(length(col_c), 60) from dt36_table.
16000
Test the pad() function.
Query:select varchar(length(pad(col_c)), 60) from dt36_table.
16000
Test the lowercase() function.
Query:select varchar(lowercase(left(col_c,5)), 60) from dt36_table.
aaaaa
Test the uppercase() function.
Query:select varchar(uppercase(left(col_c,5)), 60) from dt36_table.
AAAAA
Test the size() function.
Query:select varchar(size(col_c),60) from dt36_table.
16000
Test the soundex() function.
Query:select varchar(soundex(col_c), 60) from dt36_table.
A000
Test the squeeze() function.
Query:select varchar(squeeze(col_c), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Test the trim() function.
Query:select varchar(trim(col_c), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
End Testing.
>>
<<
Success!!!
Test the left() function.
Query:select varchar(left(col_c, 20), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaa
Test the right()function.
Query:select varchar(right(col_c, 20), 60)from dt36_table.
aaaaaaaaaa!!!!!!!!!!
Test the locate() function.
Query:select varchar(locate(col_c,'a'),60) from dt36_table.
The first occurrence of 'a' is in location: 1
Query:select varchar(locate(col_c,'@'),60) from dt36_table.
The first occurrence of '@' is in location: 6
Query:select varchar(locate(col_c,'!'),60) from dt36_table.
The first occurrence of '!' is in location: 31991
Test the shift() function.
Query:select varchar(shift(left(col_c,20),5),60) from dt36_table.
     aaaaa@@@@@@@@@@aaaaa
Query:select varchar(shift(left(col_c, 20),-5),60) from dt36_table.
@@@@@@@@@@aaaaa
Test the charextract() function.
Query:select varchar(charextract(col_c,7),60) from dt36_table.
The 7th character is: @
Test the concat() function.
Query:select varchar(concat(right(col_c,1),'The End!'),60) from dt36_table.
!The End!
Test the length() function.
Query:select varchar(length(col_c), 60) from dt36_table.
32000
Test the pad() function.
Query:select varchar(length(pad(col_c)), 60) from dt36_table.
32000
Test the lowercase() function.
Query:select varchar(lowercase(left(col_c,5)), 60) from dt36_table.
aaaaa
Test the uppercase() function.
Query:select varchar(uppercase(left(col_c,5)), 60) from dt36_table.
AAAAA
Test the size() function.
Query:select varchar(size(col_c),60) from dt36_table.
32000
Test the soundex() function.
Query:select varchar(soundex(col_c), 60) from dt36_table.
A000
Test the squeeze() function.
Query:select varchar(squeeze(col_c), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Test the trim() function.
Query:select varchar(trim(col_c), 60) from dt36_table.
aaaaa@@@@@@@@@@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
End Testing.
>>
? delete ctype.sc 
<<
~
>>
? delete ctype.c 
<<
~
>>
? delete ctype.o 
<<
~
>>
? delete ctype.obj 
<<
~
>>
? delete ctype.exe 
<<
~
>>


Ending at: Mon Nov  3 12:39:59 2008
