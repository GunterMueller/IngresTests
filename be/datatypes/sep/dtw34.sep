/*
	Test Name: fja22.sep 
	Time     : 25-Jun-1993 16:17:51
	User Name: testenv 

	Test ID  : fja22 
	Module   : datatypes 
	Filename : fja22.sep 
	Purpose  : It tests the semantics and syntax of float precision 
	Input Files  : none 
	Output Files : none 
	Database     : SEPPARAMDB 
	Tables       : 

		       and tests the functionality of the float precision
		       It uses "-xf" format.
	History      : 25-Jun-1993 (daniel lee)
                       created the test
        <<< IMPORTANT NOTE: >>>
	The float precision display in the canon may
	NOT be correct because of a problem with the
	terminal monitor(TM) when this test was written.
	It is strongly recommended to check the canon FIRST !!!
          20-Jun-1995	(Author)
	  23-Mar-1999   (vande02) Hard-coded VPG_SZ to 8K
*/
? sql -xf SEPPARAMDB 
<<
~
>>
* set autocommit on;\g
<<
Executing . . .

continue
* 
>>
* drop table foo92;\g
<<
~
>>
* create table foo92 (cola float8, colb float4, i integer, j integer1, k     integer-
2) with page_size=8192;\g
<<
Executing . . .

continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(123456789.123456789,     12345678-
9.123456789, 100, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(1123456789.123456789,     1234567-
89.123456789, 200, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(2123456789.123456789,     1234567-
89.123456789, 300, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(3123456789.123456789,     1234567-
89.123456789, 400, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(4123456789.123456789,     1234567-
89.123456789, 500, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(5123456789.123456789,     1234567-
89.123456789, 600, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(6123456789.123456789,     1234567-
89.123456789, 700, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(7123456789.123456789,     1234567-
89.123456789, 800, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(8123456789.123456789,     1234567-
89.123456789, 900, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(9123456789.123456789,     1234567-
89.123456789, 1000, 123, 2000);\g
<<
Executing . . .

(1 row)
continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(10123456789.123456789,     123456-
789.123456789, 1100, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 13:13:42 1995)

continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(11123456789.123456789,     123456-
789.123456789, 1200, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 13:13:46 1995)

continue
* 
>>
* insert into foo92 ( cola, colb, i, j, k ) values(12123456789.123456789,     123456-
789.123456789, 1300, 12345, 2000);\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 13:13:49 1995)

continue
* 
>>
* select * from foo92;\g
<<
Executing . . .


+-----------+-----------+-------------+------+------+
|cola       |colb       |i            |j     |k     |
+-----------+-----------+-------------+------+------+
| 1.235e+008| 1.235e+008|          100|   123|  2000|
| 1.123e+009| 1.235e+008|          200|   123|  2000|
| 2.123e+009| 1.235e+008|          300|   123|  2000|
| 3.123e+009| 1.235e+008|          400|   123|  2000|
| 4.123e+009| 1.235e+008|          500|   123|  2000|
| 5.123e+009| 1.235e+008|          600|   123|  2000|
| 6.123e+009| 1.235e+008|          700|   123|  2000|
| 7.123e+009| 1.235e+008|          800|   123|  2000|
| 8.123e+009| 1.235e+008|          900|   123|  2000|
| 9.123e+009| 1.235e+008|         1000|   123|  2000|
+-----------+-----------+-------------+------+------+
(10 rows)
continue
* 
>>
* select cola * colb from foo92;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
| 1.524e+016|
| 1.387e+017|
| 2.622e+017|
| 3.856e+017|
| 5.091e+017|
| 6.325e+017|
| 7.560e+017|
| 8.794e+017|
| 1.003e+018|
| 1.126e+018|
+-----------+
(10 rows)
continue
* 
>>
* select int2(cola * colb) from foo92;\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 13:13:55 1995)

continue
* 
>>
* select int4(cola * colb) from foo92;\g
<<
Executing . . .

E_US1068 Integer overflow detected in query.
    (Tue Jun 20 13:13:57 1995)

continue
* 
>>
* select float4(i * j) from foo92;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
|  12300.000|
|  24600.000|
|  36900.000|
|  49200.000|
|  61500.000|
|  73800.000|
|  86100.000|
|  98400.000|
| 110700.000|
| 123000.000|
+-----------+
(10 rows)
continue
* 
>>
* select float8(i * colb) from foo92;\g
<<
Executing . . .


+-----------+
|col1       |
+-----------+
| 1.235e+010|
| 2.469e+010|
| 3.704e+010|
| 4.938e+010|
| 6.173e+010|
| 7.407e+010|
| 8.642e+010|
| 9.877e+010|
| 1.111e+011|
| 1.235e+011|
+-----------+
(10 rows)
continue
* 
>>
* select decimal(cola * colb) from foo92;\g
<<
Executing . . .

E_AD1127 Packed Decimal overflow detected in query.
    (Tue Jun 20 13:14:03 1995)

continue
* 
>>
* \q
<<
~
>>


Ending at: Tue Jun 20 13:14:11 1995
