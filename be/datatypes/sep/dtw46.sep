/*
Copyright (c) 2007 Ingres Corporation

	Test Name    : dtw46.sep (formerly fja34.sep)
	User Name    : testenv 
	Module       : datatypes 
	Purpose      : It tests the semantics and syntax of float precision
		       in QUEL
	Input Files  : none 
	Output Files : none 
	Database     : SEPPARAMDB 
	Tables       : qfl_50 
	Synopsis     : It tests f8 literals, any() aggregates, and backward
		       compatibility.
	History      : 30-Jun-1993 (daniel lee)
                       created the test
        <<< IMPORTANT NOTE: >>>
	The float precision display in the canon may
	NOT be correct because of a problem with the
	terminal monitor(TM) when this test was written.
	It is strongly recommended to check the canon FIRST !!!
          25-May-1995	(gauje01)  made canon after drop table ignored, accepted
                        new canons containing new ingres version number and
                        scientific notation in query output.

          17-Dec-1997	(zhaqi01) modify canon due to change float
	  23-Mar-1999   (vande02) Hard-coded VPG_SZ to 8K and added empty canon
                        after 'quel -s SEPPARAMDB1' if test db does not exist
                        you will see the msg."TM could not connect".
          5-Jun-2007   (vande02) Added 4 digits to the scale of one select so
				 the new maximum decimal precision of 39+1 is
				 hit to display the float8 in mantissa+exponent
				 of 1.235e+017.  Made header corrections.

				 This new max decimal precision of 39 is as of
				 Ingres 2006 Release 3.
*/
? quel -s SEPPARAMDB 
<<

>>
* destroy qfl_50 \g
<<
~
>>
* create qfl_50 ( a = float8 ) with page_size=8192 \g
<<
>>
* append qfl_50 ( a = 1.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 2.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 3.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 4.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 5.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 6.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 7.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 8.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 9.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 10.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 11.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 12.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 13.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 14.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 15.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 16.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 17.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 18.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 19.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 20.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 21.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 22.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 23.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 24.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 25.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 26.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 27.00000010001 ) \g
<<
(1 row)
>>
* append qfl_50 ( a = 28.00000010001 ) \g
<<
(1 row)
>>
* retrieve ( a = any(qfl_50.a)) \g
<<

+------+
|a     |
+------+
|     1|
+------+
(1 row)
>>
* retrieve ( a = any(qfl_50.a where qfl_50.a is null )) \g
<<

+------+
|a     |
+------+
|     0|
+------+
(1 row)
>>
* retrieve ( a = sum(qfl_50.a where qfl_50.a is null )) \g
<<

+-----------+
|a          |
+-----------+
|      0.000|
+-----------+
(1 row)
>>
* retrieve ( a = sumu(qfl_50.a where qfl_50.a is null )) \g
<<

+-----------+
|a          |
+-----------+
|      0.000|
+-----------+
(1 row)
>>
* retrieve ( a = 1234567891.00000010001, b =     ii_dv_desc(1234567891.00000010001))-
 \g
<<

+-----------------------+------------------------------+
|a                      |b                             |
+-----------------------+------------------------------+
| 1234567891.00000010001|decimal(21, 11)               |
+-----------------------+------------------------------+
(1 row)
>>
* retrieve ( a = 12345678912345.00000010001234, b =     ii_dv_desc(1234567891.000000-
10001)) \g
<<

+------------------------------+------------------------------+
|a                             |b                             |
+------------------------------+------------------------------+
| 12345678912345.00000010001234|decimal(21, 11)               |
+------------------------------+------------------------------+
(1 row)
>>
* retrieve ( a = 123456789123456789.0000001000123456789123, b =     ii_dv_desc(123456789-
123456789.0000001000123456789123)) \g
<<

+-----------+------------------------------+
|a          |b                             |
+-----------+------------------------------+
| 1.235e+017|float8                        |
+-----------+------------------------------+
(1 row)
>>
* retrieve ( a =     123456789123456789123456789.00000010001234567891234567891234567-
8, b =     ii_dv_desc(123456789123456789123456789.0000001000123456789123456789)) \g
<<

+-----------+------------------------------+
|a          |b                             |
+-----------+------------------------------+
| 1.235e+026|float8                        |
+-----------+------------------------------+
(1 row)
>>
* retrieve ( a = 2136372537, b = ii_dv_desc(2136372537 )) \g
<<

+-------------+------------------------------+
|a            |b                             |
+-------------+------------------------------+
|   2136372537|integer4                      |
+-------------+------------------------------+
(1 row)
>>
* retrieve ( a = 213637253712345678, b = ii_dv_desc(213637253712345678 )) \g
<<

+-------------------+------------------------------+
|a                  |b                             |
+-------------------+------------------------------+
| 213637253712345678|decimal(18, 0)                |
+-------------------+------------------------------+
(1 row)
>>
* retrieve ( a = 21363725371234567812345678, b =     ii_dv_desc(21363725371234567812-
345678 )) \g
<<

+---------------------------+------------------------------+
|a                          |b                             |
+---------------------------+------------------------------+
| 21363725371234567812345678|decimal(26, 0)                |
+---------------------------+------------------------------+
(1 row)
>>
* retrieve ( a = 1e, b = ii_dv_desc(1e)) \g
<<

+-----------+------------------------------+
|a          |b                             |
+-----------+------------------------------+
|      1.000|float8                        |
+-----------+------------------------------+
(1 row)
>>
* retrieve ( a = 1.e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      1.000|
+-----------+
(1 row)
>>
* retrieve ( a = 1.1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      1.100|
+-----------+
(1 row)
>>
* retrieve ( a = .1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      0.100|
+-----------+
(1 row)
>>
* retrieve ( a = 1e37 ) \g
<<

+-----------+
|a          |
+-----------+
| 1.000e+037|
+-----------+
(1 row)
>>
* retrieve ( a = 1e-37 ) \g
<<

+-----------+
|a          |
+-----------+
| 1.000e-037|
+-----------+
(1 row)
>>
<<

+-----------+
|a          |
+-----------+
|      0.000|
+-----------+
(1 row)
>>
* retrieve ( a = -1.e0 ) \g
<<

+-----------+
|a          |
+-----------+
|     -1.000|
+-----------+
(1 row)
>>
* retrieve ( a = -.1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|     -0.100|
+-----------+
(1 row)
>>
* retrieve ( a = -1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|     -1.000|
+-----------+
(1 row)
>>
* retrieve ( a = +1.e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      1.000|
+-----------+
(1 row)
>>
* retrieve ( a = +.1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      0.100|
+-----------+
(1 row)
>>
* retrieve ( a = +1e0 ) \g
<<

+-----------+
|a          |
+-----------+
|      1.000|
+-----------+
(1 row)
>>
* retrieve ( a = .e0 ) \g
<<
E_US0A29 line 1, Syntax error on '.'.  The correct syntax is: 
    RETRIEVE [[INTO] tablename] (target_list) 
                    [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ] 
            RETRIEVE UNIQUE (target_list) [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ]
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = 1.1.e0 ) \g
<<
E_US0A29 line 1, Syntax error on '.'.  The correct syntax is: 
    RETRIEVE [[INTO] tablename] (target_list) 
                    [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ] 
            RETRIEVE UNIQUE (target_list) [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ]
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = 1.1.1e0 ) \g
<<
E_US0A29 line 1, Syntax error on '.1e0'.  The correct syntax is: 
    RETRIEVE [[INTO] tablename] (target_list) 
                    [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ] 
            RETRIEVE UNIQUE (target_list) [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ]
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = e0 ) \g
<<
E_US0B5A line 1, There is no such function as 'e0'.
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = -e0 ) \g
<<
E_US0B5A line 1, There is no such function as 'e0'.
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = +e0 ) \g
<<
E_US0B5A line 1, There is no such function as 'e0'.
    (Wed Jun 30 14:30:28 1993)

>>
* retrieve ( a = 1e1.1 ) \g
<<
E_US0A29 line 1, Syntax error on '.1'.  The correct syntax is: 
    RETRIEVE [[INTO] tablename] (target_list) 
                    [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ] 
            RETRIEVE UNIQUE (target_list) [WHERE qual] [SORT [BY] 
                    columnname1 [:sortorder] {, columnname2 [:sortorder]} ]
    (Wed Jun 30 14:30:28 1993)

>>
* \q
<<
~
>>


Ending at: Wed Dec 17 14:01:36 1997
