/*
Copyright (c) 2005 Ingres Corporation


	Test Name: ttpp20.sep
	Time: Mon Dec 16 10:56:13 1996
	User Name: testenv
	Terminal type: septerm
 
	Test ID : ttpp20.sep 
	Module  : 
	Filename:
	Purpose	: This is an ESQL version of ttpp02.sep. The purpose 
 		  of this test is to pass a global temporary table
                  as a parameter to a database procedure for the
                  varchar datatype.
	Input Files  :	runme.sc
	Output Files :	*.c, *.o, *.exe
	Database     :	ttppdb
	Tables       :  session.gt, t1, t2
	Synopsis     :	testing pass global temp. table as parameter
			into database procedure for datatype varchar

 History: 16-Dec-1996	(wanya01)	Created
	  28-May-1997	(cheis01)	ESQL version of ttpp02.sep created.
	  17-Sep-1998	(kinte01)	Cleanup files left around after
					test has completed (VMS specific)
	  23-Mar-1999   (vande02)	Hard-coded VPG_SZ to 8K
	  08-Jul-2002   (shafa01) 	Test cleanup Bug: 108167
          22-Mar-2005   (sarjo01) Fixed cursor fetch loop to exit on error
                        rather than loop infinitely; changed runme.sc to
                        consist of 1 rather than multiple filled files.
          30-Jan-2006	(boija02) Updated copyright info for Ingres Corp.

*/
? fill runme.sc 
!!
#include <stdio.h>

exec sql include sqlca;

void print1()
{
        exec sql begin declare section;
        char    one[15];
        exec sql end declare section;
 
        exec sql whenever sqlerror call sqlprint;
        exec sql whenever sqlmessage call sqlprint;
 
        exec sql declare c1 cursor for select * from t1;

        exec sql open c1 for readonly;
        printf("\nt1\n");
        printf("------------------\n");
        printf("   col1\n");
        printf("------------------\n");
        while (sqlca.sqlcode == 0) {
           exec sql fetch c1 into :one;
           if (sqlca.sqlcode != 100)
	   	printf("%10s\n", one);
        }
        exec sql close c1;
        printf("\n");
}
void print2()
{
        exec sql begin declare section;
        int	two;
        char    three[15];
        exec sql end declare section;
 
        exec sql whenever sqlerror call sqlprint;
        exec sql whenever sqlmessage call sqlprint;
 
        exec sql declare c2 cursor for select * from t2;

        exec sql open c2 for readonly;
        printf("\nt2\n");
        printf("--------------------------\n");
        printf("   col1		col2\n");
        printf("--------------------------\n");
        while (sqlca.sqlcode == 0) {
           exec sql fetch c2 into :two, :three;
           if (sqlca.sqlcode != 100)
		printf("%5d\t%10s\n", two, three);
        }
        exec sql close c2;
        printf("\n");
}
void ttpp1()
{
exec sql whenever sqlerror call sqlprint;
exec sql whenever sqlmessage call sqlprint;

exec sql set autocommit on;
exec sql drop session.gt;
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;
exec sql drop table t1;
exec sql drop table t2;


exec sql declare global temporary table session.gt(col1 int, col2 varchar(8))
	on commit preserve rows with norecovery, page_size= 8192;
exec sql insert into session.gt values (1000, 'gt.one');
exec sql insert into session.gt values (2000, 'gt.two');
exec sql insert into session.gt values (3000, 'gt.three');
exec sql insert into session.gt values (4000, 'gt.four');
exec sql insert into session.gt values (5000, 'gt.five');

exec sql create table t1(col1 char(8) ) with page_size=8192;
exec sql insert into t1 values('t1.one');
exec sql insert into t1 values('t1.two');

exec sql create table t2(col1 int, col2 char(8)) with page_size= 8192;

exec sql create procedure p1( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t1 select col2 from gtt1 where col2='gt.five';
end;

exec sql create procedure p2( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t2 select * from gtt1;
end;

exec sql create procedure p3( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into gtt1 values (500,'gt.new');
    insert into t2 select * from gtt1 where col2='gt.new';
end;

exec sql create procedure p4( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    update t2 from gtt1 set col2='update' where t2.col1=gtt1.col1 and 
    gtt1.col1=4000;
end;

exec sql create procedure p5( gtt1 set of (col1 int, col2 varchar(8) )) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1 
   where t2.col1=gtt1.col1 and gtt1.col2='gt.new' and gtt1.col1<=3000);
   delete from t1 where t1.col1 in (select col2 from gtt1);
end;

exec sql create procedure p6 (gtt1 set of (col1 int, col2 varchar(8))) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1);
end;

print1();
printf("execute procedure p1 (gtt1=session.gt);\n");
exec sql execute procedure p1 (gtt1=session.gt);
print1();

print2();
printf("execute procedure p2 (gtt1=session.gt);\n");
exec sql execute procedure p2 (gtt1=session.gt);
print2();

printf("execute procedure p3 (gtt1=session.gt);\n");
exec sql execute procedure p3 (gtt1=session.gt);
print2();

printf("execute procedure p4 (gtt1=session.gt);\n");
exec sql execute procedure p4 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p5 (gtt1=session.gt);\n");
exec sql execute procedure p5 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p6 (gtt1=session.gt);\n");
exec sql execute procedure p6 (gtt1=session.gt);
print2();

exec sql drop table t1;
exec sql drop table t2;        
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;
exec sql drop table session.gt;
}
void ttpp2()
{
exec sql whenever sqlerror call sqlprint;
exec sql whenever sqlmessage call sqlprint;

exec sql set autocommit on;
exec sql drop session.gt;
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;

exec sql drop table t1;
exec sql drop table t2;


exec sql declare global temporary table session.gt(col1 int, col2 varchar(8))
	on commit preserve rows with norecovery, page_size=8192;
exec sql insert into session.gt values (1000, 'gt.one');
exec sql insert into session.gt values (2000, 'gt.two');
exec sql insert into session.gt values (3000, 'gt.three');
exec sql insert into session.gt values (4000, 'gt.four');
exec sql insert into session.gt values (5000, 'gt.five');

exec sql create table t1(col1 varchar(8) )  with page_size=8192;
exec sql insert into t1 values('t1.one');
exec sql insert into t1 values('t1.two');

exec sql create table t2(col1 int, col2 varchar(8)) with page_size=8192;

exec sql create procedure p1( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t1 select col2 from gtt1 where col2='gt.five';
end;

exec sql create procedure p2( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t2 select * from gtt1;
end;

exec sql create procedure p3( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into gtt1 values (500,'gt.new');
    insert into t2 select * from gtt1 where col2='gt.new';
end;

exec sql create procedure p4( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    update t2 from gtt1 set col2='update' where t2.col1=gtt1.col1 and 
    gtt1.col1=4000;
end;

exec sql create procedure p5( gtt1 set of (col1 int, col2 varchar(8) )) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1 
   where t2.col1=gtt1.col1 and gtt1.col2='gt.new' and gtt1.col1<=3000);
   delete from t1 where t1.col1 in (select col2 from gtt1);
end;

exec sql create procedure p6 (gtt1 set of (col1 int, col2 varchar(8))) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1);
end;

print1();
printf("execute procedure p1 (gtt1=session.gt);\n");
exec sql execute procedure p1 (gtt1=session.gt);
print1();

print2();
printf("execute procedure p2 (gtt1=session.gt);\n");
exec sql execute procedure p2 (gtt1=session.gt);
print2();

printf("execute procedure p3 (gtt1=session.gt);\n");
exec sql execute procedure p3 (gtt1=session.gt);
print2();

printf("execute procedure p4 (gtt1=session.gt);\n");
exec sql execute procedure p4 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p5 (gtt1=session.gt);\n");
exec sql execute procedure p5 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p6 (gtt1=session.gt);\n");
exec sql execute procedure p6 (gtt1=session.gt);
print2();

exec sql drop table t1;
exec sql drop table t2;        
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;
exec sql drop table session.gt;
}
void ttpp3()
{
exec sql whenever sqlerror call sqlprint;
exec sql whenever sqlmessage call sqlprint;

exec sql set autocommit on;
exec sql drop session.gt;
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;
exec sql drop table t1;
exec sql drop table t2;


exec sql declare global temporary table session.gt(col1 int, col2 varchar(8))
	on commit preserve rows with norecovery, page_size= 8192;
exec sql insert into session.gt values (1000, 'gt.one');
exec sql insert into session.gt values (2000, 'gt.two');
exec sql insert into session.gt values (3000, 'gt.three');
exec sql insert into session.gt values (4000, 'gt.four');
exec sql insert into session.gt values (5000, 'gt.five');

exec sql create table t1(col1 long varchar ) with page_size= 8192;
exec sql insert into t1 values('t1.one');
exec sql insert into t1 values('t1.two');

exec sql create table t2(col1 int, col2 long varchar) with page_size=8192;

exec sql create procedure p1( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t1 select col2 from gtt1 where col2='gt.five';
end;

exec sql create procedure p2( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into t2 select * from gtt1;
end;

exec sql create procedure p3( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    insert into gtt1 values (500,'gt.new');
    insert into t2 select * from gtt1 where col2='gt.new';
end;

exec sql create procedure p4( gtt1 set of (col1 int, col2 varchar(8) )) as 
begin 
    update t2 from gtt1 set col2='update' where t2.col1=gtt1.col1 and 
    gtt1.col1=4000;
end;

exec sql create procedure p5( gtt1 set of (col1 int, col2 varchar(8) )) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1 
   where t2.col1=gtt1.col1 and varchar(gtt1.col2,8)='gt.new'
   and gtt1.col1<=3000);
   delete from t1 where varchar(t1.col1,8) in (select col2 from gtt1);
end;

exec sql create procedure p6 (gtt1 set of (col1 int, col2 varchar(8))) as
begin
   delete from t2 where t2.col1 in (select gtt1.col1 from gtt1);
end;

print1();
printf("execute procedure p1 (gtt1=session.gt);\n");
exec sql execute procedure p1 (gtt1=session.gt);
print1();

print2();
printf("execute procedure p2 (gtt1=session.gt);\n");
exec sql execute procedure p2 (gtt1=session.gt);
print2();

printf("execute procedure p3 (gtt1=session.gt);\n");
exec sql execute procedure p3 (gtt1=session.gt);
print2();

printf("execute procedure p4 (gtt1=session.gt);\n");
exec sql execute procedure p4 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p5 (gtt1=session.gt);\n");
exec sql execute procedure p5 (gtt1=session.gt);
print2();
print1();

printf("execute procedure p6 (gtt1=session.gt);\n");
exec sql execute procedure p6 (gtt1=session.gt);
print2();

exec sql drop table t1;
exec sql drop table t2;        
exec sql drop procedure p1;
exec sql drop procedure p2;
exec sql drop procedure p3;
exec sql drop procedure p4;
exec sql drop procedure p5;
exec sql drop procedure p6;
exec sql drop table session.gt;
}
main(argc, argv)
int argc;
char **argv;
{
	exec sql begin declare section;
	char	dbname[20];
	exec sql end declare section;

	strcpy(dbname, argv[1]);
	exec sql connect :dbname;

	exec sql whenever sqlerror call sqlprint;
	exec sql whenever sqlmessage call sqlprint;
	exec sql whenever sqlerror continue;

        ttpp1();
        ttpp2();
        ttpp3();

	exec sql commit;
	exec sql disconnect;

}
!!
? sepesqlc runme 
<<
ESQL runme.sc:
>>
? sepcc runme 
<<
>>
<<
runme.c
>>
? seplnk runme 
<<
>>
? run runme.exe SEPPARAMDB 
<<
E_US0ACC DROP: 'gt' is not owned by $Sess0000009D.
    (Wed May 28 10:50:49 1997)
E_US0965 Procedure 'p1' not found.
    (Wed May 28 10:50:50 1997)
E_US0965 Procedure 'p2' not found.
    (Wed May 28 10:50:50 1997)
E_US0965 Procedure 'p3' not found.
    (Wed May 28 10:50:50 1997)
E_US0965 Procedure 'p4' not found.
    (Wed May 28 10:50:50 1997)
E_US0965 Procedure 'p5' not found.
    (Wed May 28 10:50:51 1997)
E_US0965 Procedure 'p6' not found.
    (Wed May 28 10:50:51 1997)
E_US0AC1 DROP: 't1' does not exist or is not owned by you.
    (Wed May 28 10:50:51 1997)
E_US0AC1 DROP: 't2' does not exist or is not owned by you.
    (Wed May 28 10:50:51 1997)

t1
------------------
   col1
------------------
  t1.one  
  t1.two  

execute procedure p1 (gtt1=session.gt);

t1
------------------
   col1
------------------
  t1.one  
  t1.two  
  gt.five 


t2
--------------------------
   col1		col2
--------------------------

execute procedure p2 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	  gt.one  
 2000	  gt.two  
 3000	  gt.three
 4000	  gt.four 
 5000	  gt.five 

execute procedure p3 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	  gt.one  
 2000	  gt.two  
 3000	  gt.three
 4000	  gt.four 
 5000	  gt.five 
  500	  gt.new  

execute procedure p4 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	  gt.one  
 2000	  gt.two  
 3000	  gt.three
 4000	  update  
 5000	  gt.five 
  500	  gt.new  


t1
------------------
   col1
------------------
  t1.one  
  t1.two  
  gt.five 

execute procedure p5 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	  gt.one  
 2000	  gt.two  
 3000	  gt.three
 4000	  update  
 5000	  gt.five 


t1
------------------
   col1
------------------
  t1.one  
  t1.two  

execute procedure p6 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------

E_US0ACC DROP: 'gt' is not owned by $Sess0000009D.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p1' not found.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p2' not found.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p3' not found.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p4' not found.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p5' not found.
    (Wed May 28 10:51:12 1997)
E_US0965 Procedure 'p6' not found.
    (Wed May 28 10:51:12 1997)
E_US0AC1 DROP: 't1' does not exist or is not owned by you.
    (Wed May 28 10:51:12 1997)
E_US0AC1 DROP: 't2' does not exist or is not owned by you.
    (Wed May 28 10:51:12 1997)

t1
------------------
   col1
------------------
    t1.one
    t1.two

execute procedure p1 (gtt1=session.gt);

t1
------------------
   col1
------------------
    t1.one
    t1.two
   gt.five


t2
--------------------------
   col1		col2
--------------------------

execute procedure p2 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	   gt.four
 5000	   gt.five

execute procedure p3 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	   gt.four
 5000	   gt.five
  500	    gt.new

execute procedure p4 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	    update
 5000	   gt.five
  500	    gt.new


t1
------------------
   col1
------------------
    t1.one
    t1.two
   gt.five

execute procedure p5 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	    update
 5000	   gt.five


t1
------------------
   col1
------------------
    t1.one
    t1.two

execute procedure p6 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------

E_US0ACC DROP: 'gt' is not owned by $Sess0000009D.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p1' not found.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p2' not found.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p3' not found.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p4' not found.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p5' not found.
    (Wed May 28 10:51:21 1997)
E_US0965 Procedure 'p6' not found.
    (Wed May 28 10:51:21 1997)
E_US0AC1 DROP: 't1' does not exist or is not owned by you.
    (Wed May 28 10:51:21 1997)
E_US0AC1 DROP: 't2' does not exist or is not owned by you.
    (Wed May 28 10:51:21 1997)

t1
------------------
   col1
------------------
    t1.one
    t1.two

execute procedure p1 (gtt1=session.gt);

t1
------------------
   col1
------------------
    t1.one
    t1.two
   gt.five


t2
--------------------------
   col1		col2
--------------------------

execute procedure p2 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	   gt.four
 5000	   gt.five

execute procedure p3 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	   gt.four
 5000	   gt.five
  500	    gt.new

execute procedure p4 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	    update
 5000	   gt.five
  500	    gt.new


t1
------------------
   col1
------------------
    t1.one
    t1.two
   gt.five

execute procedure p5 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------
 1000	    gt.one
 2000	    gt.two
 3000	  gt.three
 4000	    update
 5000	   gt.five


t1
------------------
   col1
------------------
    t1.one
    t1.two

execute procedure p6 (gtt1=session.gt);

t2
--------------------------
   col1		col2
--------------------------

>>
? delete runme.c
<<
~
>>
? delete runme.o
<<
~
>>
? delete runme.exe
<<
~
>>
? delete runme.obj
<<
~
>>


Ending at: Wed May 28 10:52:02 1997
