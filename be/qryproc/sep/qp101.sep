/*
	Test Name: efa35.sep
	Time: Fri Apr  2 18:54:13 1993
	User Name: testenv
	Terminal type: septerm
 
	Test ID : (TBD)
	Module  : 
	Filename: efa35.sep
	Purpose	: Test nested dbprocs with byref and nonbyref parameters.
	Input Files  :
	Output Files :
	Database     : SEPPARAMDB
	Tables       :
	Synopsis     : Create a chain of 5 nested dbprocs. Each dbproc will 
		       call the next dbproc and pass various combinations of
		       byref and nonbyref parameters. In addition, test 
		       nested dbprocs with byref parameter passing nullable
		       datatypes.

 		History:  2-Apr-1993	(malee)	Created
			  7-MAR-1997    (vissu01) Modified for NT
*/
? fill efa35.sc 
!!
exec sql include sqlca;

exec sql whenever sqlerror call sqlprint;
exec sql whenever not found call sqlprint;
exec sql whenever sqlwarning call sqlprint;
exec sql whenever sqlmessage call sqlprint;

main(argc, argv)
exec sql begin declare section;
  int  argc;
  char **argv;
exec sql end declare section;
{
int testno;
	exec sql connect :argv[1];
	testno = atoi(argv[2]);
	switch (testno)
	{ case 1: efa35_1();
	  break;
	  case 2: efa35_2();
	  break;
	  case 3: efa35_3();
	  break;
	  default:
	  break;
	}
	exec sql disconnect;
}  /* main */

efa35_1()
{
exec sql begin declare section;
  short i1;
  char var1[81];
exec sql end declare section;

        /**********/
	/* test 1 */
        /**********/

	printf ("\ntest 1:  test nested dbproc with byref parameter\n\n");
	exec sql drop procedure efa35_1;
	exec sql create procedure efa35_1 (
		i1		i1		not null with default,
		var1            c80             not null with default) as
	begin
		message i1;
		i1		=  2;
		message i1;
		message var1;
		var1   = 'value in efa35_1';
		message var1;
	end;
        i1 =  1;
        strcpy (var1, "this is a test");
	printf ("passing i1    = %d\n", i1);
	printf ("passing var1  = %s\n", var1);
	exec sql execute procedure efa35_1 (i1        = byref(:i1),
					     var1      = byref(:var1));
	printf ("returned i1   = %d\n", i1);
	printf ("returned var1 = %s\n", var1);



	exec sql drop procedure foo;
	exec sql create procedure foo (
		i1		i1		not null with default,
		var1		c80		not null with default) as
	begin
		message i1;
		i1		=  8;
		message i1;
		message var1;
		var1 = 'value in foo proc';
		message var1;
	        execute procedure efa35_1 (var1 = byref(:var1),
					    i1   = byref(:i1));
	end;
	printf ("passing i1    = %d\n", i1);
	printf ("passing var1  = %s\n", var1);
	exec sql execute procedure foo (var1        = byref(:var1));
	printf ("returned i1   = %d\n", i1);
	printf ("returned var1 = %s\n", var1);

	exec sql commit;

} /* efa35_1() */

efa35_2()
{
exec sql begin declare section;
  int a,b,c,d,e,f,g,h;
exec sql end declare section;

        /**********/
	/* test 2 */
        /**********/

	printf ("\ntest 2:  test nested dbprocs with byref parameter and nonbyref parameter-
\n\n");

	exec sql drop procedure efa35_2_5;
	exec sql create procedure efa35_2_5 (
		a		integer		not null with default,
		b		integer		not null with default,
		c		integer		not null with default,
		d		integer		not null with default,
		e		integer		not null with default,
		f		integer		not null with default,
		g		integer		not null with default,
		h               integer         not null with default) as
	begin
		message 'calling efa35_2_5';
		message a;
		a =  a + 10;
		message a '<-  a';
		message b;
		b =  b + 10;
		message b '<-  b';
		message c;
		c =  c + 10;
		message c '<-  c';
		message d;
		d =  d + 10;
		message d '<-  d';
		message e;
		e =  e + 10;
		message e '<-  e';
		message f;
		f =  f + 10;
		message f '<-  f';
		message g;
		g =  g + 10;
		message g '<-  g';
		message h;
		h =  h + 10;
		message h '<-  h';
	end;

	exec sql drop procedure efa35_2_4;
	exec sql create procedure efa35_2_4 (
		a		integer		not null with default,
		b		integer		not null with default,
		c		integer		not null with default,
		d		integer		not null with default,
		e		integer		not null with default,
		f		integer		not null with default,
		g		integer		not null with default,
		h               integer         not null with default) as
	begin
		message 'calling efa35_2_4';
		message a;
		a =  a + 1;
		message a '<-  a';
		message b;
		b =  b + 1;
		message b '<-  b';
		message c;
		c =  c + 1;
		message c '<-  c';
		message d;
		d =  d + 1;
		message d '<-  d';
		message e;
		e =  e + 1;
		message e '<-  e';
		message f;
		f =  f + 1;
		message f '<-  f';
		message g;
		g =  g + 1;
		message g '<-  g';
		message h;
		h =  h + 1;
		message h '<-  h';
		execute procedure efa35_2_5 (a = byref(:a),
					 b = byref(:b),
					 c = byref(:c),
					 d = byref(:d),
					 e = byref(:e),
					 f = byref(:f),
					 g = byref(:g),
					 h = byref(:h));

	end;

	exec sql drop procedure efa35_2_3;
	exec sql create procedure efa35_2_3 (
		a		integer		not null with default,
		b		integer		not null with default,
		c		integer		not null with default,
		d		integer		not null with default,
		e		integer		not null with default,
		f		integer		not null with default,
		g		integer		not null with default,
		h               integer         not null with default) as
	begin
		message 'calling efa35_2_3';
		message a;
		a =  a + 1;
		message a '<-  a';
		message b;
		b =  b + 1;
		message b '<-  b';
		message c;
		c =  c + 1;
		message c '<-  c';
		message d;
		d =  d + 1;
		message d '<-  d';
		message e;
		e =  e + 1;
		message e '<-  e';
		message f;
		f =  f + 1;
		message f '<-  f';
                message g '<-  g';
                message h '<-  h';
		execute procedure efa35_2_4 (a = byref(:a),
					 b = :b,
					 c = byref(:c),
					 d = :d,
					 e = byref(:e),
					 f = :f,
					 g = byref(:g),
					 h = :h);

	end;

	exec sql drop procedure efa35_2_2;
	exec sql create procedure efa35_2_2 (
		a		integer		not null with default,
		b		integer		not null with default,
		c		integer		not null with default,
		d		integer		not null with default,
		e		integer		not null with default,
		f		integer		not null with default,
		g		integer		not null with default,
		h               integer         not null with default) as
	begin
		message 'calling efa35_2_2';
		message a;
		a =  a + 1;
		message a '<-  a';
		message b;
		b =  b + 1;
		message b '<-  b';
		message c;
		c =  c + 1;
		message c '<-  c';
		message d;
		d =  d + 1;
		message d '<-  d';
                message e '<-  e';
                message f '<-  f';
                message g '<-  g';
                message h '<-  h';
		execute procedure efa35_2_3 (a = :a,
					 b = byref(:b),
					 c = :c,
					 d = byref(:d),
					 e = :e,
					 f = byref(:f));
	end;

	exec sql drop procedure efa35_2_1;
	exec sql create procedure efa35_2_1 (
		a		integer		not null with default,
		b		integer		not null with default,
		c		integer		not null with default,
		d		integer		not null with default,
		e		integer		not null with default,
		f		integer		not null with default,
		g		integer		not null with default,
		h               integer         not null with default) as
	begin
		message 'calling efa35_2_1';
		message a;
		a =  a + 1;
		message a '<-  a';
		message b;
		b =  b + 1;
		message b '<-  b';
		message c;
		c =  c + 1;
		message c '<-  c';
		message d;
		d =  d + 1;
		message d '<-  d';
		message e;
		e =  e + 1;
		message e '<-  e';
		message f;
		f =  f + 1;
		message f '<-  f';
		message g;
		g =  g + 1;
		message g '<-  g';
		message h;
		h =  h + 1;
		message h '<-  h';
		execute procedure efa35_2_2 (a = byref(:a),
					 b = :b,
					 c = byref(:c),
					 d = :d);
	end;

        a =  1; b = 0; c = 1; d = 0; e = 1; f = 0; g = 1; h = 0;

	exec sql execute procedure efa35_2_1 (a = byref(:a),
					  b = byref(:b),
					  c = byref(:c),
					  d = byref(:d),
					  e = byref(:e),
					  f = byref(:f),
					  g = byref(:g),
					  h = byref(:h));
        printf ("a = %d\n", a);
        printf ("b = %d\n", b);
        printf ("c = %d\n", c);
        printf ("d = %d\n", d);
        printf ("e = %d\n", e);
        printf ("f = %d\n", f);
        printf ("g = %d\n", g);
        printf ("h = %d\n", h);

	exec sql execute procedure efa35_2_1 (a = :a,
					  b = byref(:b),
					  c = :c,
					  d = byref(:d),
					  e = byref(:e),
					  f = :f,
					  g = byref(:g),
					  h = :h);
        printf ("a = %d\n", a);
        printf ("b = %d\n", b);
        printf ("c = %d\n", c);
        printf ("d = %d\n", d);
        printf ("e = %d\n", e);
        printf ("f = %d\n", f);
        printf ("g = %d\n", g);
        printf ("h = %d\n", h);

	exec sql commit;

} /* efa35_2() */

efa35_3()
{
exec sql begin declare section;
  int i;
  float f4;
  char c50[50];
exec sql end declare section;

        /**********/
	/* test 3 */
        /**********/

	printf ("\ntest 3:  test nested dbproc with byref parameter passing nullable dataty-
pes\n\n");
	exec sql drop procedure efa35_3_3;
	exec sql create procedure efa35_3_3 (
		i		i1		with null,
		f4		f4		with null,
		c50             c50             with null) as
	begin
		i  =  7;
		f4  =  .05;
		c50 = 'value in efa35_3_3';
	end;

	exec sql drop procedure efa35_3_2;
	exec sql create procedure efa35_3_2 (
		i		i1		with null,
		f4		f4		with null,
		c50             c50             with null) as
	begin
		i  =  0;
		f4  =  0;
		c50 = '';
	end;

	exec sql drop procedure efa35_3_1;
	exec sql create procedure efa35_3_1 (
		i		i1		not null with default,
		f4		f4		not null with default,
		c50             c50             not null with default) as
	declare mesg_buf varchar(81) not null with default;
	begin
		i  =  i + 5;
		f4  =  f4 + .05;
		c50 = 'value in efa35_3_1' + c50;
		message i;
		mesg_buf = varchar(:f4);
		message mesg_buf;
		message c50;
	        execute procedure efa35_3_2 (i        = byref(:i),
					      f4        = byref(:f4),
					      c50       = byref(:c50));
	end;
        i =  9;
        f4 =  .07;
        strcpy (c50, "this is a test");
	printf ("passing i     = %d\n", i);
	printf ("passing f4    = %f\n", f4);
	printf ("passing c50   = %s\n", c50);
	exec sql execute procedure efa35_3_1 (i        = byref(:i),
					       f4        = byref(:f4),
					       c50       = byref(:c50));
	printf ("returned i    = %d\n", i);
	printf ("returned f4   = %f\n", f4);
	printf ("returned c50  = %s\n\n", c50);

	exec sql commit;

	printf ("passing i     = %d\n", i);
	printf ("passing f4    = %f\n", f4);
	printf ("passing c50   = %s\n", c50);
	exec sql execute procedure efa35_3_1 (i        = byref(:i),
					       f4        = byref(:f4),
					       c50       = byref(:c50));
	printf ("returned i    = %d\n", i);
	printf ("returned f4   = %f\n", f4);
	printf ("returned c50  = %s\n", c50);
        exec sql execute procedure efa35_3_3 (i        = byref(:i),
 					       f4        = byref(:f4),
					       c50       = byref(:c50));
	printf ("returned i    = %d\n", i);
	printf ("returned f4   = %f\n", f4);
	printf ("returned c50  = %s\n", c50);

	exec sql commit;

} /* efa35_3() */
!!
? sepesqlc efa35.sc 
<<
ESQL efa35.sc:
>>
? sepcc efa35.c 
<<
>>
<<
efa35.c
>>
? seplnk efa35 
<<
>>
? sql -s SEPPARAMDB 
<<
~
>>
* drop procedure efa35_1\g
<<
~
>>
* drop procedure foo\g
<<
~
>>
* drop procedure efa35_2_5\g
<<
~
>>
* drop procedure efa35_2_4\g
<<
~
>>
* drop procedure efa35_2_3\g
<<
~
>>
* drop procedure efa35_2_2\g
<<
~
>>
* drop procedure efa35_2_1\g
<<
~
>>
* drop procedure efa35_3_3\g
<<
~
>>
* drop procedure efa35_3_2\g
<<
~
>>
* drop procedure efa35_3_1\g
<<
~
>>
* \q
<<
>>
? run efa35.exe SEPPARAMDB 1
<<

test 1:  test nested dbproc with byref parameter

E_US0965 Procedure 'efa35_1' not found.
    (Mon May  3 13:24:25 1993)
passing i1    = 1
passing var1  = this is a test
MESSAGE: 1
MESSAGE: 2
MESSAGE 0: this is a test
MESSAGE 0: value in efa35_1
returned i1   = 2
returned var1 = value in efa35_1
E_US0965 Procedure 'foo' not found.
    (Mon May  3 13:24:25 1993)
passing i1    = 2
passing var1  = value in efa35_1
MESSAGE: 0
MESSAGE: 8
MESSAGE 0: value in efa35_1
MESSAGE 0: value in foo proc
MESSAGE: 8
MESSAGE: 2
MESSAGE 0: value in foo proc
MESSAGE 0: value in efa35_1
returned i1   = 2
returned var1 = value in efa35_1

>>
? run efa35.exe SEPPARAMDB 2
<<

test 2:  test nested dbprocs with byref parameter and nonbyref parameter

E_US0965 Procedure 'efa35_2_5' not found.
    (Mon May  3 13:24:26 1993)
E_US0965 Procedure 'efa35_2_4' not found.
    (Mon May  3 13:24:26 1993)
E_US0965 Procedure 'efa35_2_3' not found.
    (Mon May  3 13:24:26 1993)
E_US0965 Procedure 'efa35_2_2' not found.
    (Mon May  3 13:24:26 1993)
E_US0965 Procedure 'efa35_2_1' not found.
    (Mon May  3 13:24:26 1993)
MESSAGE 0: calling efa35_2_1
MESSAGE: 1
MESSAGE 2: <-  a
MESSAGE: 0
MESSAGE 1: <-  b
MESSAGE: 1
MESSAGE 2: <-  c
MESSAGE: 0
MESSAGE 1: <-  d
MESSAGE: 1
MESSAGE 2: <-  e
MESSAGE: 0
MESSAGE 1: <-  f
MESSAGE: 1
MESSAGE 2: <-  g
MESSAGE: 0
MESSAGE 1: <-  h
MESSAGE 0: calling efa35_2_2
MESSAGE: 2
MESSAGE 3: <-  a
MESSAGE: 1
MESSAGE 2: <-  b
MESSAGE: 2
MESSAGE 3: <-  c
MESSAGE: 1
MESSAGE 2: <-  d
MESSAGE 0: <-  e
MESSAGE 0: <-  f
MESSAGE 0: <-  g
MESSAGE 0: <-  h
MESSAGE 0: calling efa35_2_3
MESSAGE: 3
MESSAGE 4: <-  a
MESSAGE: 2
MESSAGE 3: <-  b
MESSAGE: 3
MESSAGE 4: <-  c
MESSAGE: 2
MESSAGE 3: <-  d
MESSAGE: 0
MESSAGE 1: <-  e
MESSAGE: 0
MESSAGE 1: <-  f
MESSAGE 0: <-  g
MESSAGE 0: <-  h
MESSAGE 0: calling efa35_2_4
MESSAGE: 4
MESSAGE 5: <-  a
MESSAGE: 3
MESSAGE 4: <-  b
MESSAGE: 4
MESSAGE 5: <-  c
MESSAGE: 3
MESSAGE 4: <-  d
MESSAGE: 1
MESSAGE 2: <-  e
MESSAGE: 1
MESSAGE 2: <-  f
MESSAGE: 0
MESSAGE 1: <-  g
MESSAGE: 0
MESSAGE 1: <-  h
MESSAGE 0: calling efa35_2_5
MESSAGE: 5
MESSAGE 15: <-  a
MESSAGE: 4
MESSAGE 14: <-  b
MESSAGE: 5
MESSAGE 15: <-  c
MESSAGE: 4
MESSAGE 14: <-  d
MESSAGE: 2
MESSAGE 12: <-  e
MESSAGE: 2
MESSAGE 12: <-  f
MESSAGE: 1
MESSAGE 11: <-  g
MESSAGE: 1
MESSAGE 11: <-  h
a = 3
b = 1
c = 3
d = 1
e = 2
f = 1
g = 2
h = 1
MESSAGE 0: calling efa35_2_1
MESSAGE: 3
MESSAGE 4: <-  a
MESSAGE: 1
MESSAGE 2: <-  b
MESSAGE: 3
MESSAGE 4: <-  c
MESSAGE: 1
MESSAGE 2: <-  d
MESSAGE: 2
MESSAGE 3: <-  e
MESSAGE: 1
MESSAGE 2: <-  f
MESSAGE: 2
MESSAGE 3: <-  g
MESSAGE: 1
MESSAGE 2: <-  h
MESSAGE 0: calling efa35_2_2
MESSAGE: 4
MESSAGE 5: <-  a
MESSAGE: 2
MESSAGE 3: <-  b
MESSAGE: 4
MESSAGE 5: <-  c
MESSAGE: 2
MESSAGE 3: <-  d
MESSAGE 0: <-  e
MESSAGE 0: <-  f
MESSAGE 0: <-  g
MESSAGE 0: <-  h
MESSAGE 0: calling efa35_2_3
MESSAGE: 5
MESSAGE 6: <-  a
MESSAGE: 3
MESSAGE 4: <-  b
MESSAGE: 5
MESSAGE 6: <-  c
MESSAGE: 3
MESSAGE 4: <-  d
MESSAGE: 0
MESSAGE 1: <-  e
MESSAGE: 0
MESSAGE 1: <-  f
MESSAGE 0: <-  g
MESSAGE 0: <-  h
MESSAGE 0: calling efa35_2_4
MESSAGE: 6
MESSAGE 7: <-  a
MESSAGE: 4
MESSAGE 5: <-  b
MESSAGE: 6
MESSAGE 7: <-  c
MESSAGE: 4
MESSAGE 5: <-  d
MESSAGE: 1
MESSAGE 2: <-  e
MESSAGE: 1
MESSAGE 2: <-  f
MESSAGE: 0
MESSAGE 1: <-  g
MESSAGE: 0
MESSAGE 1: <-  h
MESSAGE 0: calling efa35_2_5
MESSAGE: 7
MESSAGE 17: <-  a
MESSAGE: 5
MESSAGE 15: <-  b
MESSAGE: 7
MESSAGE 17: <-  c
MESSAGE: 5
MESSAGE 15: <-  d
MESSAGE: 2
MESSAGE 12: <-  e
MESSAGE: 2
MESSAGE 12: <-  f
MESSAGE: 1
MESSAGE 11: <-  g
MESSAGE: 1
MESSAGE 11: <-  h
a = 3
b = 2
c = 3
d = 2
e = 3
f = 1
g = 3
h = 1

>>
? run efa35.exe SEPPARAMDB 3
<<

test 3:  test nested dbproc with byref parameter passing nullable datatypes

E_US0965 Procedure 'efa35_3_3' not found.
    (Mon May  3 13:24:33 1993)
E_US0965 Procedure 'efa35_3_2' not found.
    (Mon May  3 13:24:33 1993)
E_US0965 Procedure 'efa35_3_1' not found.
    (Mon May  3 13:24:33 1993)
passing i     = 9
passing f4    = 0.070000
passing c50   = this is a test
MESSAGE: 14
MESSAGE 0: 0.120
MESSAGE 0: value in efa35_3_1this is a test
returned i    = 0
returned f4   = 0.000000
returned c50  = 

passing i     = 0
passing f4    = 0.000000
passing c50   = 
MESSAGE: 5
MESSAGE 0: 0.050
MESSAGE 0: value in efa35_3_1
returned i    = 0
returned f4   = 0.000000
returned c50  = 
returned i    = 7
returned f4   = 0.050000
returned c50  = value in efa35_3_3
>>
? delete efa35.c 
<<
~
>>
? delete efa35.o 
<<
~
>>
? delete efa35.obj 
<<
~
>>
? delete efa35.exe 
<<
~
>>


Ending at: Mon May  3 13:24:42 1993
