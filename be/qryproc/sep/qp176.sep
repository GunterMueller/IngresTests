/*
	Test Name: ela01.sep
	Time: Wed May 23 15:45:49 1990
	User Name: testenv
 
	Test ID : ela01
	Module  : 
	Filename: ela01.sep
	Purpose	: Test syntax of delete, insert and update on rules.	
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : dull, log
	Synopsis     : Test syntax of delete, insert and update on rules.
			Try all combinations of 
				"function" [on|of|from|into] tablename;\g
			Ingres doesn't care which preposition you use,
		 	you just have to use one of them.

			Note this test requires qp175.sep to be run first.

	Setup        : ela00.sep

	History	: xx-xxx-1989	Created				Author
		  28-Dec-1998	(somsa01)
				Added NT canon for sepcc.
		  15-Aug-2009   (wanfr01)  Added comment
*/
? cp @file(tst_testools,driver,driver.sc) driver.sc 
<<
>>
? cp @file(ing_tst,be,qryproc,src,driverelstub.h) driverelstub.h 
<<
>>
? cp @file(ing_tst,be,qryproc,src,rulesh.sc) rulesh.sc 
<<
>>
? cp @file(ing_tst,be,qryproc,src,rulestest.sc) rulestest.sc 
<<
>>
? cp @file(ing_tst,be,qryproc,src,ingclude.sc) ingclude.sc 
<<
>>
? cp @file(ing_tst,be,qryproc,src,driverel.c) driverel.c 
<<
>>
? fill ela01.sc 
!!
/*
**	ela01.sc
*/

#define ELA01

#include "driverelstub.h"

#include <stdio.h>

exec sql include 'rulesh.sc';

/***********/
/* ela01() */
/***********/

ela01()
{
	printf("ela01: demo basic functionality.\n");
	printf("\n");
	printf("  this module will demonstrate basic rules functionality\n");
	printf("  by using a short procedure which inserts passed text\n");
	printf("  into the log table and issuing a message.\n");
	printf("  victim table is dull.\n");
	printf("\n");

	build_tables("dull");
	print_tables(DULL);
	build_tables("log");
	print_tables(LOG);

	create_logger_proc();

	printf("  drop and create rule ela01_01: delete from...\n");
	printf("    - inserts line on log table\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_01;
	exec sql create rule ela01_01 after delete from dull
		execute procedure logger ( txt_buf = 'delete from dull' );

	printf("  delete 1 from dull...\n");
	exec sql delete from dull where dull = 1;

	printf("  drop and create rule ela01_02: insert into...\n");
	printf("    - inserts line on log table\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_02;
	exec sql create rule ela01_02 after insert into dull
		execute procedure logger ( txt_buf = 'insert into dull' );

	printf("  insert 1 into dull...\n");
	exec sql insert into dull ( dull ) values ( 1 );

	printf("  drop and create rule ela01_03: update on...\n");
	printf("    - inserts line on log table\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_03;
	exec sql create rule ela01_03 after update on dull
		execute procedure logger ( txt_buf = 'update on dull' );

	printf("  update 1 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 1;

	print_tables(DULL);
	print_tables(LOG);

	printf("\n");
	printf("  ela01 variations now, check out the [on|of|from|into]\n");
	printf("\n");

	build_tables("dull");
	build_tables("log");

	printf("  drop and create rule ela01_04: delete [into]...\n");
	printf("    - inserts line on log table\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after delete into dull
		execute procedure logger ( txt_buf = 'delete dull [into]' );

	printf("  delete 2 from dull...\n");
	exec sql delete from dull where dull = 2;
	printf("\n");

	printf("  drop and create rule ela01_04: delete [of]...\n");
	exec sql drop rule ela01_04;
	printf("    - inserts line on log table\n");
	exec sql create rule ela01_04 after delete of dull
		execute procedure logger ( txt_buf = 'delete dull [of]' );

	printf("  delete 3 from dull...\n");
	exec sql delete from dull where dull = 3;
	printf("\n");

	printf("  drop and create rule ela01_04: delete [from]...\n");
	printf("    - inserts line on log table\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after delete from dull
		execute procedure logger ( txt_buf = 'delete dull [from]' );

	printf("  delete 4 from dull...\n");
	exec sql delete from dull where dull = 4;
	printf("\n");

	printf("  drop and create rule ela01_04: delete [on]...\n");
	printf("    - inserts line on log table\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after delete on dull
		execute procedure logger ( txt_buf = 'delete dull [on]' );

	printf("  delete 5 from dull...\n");
	exec sql delete from dull where dull = 5;
	printf("\n");

/* precompiler don't buy []
**
**	printf("  drop and create rule ela01_04: delete []...\n");
**	exec sql drop rule ela01_04;
**	exec sql create rule ela01_04 after delete dull
**		execute procedure logger ( txt_buf = 'delete dull []' );
**
**	printf("  delete 1 from dull...\n");
**	exec sql delete from dull where dull = 1;
**	printf("\n");
*/

	print_tables(DULL);
	print_tables(LOG);

	build_tables("dull");
	build_tables("log");

	printf("  drop and create rule ela01_04: insert [into]...\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after insert into dull
		execute procedure logger ( txt_buf = 'insert dull [into]' );

	printf("  insert 1 into dull...\n");
	exec sql insert into dull ( dull ) values ( 1 );
	printf("\n");

	printf("  drop and create rule ela01_04: insert [of]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after insert of dull
		execute procedure logger ( txt_buf = 'insert dull [of]' );

	printf("  insert 1 into dull...\n");
	exec sql insert into dull ( dull ) values ( 1 );
	printf("\n");

	printf("  drop and create rule ela01_04: insert [from]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after insert from dull
		execute procedure logger ( txt_buf = 'insert dull [from]' );

	printf("  insert 1 into dull...\n");
	exec sql insert into dull ( dull ) values ( 1 );
	printf("\n");

	printf("  drop and create rule ela01_04: insert [on]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after insert on dull
		execute procedure logger ( txt_buf = 'insert dull [on]' );

	printf("  insert 1 into dull...\n");
	exec sql insert into dull ( dull ) values ( 1 );
	printf("\n");

/* precompiler don't buy []
**
**	printf("  drop and create rule ela01_04: insert []...\n");
**	exec sql drop rule ela01_04;
**	exec sql create rule ela01_04 after insert dull
**		execute procedure logger ( txt_buf = 'insert dull []' );
**
**	printf("  insert into dull...\n");
**	exec sql insert into dull ( dull ) values ( 1 );
**	printf("\n");
*/

	print_tables(DULL);
	print_tables(LOG);

	build_tables("dull");
	build_tables("log");

	printf("  drop and create rule ela01_04: update [into]...\n");
	printf("  (table was dropped, so rule should not exist)\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after update into dull
		execute procedure logger ( txt_buf = 'update dull [into]' );

	printf("  update 1 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 1;
	printf("\n");

	printf("  drop and create rule ela01_04: update [of]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after update of dull
		execute procedure logger ( txt_buf = 'update dull [of]' );

	printf("  update 2 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 2;
	printf("\n");

	printf("  drop and create rule ela01_04: update [from]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after update from dull
		execute procedure logger ( txt_buf = 'update dull [from]' );

	printf("  update 3 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 3;
	printf("\n");

	printf("  drop and create rule ela01_04: update [on]...\n");
	exec sql drop rule ela01_04;
	exec sql create rule ela01_04 after update on dull
		execute procedure logger ( txt_buf = 'update dull [on]' );

	printf("  update 4 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 4;
	printf("\n");

/* precompiler don't buy []
**
**	printf("  drop and create rule ela01_04: update []...\n");
**	exec sql drop rule ela01_04;
**	exec sql create rule ela01_04 after update dull
**		execute procedure logger ( txt_buf = 'update dull []' );
**
**	printf("  update on dull...\n");
**	exec sql update dull set dull = 11 where dull = 5;
**	printf("\n");
*/

	print_tables(DULL);
	print_tables(LOG);

	printf("\n");
	printf("  try cramming insert, update and delete into one rule\n");
	printf("\n");

	build_tables("dull");
	build_tables("log");

	printf("  drop and create rule ela01_05: insert, update, delete...\n");
	exec sql drop rule ela01_05;
	exec sql create rule ela01_05 after insert, update, delete on dull
		execute procedure logger ( txt_buf = 'ins, upd, del dull on' );

	printf("  insert 20 into dull...\n");
	exec sql insert into dull ( dull ) values ( 20 );
	printf("\n");

	print_tables(DULL);
	print_tables(LOG);

	printf("  update 1 to 11 on dull...\n");
	exec sql update dull set dull = 11 where dull = 1;
	printf("\n");

	print_tables(DULL);
	print_tables(LOG);

	printf("  delete 5 from dull...\n");
	exec sql delete from dull where dull = 5;
	printf("\n");

	print_tables(DULL);
	print_tables(LOG);

	exec sql commit;

} /* ela01() */
!!
? sepesqlc ela01.sc 
<<
ESQL ela01.sc:
>>
? sepcc ela01.c 
<<
>>
<<
ela01.c
>>
? sepesqlc driver.sc
<<
ESQL driver.sc:
>>
? sepcc driver.c
<<
>>
<<
driver.c
>>
? sepesqlc rulestest.sc 
<<
ESQL rulestest.sc:
>>
? sepcc rulestest.c 
<<
>>
<<
rulestest.c
>>
? sepcc driverel.c 
<<
>>
<<
driverel.c
>>
? seplnk driver driverel rulestest ela01 
<<
>>
? sql SEPPARAMDB -s
<<
~
>>
* drop table dull, log;\g
<<
~
>>
* drop procedure logger;\g
<<
~
>>
* \q 
<<
>>
? run driver.exe SEPPARAMDRIVERDB -tela01 
<<
TEST DRIVER
source: driver.sc (Fri May 17 00:00:00 1991)
rules tests


XX-----------------XX
XX tests scheduled XX
XX-----------------XX
   ela01
XX-----------------XX

connecting with database...

XX running test ela01 XX

ela01: demo basic functionality.

  this module will demonstrate basic rules functionality
  by using a short procedure which inserts passed text
  into the log table and issuing a message.
  victim table is dull.

  dropping dull table...
E_US0AC1 DROP: 'dull' does not exist or is not owned by you.
    (Wed Mar 27 17:44:08 1991)
  creating dull table...
contents of dull:
-----------------
 dull = 1
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
-----------------
  dropping log table...
E_US0AC1 DROP: 'log' does not exist or is not owned by you.
    (Wed Mar 27 17:44:10 1991)
  creating log table...
contents of log:
----------------
----------------
  drop and create logger db proc...
E_US0965 Procedure 'logger' not found.
    (Wed Mar 27 17:44:11 1991)
  drop and create rule ela01_01: delete from...
    - inserts line on log table
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_01' does not exist.
    (Wed Mar 27 17:44:12 1991)

  delete 1 from dull...
MESSAGE 0: delete from dull
  drop and create rule ela01_02: insert into...
    - inserts line on log table
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_02' does not exist.
    (Wed Mar 27 17:44:13 1991)

  insert 1 into dull...
MESSAGE 0: insert into dull
  drop and create rule ela01_03: update on...
    - inserts line on log table
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_03' does not exist.
    (Wed Mar 27 17:44:14 1991)

  update 1 to 11 on dull...
MESSAGE 0: update on dull
contents of dull:
-----------------
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 11
-----------------
contents of log:
----------------
 entry = delete from dull
 entry = insert into dull
 entry = update on dull
----------------

  ela01 variations now, check out the [on|of|from|into]

  dropping dull table...
  creating dull table...
  dropping log table...
  creating log table...
  drop and create rule ela01_04: delete [into]...
    - inserts line on log table
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_04' does not exist.
    (Wed Mar 27 17:44:23 1991)

  delete 2 from dull...
MESSAGE 0: delete dull [into]

  drop and create rule ela01_04: delete [of]...
    - inserts line on log table
  delete 3 from dull...
MESSAGE 0: delete dull [of]

  drop and create rule ela01_04: delete [from]...
    - inserts line on log table
  delete 4 from dull...
MESSAGE 0: delete dull [from]

  drop and create rule ela01_04: delete [on]...
    - inserts line on log table
  delete 5 from dull...
MESSAGE 0: delete dull [on]

contents of dull:
-----------------
 dull = 1
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
-----------------
contents of log:
----------------
 entry = delete dull [from]
 entry = delete dull [into]
 entry = delete dull [of]
 entry = delete dull [on]
----------------
  dropping dull table...
  creating dull table...
  dropping log table...
  creating log table...
  drop and create rule ela01_04: insert [into]...
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_04' does not exist.
    (Wed Mar 27 17:44:40 1991)

  insert 1 into dull...
MESSAGE 0: insert dull [into]

  drop and create rule ela01_04: insert [of]...
  insert 1 into dull...
MESSAGE 0: insert dull [of]

  drop and create rule ela01_04: insert [from]...
  insert 1 into dull...
MESSAGE 0: insert dull [from]

  drop and create rule ela01_04: insert [on]...
  insert 1 into dull...
MESSAGE 0: insert dull [on]

contents of dull:
-----------------
 dull = 1
 dull = 1
 dull = 1
 dull = 1
 dull = 1
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
-----------------
contents of log:
----------------
 entry = insert dull [from]
 entry = insert dull [into]
 entry = insert dull [of]
 entry = insert dull [on]
----------------
  dropping dull table...
  creating dull table...
  dropping log table...
  creating log table...
  drop and create rule ela01_04: update [into]...
  (table was dropped, so rule should not exist)
E_US189D DROP RULE: Rule 'ela01_04' does not exist.
    (Wed Mar 27 17:44:57 1991)

  update 1 to 11 on dull...
MESSAGE 0: update dull [into]

  drop and create rule ela01_04: update [of]...
  update 2 to 11 on dull...
MESSAGE 0: update dull [of]

  drop and create rule ela01_04: update [from]...
  update 3 to 11 on dull...
MESSAGE 0: update dull [from]

  drop and create rule ela01_04: update [on]...
  update 4 to 11 on dull...
MESSAGE 0: update dull [on]

contents of dull:
-----------------
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 11
 dull = 11
 dull = 11
 dull = 11
-----------------
contents of log:
----------------
 entry = update dull [from]
 entry = update dull [into]
 entry = update dull [of]
 entry = update dull [on]
----------------

  try cramming insert, update and delete into one rule

  dropping dull table...
  creating dull table...
  dropping log table...
  creating log table...
  drop and create rule ela01_05: insert, update, delete...
E_US189D DROP RULE: Rule 'ela01_05' does not exist.
    (Wed Mar 27 17:45:09 1991)

  insert 20 into dull...
MESSAGE 0: ins, upd, del dull on

contents of dull:
-----------------
 dull = 1
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 20
-----------------
contents of log:
----------------
 entry = ins, upd, del dull on
----------------
  update 1 to 11 on dull...
MESSAGE 0: ins, upd, del dull on

contents of dull:
-----------------
 dull = 2
 dull = 3
 dull = 4
 dull = 5
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 11
 dull = 20
-----------------
contents of log:
----------------
 entry = ins, upd, del dull on
 entry = ins, upd, del dull on
----------------
  delete 5 from dull...
MESSAGE 0: ins, upd, del dull on

contents of dull:
-----------------
 dull = 2
 dull = 3
 dull = 4
 dull = 6
 dull = 7
 dull = 8
 dull = 9
 dull = 10
 dull = 11
 dull = 20
-----------------
contents of log:
----------------
 entry = ins, upd, del dull on
 entry = ins, upd, del dull on
 entry = ins, upd, del dull on
----------------

disconnecting with database...
>>
? delete driver.exe 
<<
~  
>>
? delete driver.obj 
<<
~  
>>
? delete driver.o
<<
~
>>
? delete driver.sc
<<
~  
>>
? delete driver.c
<<
~  
>>  
? delete driverelstub.h 
<<
~  
>>
? delete driverel.c 
<<
~  
>>
? delete driverel.obj 
<<
~  
>>
? delete driverel.o
<<
~
>>
? delete ingclude.sc 
<<
~  
>>
? delete ingclude.c 
<<
~  
>>
? delete rulesh.sc 
<<
~  
>>
? delete rulesh.c 
<<
~  
>>
? delete rulestest.sc 
<<
~  
>>
? delete rulestest.c 
<<
~  
>>
? delete rulestest.obj 
<<
~  
>>
? delete rulestest.o
<<
~
>>
? delete ela01.c 
<<
~  
>>
? delete ela01.obj 
<<
~  
>>
? delete ela01.o
<<
~
>>


Ending at: Wed Mar 27 17:45:23 1991
