/*
	Test Name: eqa29.sep
	Time     : 15-Jun-1993 17:35:41
	User Name: testenv

	Test ID  : eqa29
	Module   : qryproc 
	Filename : eqa29.sep
	Purpose  : To show that if the outermost (subselect> of the 
		   < query expression > involves the keyword DISTINCT,
                   WITH CHECK OPTION cannot be enforced
	Input Files  : none 
	Output Files : none 
	Database     : SEPPARAMDB 
	Tables       : table_50 
	Synopsis     : It creates tables and views with check option involving
		       the keyword DISTINCT and tests the functionality of
		       with check option by inserting and updating rows.
	History      : 15-Jun-1993 (testenv)
                       created by Daniel Lee
          20-Dec-1993	(garys) Updated canon to accept double quote
				delimiter around table dba name from
				help view output.
	  26-March-1999  (kamra01) modified VPG_SZ to 4096
          14-Jul-2008  (coomi01)
                       Modified to remove 'with check option'
                       from help view where a warning previously thrown.
*/
? sql -s SEPPARAMDB 
<<
>>
* drop table table_50;\g
<<
~
>>
* drop view v_50;\g
<<
~
>>
* drop view v_51;\g
<<
~
>>
* drop view v_52;\g
<<
~
>>
* create table table_50 ( name char(15), i integer not null, j integer not     null,-
 k integer not null ) with page_size=4096;\g
<<
>>
* insert into table_50 ( name, i, j, k ) values ('smith', 1, 1, 10000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('steve', 2, 2, 10000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('tommy', 3, 3, 10000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('mitch', 4, 1, 20000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('paul', 5, 2, 20000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('james', 6, 3, 20000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('smith', 7, 1, 30000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('steve', 8, 2, 30000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('tommy', 9, 3, 30000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('mitch', 10, 1, 40000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('paul', 11, 2, 40000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('james', 12, 3, 40000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('danny', 13, 1, 50000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('marcy', 14, 2, 50000);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* insert into table_50 ( name, i, j, k ) values ('terry', 15, 3, 50001);\g
<<
(1 row)
>>
* select * from table_50;\g
<<

+---------------+-------------+-------------+-------------+
|name           |i            |j            |k            |
+---------------+-------------+-------------+-------------+
|smith          |            1|            1|        10000|
|steve          |            2|            2|        10000|
|tommy          |            3|            3|        10000|
|mitch          |            4|            1|        20000|
|paul           |            5|            2|        20000|
|james          |            6|            3|        20000|
|smith          |            7|            1|        30000|
|steve          |            8|            2|        30000|
|tommy          |            9|            3|        30000|
|mitch          |           10|            1|        40000|
|paul           |           11|            2|        40000|
|james          |           12|            3|        40000|
|danny          |           13|            1|        50000|
|marcy          |           14|            2|        50000|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
|terry          |           15|            3|        50001|
+---------------+-------------+-------------+-------------+
(21 rows)
>>
* create view v_50 as select distinct j from table_50 t where t.i >= 1 and     t.i <-
= 10 with check option;\g
<<
W_PS0581 CREATE VIEW: View 'v_50' will be created without CHECK OPTION. 
    It is non-updatable because DISTINCT is specified in the outermost
    subselect 
    of its definition, and WITH CHECK OPTION should not be specified for 
    non-updatable views.
    (Tue Jun 15 17:34:34 1993)

>>
* help view v_50;\g
<<
View:                 v_50
Owner:                testenv
Check option:         off

View Definition:
create view  v_50 as select distinct j from "testenv". table_50 t     
where t.i >= 1 and t.i <= 10                         



>>
* select number_of_rules = count(*) from iirules where table_name = 'v_50'     and r-
ule_owner = user;\g
<<

+-------------+
|number_of_rul|
+-------------+
|            0|
+-------------+
(1 row)
>>
* select * from v_50;\g
<<

+-------------+
|j            |
+-------------+
|            1|
|            2|
|            3|
+-------------+
(3 rows)
>>
* create view v_51 as select distinct name from table_50 t where t.k > 0 and     t.k-
 < 45000 with check option;\g
<<
W_PS0581 CREATE VIEW: View 'v_51' will be created without CHECK OPTION. 
    It is non-updatable because DISTINCT is specified in the outermost
    subselect 
    of its definition, and WITH CHECK OPTION should not be specified for 
    non-updatable views.
    (Tue Jun 15 17:34:37 1993)

>>
* help view v_51;\g
<<
View:                 v_51
Owner:                testenv
Check option:         off

View Definition:
create view  v_51 as select distinct name from "testenv". table_50 t  
where t.k > 0 and t.k < 45000                        



>>
* select number_of_rules = count(*) from iirules where table_name = 'v_51'     and r-
ule_owner = user;\g
<<

+-------------+
|number_of_rul|
+-------------+
|            0|
+-------------+
(1 row)
>>
* select * from v_51;\g
<<

+---------------+
|name           |
+---------------+
|james          |
|mitch          |
|paul           |
|smith          |
|steve          |
|tommy          |
+---------------+
(6 rows)
>>
* create view v_52 as select distinct name from table_50 t1 where t1.k =     50001 w-
ith check option;\g
<<
W_PS0581 CREATE VIEW: View 'v_52' will be created without CHECK OPTION. 
    It is non-updatable because DISTINCT is specified in the outermost
    subselect 
    of its definition, and WITH CHECK OPTION should not be specified for 
    non-updatable views.
    (Tue Jun 15 17:34:39 1993)

>>
* help view v_52;\g
<<
View:                 v_52
Owner:                testenv
Check option:         off

View Definition:
create view  v_52 as select distinct name from "testenv". table_50 t1 
where t1.k = 50001                                   



>>
* select number_of_rules = count(*) from iirules where table_name = 'v_52'     and r-
ule_owner = user;\g
<<

+-------------+
|number_of_rul|
+-------------+
|            0|
+-------------+
(1 row)
>>
* select * from v_52;\g
<<

+---------------+
|name           |
+---------------+
|terry          |
+---------------+
(1 row)
>>
* \q
<<
~
>>


Ending at: Mon Dec 20 16:32:21 1993
