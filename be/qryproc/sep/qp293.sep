/*
        Test Name: qp293.sep
        Time: Fri May 14 13:59:58 2001
        User Name: testenv
        Terminal type: septerm

        Test ID : qp293.sep
        Module  : be/qryproc
        Filename: qp293.sep
        Purpose : To test the new feature row producing procedure. 
        Input Files  : rp1.sql, rp2.sql, rp3.sql
        Output Files : 
        Database     : qryprocdb
        Tables       : qp293_rah_a, qp293_rah_b, qp293_rah_c, qp293_lineitem,
                       qp293_udbetalingsenhed, qp293_belaegning
        Synopsis     : This is to test the row producing procedure using 
                       complex SELECT queries within Terminal Monitor.

 History: 11-May-2001   (wu$ca01)       Created
**
**  ROW PRODUCING PROCEDURE
**
**  - COMPLEX SELECT QUERIES 
**
**  Known Problems:
**  1) rp2.sql DROP PROCEDURE error: 10870154 (RESOLVED)
**  2) rp3.sql CREATE PROCEDURE error: 10868897 (RESOLVED) 
**
          16-Apr-2001	(sarjo01)
          15-May-2001	(sarjo01)
          28-Jun-2001	(wu$ca01) Recanonize-issue 10868897 resolved.
*/
? fill setup.sql 
!!
\i cleanup.sql
CREATE TABLE qp293_lineitem
(
  l_orderkey      INTEGER         NOT NULL,
  l_partkey       INTEGER         NOT NULL,
  l_suppkey       INTEGER         NOT NULL,
  l_linenumber    INTEGER         NOT NULL,
  l_quantity      FLOAT8          NOT NULL,
  l_extendedprice FLOAT8          NOT NULL,
  l_discount      FLOAT8          NOT NULL,
  l_tax           FLOAT8          NOT NULL,
  l_returnflag    CHAR(1)         NOT NULL,
  l_linestatus    CHAR(1)         NOT NULL,
  l_shipdate      DATE            NOT NULL,
  l_commitdate    DATE            NOT NULL,
  l_receiptdate   DATE            NOT NULL,
  l_shipinstruct  CHAR(25)        NOT NULL,
  l_shipmode      CHAR(10)        NOT NULL,
  l_comment       VARCHAR(44)     NOT NULL
)\g
create table qp293_rah_a ( k1 integer, val char(10) )\g
insert into qp293_rah_a values ( 1, 'one' )\g
insert into qp293_rah_a values ( 2, 'two' )\g
insert into qp293_rah_a values ( 3, 'three' )\g
insert into qp293_rah_a values ( 4, 'four' )\g
insert into qp293_rah_a values ( 5, 'five' )\g
create table qp293_rah_b ( k1 integer, k2 integer, val char(10) )\g
insert into qp293_rah_b values ( 1, 1, '11' )\g
insert into qp293_rah_b values ( 3, 2, '32' )\g
insert into qp293_rah_b values ( 5, 3, '53' )\g
insert into qp293_rah_b values ( 7, 4, '74' )\g
insert into qp293_rah_b values ( 9, 5, '95' )\g
create table qp293_rah_c ( k2 integer, val char(10) )\g
insert into qp293_rah_c values ( 1, 'one' )\g
insert into qp293_rah_c values ( 2, 'two' )\g
insert into qp293_rah_c values ( 3, 'three' )\g
insert into qp293_rah_c values ( 4, 'four' )\g
insert into qp293_rah_c values ( 9, 'nine' )\g

create table qp293_belaegning(
        medl_ident integer not null default 0,
        udbhvd_lbnr integer not null default 0,
        udbenh_lbnr integer not null default 0,
        lbnr integer not null default 0,
        blgtyp_type char(1) not null default ' ',
        dato date not null default ' ',
        timer money not null default 0,
        beloeb money not null default 0,
        time_krone_tk char(1) not null default ' ',
        reg_tid date not null default ' ',
        reg_init char(12) not null default ' ',
        reg_vers_nr integer not null default 0,
        reg_status char(1) not null default ' '
)\g
create table qp293_udbetalingsenhed(
        medl_ident integer not null default 0,
        udbhvd_lbnr integer not null default 0,
        lbnr integer not null default 0,
        uge_nr char(4) not null default ' ',
        fra_dato date not null default ' ',
        til_dato date not null default ' ',
        ydtyp_hoved_type char(2) not null default ' ',
        ydtyp_type char(4) not null default ' ',
        max_time money not null default 0,
        beregnet_sats money not null default 0,
        beregnet_time money not null default 0,
        daglig_time money not null default 0,
        brutto_beloeb money not null default 0,
        antal_hverdage smallint not null default 0,
        klipper_jn char(1) not null default ' ',
        indpl_lbnr integer,
        delperiode integer,
        forskat_type char(1) not null default ' ',
        isats_lbnr integer,
        sabel_nr integer,
        sabel_lbnr integer,
        reg_tid date not null default ' ',
        reg_init char(12) not null default ' ',
        reg_vers_nr integer not null default 0,
        reg_status char(1) not null default ' '
)\g
!!
? fill cleanup.sql 
!!
drop table qp293_table1\g
drop table qp293_rah_a\g
drop table qp293_rah_b\g
drop table qp293_rah_c\g
drop table qp293_lineitem\g
drop table qp293_udbetalingsenhed\g
drop table qp293_belaegning\g
drop procedure qp293_rp1\g
!!
? fill rp1.sql 
!!
create procedure qp293_rp1
as declare
   v1 char(1);
   v2 char(1);
   v3 int;
   v4 int;
   v5 float8;
   v6 float8;
   v7 float8;
   v8 float8;
   v9 float8;
   v10 int;
begin
   message 'Procedure 1';
   for select
      l_returnflag,
      l_linestatus,
      sum(l_quantity) as sum_qty,
      sum(l_extendedprice) as sum_base_price,
      sum(l_extendedprice * (1-l_discount)) as sum_disc_price,
      sum(l_extendedprice * (1-l_discount) * (1+l_tax)) as sum_charge,
      avg(l_quantity) as avg_qty,
      avg(l_extendedprice) as avg_price,
      avg(l_discount) as avg_disc,
      count(*) as count_order
      into :v1, :v2, :v3, :v4, :v5,
           :v6, :v7, :v8, :v9, :v10
      from qp293_lineitem
      group by l_returnflag, l_linestatus
      order by l_returnflag, l_linestatus
   do
      message 'Loop';
   endfor;
end;\g
execute procedure qp293_rp1;\g
drop procedure qp293_rp1;\g
!!
? fill rp2.sql 
!!
create procedure qp293_rp1
as declare
   v1 int;
   v2 char(12);
   v3 char(12);
   v4 char(12);
begin
   message 'Procedure 2';
   for
      select a.k1, a.val, ifnull(b.val,''), ifnull(c.val,'')
      into :v1, :v2, :v3, :v4
      from qp293_rah_a a full join ( qp293_rah_b b full join qp293_rah_c c on b.k2 =-
 c.k2 )
            on a.k1 = b.k1
      order by k1
   do
      message 'Loop';
   endfor;
end;\g
execute procedure qp293_rp1;\g
drop procedure qp293_rp1;\g
!!
? fill rp3.sql 
!!
create procedure qp293_rp1
as declare
   v1 char(6);
   v2 money;
   v3 char(12);
   v4 date; 
begin
   message ' Procedure 3';
   for
      SELECT
         ue.uge_nr as uge_nr,
         sum(b.timer) as arbejde,
         ue.fra_dato as fra_dato
     into :v1, :v2, :v3
     from
        qp293_udbetalingsenhed ue
        left join  qp293_belaegning b on
           ue.medl_ident = b.medl_ident
           and ue.udbhvd_lbnr = b.udbhvd_lbnr
           and ue.lbnr = b.udbenh_lbnr
           and b.blgtyp_type = 'a'
     where
              ue.medl_ident = 173805795
              and  (( ue.fra_dato between '09/01/2000'
              and  '09/30/2000'
              or   ue.til_dato between '09/01/2000'
              and  '09/30/2000')
              or  ( ue.fra_dato <= '09/01/2000'
              and  ue.til_dato >= '09/30/2000' ))
              and ( ue.reg_status = 'f'
              or   not exists (select 1
                    from qp293_udbetalingsenhed ue
                    where
                     ue.medl_ident = 180525272
                     and ue.reg_status  = 'f'
                     and ue.lbnr = b.udbenh_lbnr
                     and  (( ue.fra_dato between '09/01/2000'
                     and  '09/30/2000'
                     or   ue.til_dato between '09/01/2000'
                     and  '09/30/2000' )
                     or  ( ue.fra_dato <= '09/01/2000'
                     and  ue.til_dato >= '09/30/2000'  ))))
          GROUP BY
             ue.uge_nr,
             ue.fra_dato
          ORDER BY uge_nr desc
   do
       message 'Loop';
   endfor;
end;\g
execute procedure qp293_rp1;\g
!!
? sql SEPPARAMDB 
<<
~
>>
* \i setup.sql
<<
~
>>
* \i rp1.sql
<<
MESSAGE 0: Procedure 1
continue
* 
>>
* \i rp2.sql
<<
MESSAGE 0: Procedure 2
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
MESSAGE 0: Loop
continue
* 
>>
* \i rp3.sql
<<
MESSAGE 0:  Procedure 3
continue
* 
>>
* \q
<<
~
>>


Ending at: Thu Jun 28 15:20:20 2001
