/*
        Test Name    : qp317.sep
        Time         : Thu Jan 30 15:50:40 2003
        User Name    : testenv

        Test ID      : qp317
        Module       :
        Filename     : qp317.sep
        Purpose      : Testing Ingres 2.6 SP2 'Lock Timeout of NOWAIT' 
        Input Files  : none
        Output Files : none
        Database     : SEPPARAMDB
        Tables       : qp317_tbl 
        Synopsis     : Test that 'Lockmode Timeout NOWAIT' prevents a query
                       waiting when a locked table is updated.
		       Method:- lock a resource in one session and then 
                       request locks on the same resource in a second session. 
                       Repeated for all locking levels:
                       SYSTEM, SESSION, ROW, PAGE and TABLE. 
        Setup        :

        History:  27-Feb-2003 (sykga01)  Created.
	  14-Jun-2004   (sinra04) Replaced esqlc command with sepesqlc command
			to make tests when run on VMS use same canon as that
			of  Unix & Windows.

/*
** Define the SQL script to create the test table (qp317_tbl)
*/

? fill setup.sql
!!
create table qp317_tbl (lname char(24), fname char(24), telephone char(14))\p\g
insert into qp317_tbl values ('Davis', 'Steven', '(516) 735-4647')\p\g
insert into qp317_tbl values ('Davidson', 'Mary', '(516) 735-8181')\p\g
insert into qp317_tbl values ('Davidson', 'John', '(516) 735-8181')\p\g
insert into qp317_tbl values ('Smith', 'William', '(631) 442-5242')\p\g
insert into qp317_tbl values ('Johnson', 'James', '(516) 675-6154')\p\g
insert into qp317_tbl values ('Walsh', 'Joan', '(516) 331-2365')\p\g
insert into qp317_tbl values ('Williams', 'Charles', '(212) 599-1001')\p\g
insert into qp317_tbl values ('Andrews', 'Alison', '(212) 664-3001')\p\g
!!

/*
** Define the main C executable
*/ 

? fill qp317.sc 
!!
/*
** Standard C Runtime header file
*/
#include <stdio.h>

/*
**  SQLCA required by Ingres LIBQ runtime for Ingres error handling
*/
EXEC SQL INCLUDE SQLCA;   

/*
**  Local variable: program syntax message 
*/
char  *syntax = "\nSyntax:  qp317.sep, dbname: qryprocdb\n";

/*
** The main() program
*/

main(int argc, char *argv[])
{
/*
**  Declare host language variables used in queries.
*/
   EXEC SQL BEGIN DECLARE SECTION;
        char   *dbname;
        char   qp[72];
   EXEC SQL END DECLARE SECTION;


/*
**  Checks that 2 arguments were specified on the command
**  line that launched the program (1 arg plus the program name).
**  If not enough args, then print a message and exit. 
*/
   if (argc < 2)
   {
      printf(syntax);
      exit(-1);
   }
/*
**  Set local variables: dbname is the database passed in at the 
**  command line.
*/
   dbname = argv[1];


/*
** Connect to Session 1 and lock the qp317_tbl table to be
** used by all other sessions.
*/

   printf("\nConnecting to Session 1\n");

   EXEC SQL CONNECT :dbname session 1;

/*
**  Set error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;

   printf("\n");


/*
**  Update the qp317_tbl table without committing;
*/

   printf("\nUpdating the qp317_tbl table in Session 1\n");

   EXEC SQL UPDATE 
                qp317_tbl
            SET 
                fname='SESSION' 
            WHERE 
                lname='Davis'; 

/*
** Connect to Session 2 and test 'Lockmode Timeout NOWAIT'
** with locking level SESSION.
*/

   printf("\nConnecting to Session 2\n");

   EXEC SQL CONNECT :dbname session 2;

/*
**  Set the error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;


/*
** Set lockmode session timeout to NOWAIT and select from the 
** 'locked' qp317_tbl table (Locking Level=SESSION). 
*/

   printf("\n");

   printf("\nSetting Lockmode Timeout NOWAIT (Level=SESSION)\n");

   EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=SESSION, TIMEOUT=NOWAIT;

   printf("\n");

   printf("\nSELECT from qp317_tbl table in Session 2\n");

   EXEC SQL SELECT 
                TRIM(lname) + ', ' + TRIM(fname) + ' ' + telephone
            INTO 
                :qp
            FROM 
                qp317_tbl
            ORDER BY lname, fname, telephone;
   EXEC SQL BEGIN;
      printf("%s\n", qp);
   EXEC SQL END;

/*
** The query will not wait for locks to be released and an
** error message will be returned.
*/

/*
** Disconnect from Session 2
*/

   printf("\nDisconnecting from Session 2\n");

   EXEC SQL DISCONNECT session 2;

/*
** Connect to Session 3 and test 'Lockmode Timeout NOWAIT'
** with locking level ROW.
*/

   printf("\nConnecting to Session 3\n");

   EXEC SQL CONNECT :dbname session 3;

/*
**  Set the error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;


/*
** Set lockmode session timeout to NOWAIT and select from the 
** 'locked' qp317_tbl table (Level=ROW). 
*/

   printf("\n");

   printf("\nSetting Lockmode Timeout NOWAIT (Level=ROW)\n");

   EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=ROW, TIMEOUT=NOWAIT;

   printf("\n");

   printf("\nSELECT from qp317_tbl table in Session 3\n");

   EXEC SQL SELECT 
                TRIM(lname) + ', ' + TRIM(fname) + ' ' + telephone
            INTO 
                :qp FROM qp317_tbl
            ORDER BY lname, fname, telephone;
   EXEC SQL BEGIN;
      printf("%s\n", qp);
   EXEC SQL END;

/*
** The query will not wait for locks to be released and an
** error message will be returned.
*/

/*
** Disconnect from Session 3
*/

   printf("\nDisconnecting from Session 3\n");

   EXEC SQL DISCONNECT session 3;

/*
** Connect to Session 4 and test 'Lockmode Timeout NOWAIT'
** with locking level PAGE.
*/

   printf("\nConnecting to Session 4\n");

   EXEC SQL CONNECT :dbname session 4;

/*
**  Set the error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;


/*
** Set lockmode session timeout to NOWAIT and select from the 
** 'locked' qp_317_tbl table (Level=PAGE). 
*/

   printf("\n");

   printf("\nSetting Lockmode Timeout NOWAIT (Level=PAGE)\n");

   EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=PAGE, TIMEOUT=NOWAIT;

   printf("\n");

   printf("\nSELECT from qp317_tbl table in Session 4\n");

   EXEC SQL SELECT 
                TRIM(lname) + ', ' + TRIM(fname) + ' ' + telephone
            INTO 
                :qp FROM qp317_tbl
            ORDER BY lname, fname, telephone;
   EXEC SQL BEGIN;
      printf("%s\n", qp);
   EXEC SQL END;

/*
** The query will not wait for locks to be released and an
** error message will be returned. 
*/

/*
** Disconnect from Session 4
*/

   printf("\nDisconnecting from Session 4\n");

   EXEC SQL DISCONNECT session 4;

/*
** Connect to Session 5 and test 'Lockmode Timeout NOWAIT'
** with locking level TABLE.
*/

   printf("\nConnecting to Session 5\n");

   EXEC SQL CONNECT :dbname session 5;

/*
**  Set the error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;


/*
** Set lockmode session timeout to NOWAIT and select from the 
** 'locked' qp317.sep table (Level=TABLE). 
*/

   printf("\n");

   printf("\nSetting Lockmode Timeout NOWAIT (Level=TABLE)\n");

   EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=TABLE, TIMEOUT=NOWAIT;

   printf("\n");

   printf("\nSELECT from qp317_tbl table in Session 5\n");

   EXEC SQL SELECT 
                TRIM(lname) + ', ' + TRIM(fname) + ' ' + telephone
            INTO 
                :qp FROM qp317_tbl
            ORDER BY lname, fname, telephone;
   EXEC SQL BEGIN;
      printf("%s\n", qp);
   EXEC SQL END;

/*
** The query will not wait for locks to be released and an
** error message will be returned. 
*/

/*
** Disconnect from Session 5
*/

   printf("\nDisconnecting from Session 5\n");

   EXEC SQL DISCONNECT session 5;

/*
** Connect to Session 6 and test 'Lockmode Timeout NOWAIT'
** with locking level SYSTEM.
*/

   printf("\nConnecting to Session 6\n");

   EXEC SQL CONNECT :dbname session 6;

/*
**  Set the error handler to display
**  the error message but continue program execution. 
*/

   EXEC SQL WHENEVER SQLERROR call sqlprint;


/*
** Set lockmode session timeout to NOWAIT and select from the 
** 'locked' qp317_tbl table (Level=SYSTEM). 
*/

   printf("\n");

   printf("\nSetting Lockmode Timeout NOWAIT (Level=SYSTEM)\n");

   EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=SYSTEM, TIMEOUT=NOWAIT;

   printf("\n");

   printf("\nSELECT from qp317_tbl table in Session 6\n");

   EXEC SQL SELECT 
                TRIM(lname) + ', ' + TRIM(fname) + ' ' + telephone
            INTO 
                :qp FROM qp317_tbl
            ORDER BY lname, fname, telephone;
   EXEC SQL BEGIN;
      printf("%s\n", qp);
   EXEC SQL END;

/*
** The query will not wait for locks to be released and an
** error message will be returned. 
*/

/*
** Disconnect from Session 6
*/

   printf("\nDisconnecting from Session 6\n");

   EXEC SQL DISCONNECT session 6;

/*  
**  Disconnect from Session 1.
*/

   printf("\nDisconnecting from Session 1\n");

   EXEC SQL disconnect session 1;

/*
**  END OF EXEC SQL Script. 
*/
}
!!

/*
** End of main C executable definition
*/

/* 
** Preprocess, Compile and Link EXEC SQL Script
*/

? sepesqlc qp317.sc 
<<
ESQL qp317.sc:
>>
? sepcc qp317 
<<
~
>>
? seplnk qp317 
<<
>>

/*
** Create and populate qp317_tbl table
*/

? sql -s SEPPARAMDB
<<

>>
* drop table qp317_tbl; \g
<<
~
>>
* \i setup.sql
<<
create table qp317_tbl (lname char(24), fname char(24), telephone char(14))
insert into qp317_tbl values ('Davis', 'Steven', '(516) 735-4647')
(1 row)
insert into qp317_tbl values ('Davidson', 'Mary', '(516) 735-8181')
(1 row)
insert into qp317_tbl values ('Davidson', 'John', '(516) 735-8181')
(1 row)
insert into qp317_tbl values ('Smith', 'William', '(631) 442-5242')
(1 row)
insert into qp317_tbl values ('Johnson', 'James', '(516) 675-6154')
(1 row)
insert into qp317_tbl values ('Walsh', 'Joan', '(516) 331-2365')
(1 row)
insert into qp317_tbl values ('Williams', 'Charles', '(212) 599-1001')
(1 row)
insert into qp317_tbl values ('Andrews', 'Alison', '(212) 664-3001')
(1 row)
>>
* \q
<<
~
>>

/*
** Run the EXEC SQL Script and compare results with the canon
*/

? run qp317.exe SEPPARAMDB 
<<
Connecting to Session 1


Updating the qp317_tbl table in Session 1

Connecting to Session 2


Setting Lockmode Timeout NOWAIT (Level=SESSION)


SELECT from qp317_tbl table in Session 2
E_US125E Timeout occurred on lock request (see SET LOCKMODE command).
    (Thu Feb 27 15:33:52 2003)

Disconnecting from Session 2

Connecting to Session 3


Setting Lockmode Timeout NOWAIT (Level=ROW)


SELECT from qp317_tbl table in Session 3
E_US125E Timeout occurred on lock request (see SET LOCKMODE command).
    (Thu Feb 27 15:33:53 2003)

Disconnecting from Session 3

Connecting to Session 4


Setting Lockmode Timeout NOWAIT (Level=PAGE)


SELECT from qp317_tbl table in Session 4
E_US125E Timeout occurred on lock request (see SET LOCKMODE command).
    (Thu Feb 27 15:33:54 2003)

Disconnecting from Session 4

Connecting to Session 5


Setting Lockmode Timeout NOWAIT (Level=TABLE)


SELECT from qp317_tbl table in Session 5
E_US125E Timeout occurred on lock request (see SET LOCKMODE command).
    (Thu Feb 27 15:33:56 2003)

Disconnecting from Session 5

Connecting to Session 6


Setting Lockmode Timeout NOWAIT (Level=SYSTEM)


SELECT from qp317_tbl table in Session 6
E_US125E Timeout occurred on lock request (see SET LOCKMODE command).
    (Thu Feb 27 15:33:59 2003)

Disconnecting from Session 6

Disconnecting from Session 1
>>
? delete qp317.c 
<<
~
>>
? delete qp317.obj 
<<
~
>>
? delete qp317.o 
<<
~
>>
? delete qp317.exe 
<<
~
>>


Ending at: Wed Mar 22 17:31:02 2000
