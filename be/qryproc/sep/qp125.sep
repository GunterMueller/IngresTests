/*
	Test Name    : eha07 (former fe005.sep)
	Time         : 30-JUN-1989 
	User Name    : testenv
	Test ID      : fe005
	Module       : fe/misc
	Filename     : fe005.sep
	Purpose	     : test Aggregate function calls.
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : dept, employee, parts, prime, aggr
	Synopsis     : Aggregate function calls, including transcendental
		and multi variable.  This is an old backend test converted 
		for SQL. Create table "aggr" with field "aggr". Insert 
		into aggr field, datatypes: char, int, float, vchar.
		
		Apr-23-99 (madsu02) hard coded VPG_SZ to 8K
	16-Jun-2001	(rogch01)
		Update row orders.
          29-Oct-2007	(kiria01) b117790
		Updating canons reflecting string-number coercion changes.
          10-Mar-2008	(kiria01) b120043
			Updating canons for less ambiguous SUM and AVG
			operators due to coercion changes for date operators.

*/
? fill fe005a.dat 
!!
1	central processor	pink	10	1
2	memory	gray	20	32
3	disk drive	black	685	2
4	tape drive	black	450	4
5	tapes	gray	1	250
6	line printer	yellow	578	3
7	l-p paper	white	15	95
8	terminals	blue	19	15
13	paper tape reader	black	107	0
14	paper tape punch	black	147	0
9	terminal paper	white	2	350
10	byte-soap	clear	0	143
11	card reader	gray	327	0
12	card punch	gray	427	0
!!
? fill fe005b.dat 
!!
157	Jones, Tim          	 12000	   199	  1944	  1960
1110	Smith, Paul         	  6000	    33	  1956	  1979
35	Evans, Michael      	  5000	    32	  1956	  1981
129	Thomas, Tom         	 10000	   199	  1945	  1962
13	Edwards, Peter      	  9000	   199	  1932	  1958
215	Collins, Joanne     	  7000	    10	  1954	  1976
55	James, Mary         	 12000	   199	  1924	  1969
26	Thompson, Bob       	 13000	   199	  1934	  1970
98	Williams, Judy      	  9000	   199	  1939	  1969
32	Smythe, Carol       	  9050	   199	  1933	  1967
33	Hayes, Evelyn       	 10100	   199	  1935	  1963
199	Bullock, J.D.       	 27000	     0	  1924	  1920
4901	Bailey, Chas M.     	  8377	    32	  1960	  1980
843	Schmidt, Herman     	 11204	    26	  1940	  1956
2398	Wallace, Maggie J.  	  7880	    26	  1944	  1959
1639	Choy, Wanda         	 11160	    55	  1951	  1970
5119	Ferro, Tony         	 13621	    55	  1943	  1963
37	Raveen, Lemont      	 11985	    26	  1954	  1979
5219	Williams, Bruce     	 13374	    33	  1948	  1959
1523	Zugnoni, Arthur A.  	 19868	   129	  1932	  1949
430	Brunet, Paul C.     	 17674	   129	  1942	  1959
994	Iwano, Masahiro     	 15641	   129	  1948	  1970
1330	Onstad, Richard     	  8779	    13	  1956	  1971
10	Ross, Stanley       	 15908	   199	  1931	  1945
11	Ross, Stuart        	 12067	     0	  1935	  1932
!!
? fill fe005c.dat 
!!
35	Book	5	1	55
10	Candy	5	1	13
19	Furniture	7	4	26
20	Major Appliances	7	4	26
14	Jewelry	8	1	33
43	Children's	8	2	32
65	Junior's	7	3	17
58	Men's	7	2	129
60	Sportswear	5	1	10
99	Giftwrap	5	1	98
1	Bargain	5	0	7
26	Linens	7	3	157
63	Women's	7	3	38
49	Toys	8	2	35
70	Women's	5	1	10
73	Children's	5	1	10
34	Stationary	5	1	33
47	Junior Miss	7	2	129
28	Women's	8	2	32
!!
? sql -s SEPPARAMDB 
<<
>>
* drop aggr, dept, employee, parts, prime;\g 
<<
~
>>
* create table dept (number integer2, name vchar(20), store integer2, 
<<
>>
* 		floor integer2, manager integer2)  with page_size=8192;\g 
<<
>>
* create table employee (number integer2, name vchar(20), salary integer2, 
<<
>>
* 		manager integer2, birthdate integer2, startdate integer2)  with page_size=8192;\-
g 
<<
>>
* create table parts (pnum integer2, pname vchar(20), color vchar(8), 
<<
>>
* 		weight integer2, qoh integer2)  with page_size=8192;\g 
<<
>>
* copy table parts (pnum=vchar(0)tab, pname=vchar(0)tab, color=vchar(0)tab, 
<<
>>
* 			weight = vchar(0)tab, qoh=vchar(0)nl) 
<<
>>
*	from 'fe005a.dat' ;\g 
<<
(14 rows)
>>
* copy table employee (number=vchar(0)tab, name=vchar(0)tab, 
<<
>>
* 		salary= vchar(0)tab, manager=vchar(0)tab, 
<<
>>
*		birthdate=vchar(0)tab, startdate= vchar(0)nl) 
<<
>>
*	from 'fe005b.dat' ;\g
<<
(25 rows)
>>
* copy table dept (number=vchar(0)tab, name=vchar(0)tab, store=vchar(0)tab, 
<<
>>
* 		floor=vchar(0)tab, manager=vchar(0)nl) 
<<
>>
*	from 'fe005c.dat' ;\g 
<<
(19 rows)
>>
* create table prime (pnum integer2, pname vchar(20), color vchar(8), 
<<
>>
* 		weight integer2, qoh integer2)  with page_size=8192;\g 
<<
>>
* insert into prime select * from parts ;\g 
<<
(14 rows)
>>
* insert into prime select * from parts where pnum < 10 ;\g 
<<
(9 rows)
>>
* select * from prime ;\g 
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
|     1|central processor   |pink    |    10|     1|
|     2|memory              |gray    |    20|    32|
|     3|disk drive          |black   |   685|     2|
|     4|tape drive          |black   |   450|     4|
|     5|tapes               |gray    |     1|   250|
|     6|line printer        |yellow  |   578|     3|
|     7|l-p paper           |white   |    15|    95|
|     8|terminals           |blue    |    19|    15|
|    13|paper tape reader   |black   |   107|     0|
|    14|paper tape punch    |black   |   147|     0|
|     9|terminal paper      |white   |     2|   350|
|    10|byte-soap           |clear   |     0|   143|
|    11|card reader         |gray    |   327|     0|
|    12|card punch          |gray    |   427|     0|
|     1|central processor   |pink    |    10|     1|
|     2|memory              |gray    |    20|    32|
|     3|disk drive          |black   |   685|     2|
|     4|tape drive          |black   |   450|     4|
|     5|tapes               |gray    |     1|   250|
|     6|line printer        |yellow  |   578|     3|
|     7|l-p paper           |white   |    15|    95|
|     8|terminals           |blue    |    19|    15|
|     9|terminal paper      |white   |     2|   350|
+------+--------------------+--------+------+------+
(23 rows)
>>
* create table aggr (aggr vchar(8), i2 integer2, i4 integer4, 
<<
>>
*		f8 float8, c8 vchar(8))  with page_size=8192;\g 
<<
>>
* insert into aggr (aggr, i4) select 'count', 
<<
>>
*	count (qoh) from parts where qoh=0;\g 
<<
(1 row)
>>
* insert into aggr (aggr, i4) select 'countu', 
<<
>>
*	count (distinct pname) from prime where qoh=0 ;\g 
<<
(1 row)
>>
* insert into aggr (c8) select sum (pname) from parts ;\g 
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Mar 10 14:34:57 2008)

>>
* insert into aggr (f8) select avg(color) from parts ;\g 
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Mar 10 14:35:06 2008)

>>
* insert into aggr (c8) select sum (distinct pname) from prime ;\g 
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Mar 10 14:35:12 2008)

>>
* insert into aggr (f8) select avg (distinct color) from prime ;\g 
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Mar 10 14:35:15 2008)

>>
* insert into aggr(aggr, i2) select 'sum', 
<<
>>
*	sum(weight) from parts where pnum< 3; ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, i2) select 'sumu', 
<<
>>
*	sum (distinct weight) from prime where pnum <3 ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, f8) select 'avg', avg(weight) from parts ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, f8) select 'avgu', avg (distinct weight) from prime ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, c8) select 'max', 
<<
>>
*	max(color) from parts where pnum<5 ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, i2) select 'max', max(qoh) from parts ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, c8) select 'min', min(color) from parts ;\g 
<<
(1 row)
>>
* insert into aggr (aggr, i2) select 'min', 
<<
>>
*	min(pnum) from parts where color = 'black' ;\g 
<<
(1 row)
>>
* select * from aggr ;\g 
<<

+--------+------+-------------+-----------+--------+
|aggr    |i2    |i4           |f8         |c8      |
+--------+------+-------------+-----------+--------+
|count   |      |            4|           |        |
|countu  |      |            4|           |        |
|sum     |    30|             |           |        |
|sumu    |    30|             |           |        |
|avg     |      |             |    199.143|        |
|avgu    |      |             |    199.143|        |
|max     |      |             |           |pink    |
|max     |   350|             |           |        |
|min     |      |             |           |black   |
|min     |     3|             |           |        |
+--------+------+-------------+-----------+--------+
(10 rows)
>>
* select count (atan (qoh)) from parts where qoh=0 and pnum > 12 ;\g 
<<

+-------------+
|col1         |
+-------------+
|            2|
+-------------+
(1 row)
>>
* select f8=sum (log (weight)) from parts 
<<
>>
*	where pnum < 3 ;\g 
<<

+-----------+
|f8         |
+-----------+
|      5.298|
+-----------+
(1 row)
>>
* select i4=avg (distinct concat (color, ',')) from prime ;\g 
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Mar 10 14:35:16 2008)

>>
* select f8=max (sqrt (weight) + qoh) from parts 
<<
>>
*	where pnum < 5 ;\g 
<<

+-----------+
|f8         |
+-----------+
|     36.472|
+-----------+
(1 row)
>>
* select * from parts 
<<
>>
*	where exists 
<<
>>
*	 	(select * from parts where color = 'gray') ;\g 
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
|     1|central processor   |pink    |    10|     1|
|     2|memory              |gray    |    20|    32|
|     3|disk drive          |black   |   685|     2|
|     4|tape drive          |black   |   450|     4|
|     5|tapes               |gray    |     1|   250|
|     6|line printer        |yellow  |   578|     3|
|     7|l-p paper           |white   |    15|    95|
|     8|terminals           |blue    |    19|    15|
|    13|paper tape reader   |black   |   107|     0|
|    14|paper tape punch    |black   |   147|     0|
|     9|terminal paper      |white   |     2|   350|
|    10|byte-soap           |clear   |     0|   143|
|    11|card reader         |gray    |   327|     0|
|    12|card punch          |gray    |   427|     0|
+------+--------------------+--------+------+------+
(14 rows)
>>
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
|     1|central processor   |pink    |    10|     1|
|     2|memory              |gray    |    20|    32|
|     3|disk drive          |black   |   685|     2|
|     4|tape drive          |black   |   450|     4|
|     5|tapes               |gray    |     1|   250|
|     6|line printer        |yellow  |   578|     3|
|     7|l-p paper           |white   |    15|    95|
|     8|terminals           |blue    |    19|    15|
|     9|terminal paper      |white   |     2|   350|
|    10|byte-soap           |clear   |     0|   143|
|    11|card reader         |gray    |   327|     0|
|    12|card punch          |gray    |   427|     0|
|    13|paper tape reader   |black   |   107|     0|
|    14|paper tape punch    |black   |   147|     0|
+------+--------------------+--------+------+------+
(14 rows)
>>
* select func=ascii (avg (weight)) from parts ;\g 
<<

+-----------+
|func       |
+-----------+
|199.143    |
+-----------+
(1 row)
>>
* select d1=avg (distinct weight), d2 = avg (distinct weight) from prime 
<<
>>
*	where pnum < 14 ;\g 
<<

+-----------+-----------+
|d1         |d2         |
+-----------+-----------+
|    203.154|    203.154|
+-----------+-----------+
(1 row)
>>
* select d1=avg (distinct weight) , d2 = avg(distinct pnum) from prime 
<<
>>
*	where pnum < 14 ;\g 
<<

+-----------+-----------+
|d1         |d2         |
+-----------+-----------+
|    203.154|      7.000|
+-----------+-----------+
(1 row)
>>
* select avgsal=avg(salary) from employee 
<<
>>
*	where manager =any 
<<
>>
*	 (select manager from dept where floor = 4) ;\g 
<<

+-----------+
|avgsal     |
+-----------+
|  10356.333|
+-----------+
(1 row)
>>
* select qoh, avgwt = avg(weight) from parts group by qoh order by 1;\g 
<<

+------+-----------+
|qoh   |avgwt      |
+------+-----------+
|     0|    252.000|
|     1|     10.000|
|     2|    685.000|
|     3|    578.000|
|     4|    450.000|
|    15|     19.000|
|    32|     20.000|
|    95|     15.000|
|   143|      0.000|
|   250|      1.000|
|   350|      2.000|
+------+-----------+
(11 rows)
>>
* select qoh, s=sum (sqrt (weight) + pnum) from parts where qoh < 5 group by qoh ord-
er by 1;\g 
<<

+------+-----------+
|qoh   |s          |
+------+-----------+
|     0|    111.216|
|     1|      4.162|
|     2|     29.173|
|     3|     30.042|
|     4|     25.213|
+------+-----------+
(5 rows)
>>
* select color, qoh, maxnum=max(pnum) from parts where pnum>10 group by color, qoh o-
rder by 1;\g 
<<

+--------+------+------+
|color   |qoh   |maxnum|
+--------+------+------+
|black   |     0|    14|
|gray    |     0|    12|
+--------+------+------+
(2 rows)
>>
* select qoh, func=sqrt (avg (weight)) from parts group by qoh order by 1;\g 
<<

+------+-----------+
|qoh   |func       |
+------+-----------+
|     0|     15.875|
|     1|      3.162|
|     2|     26.173|
|     3|     24.042|
|     4|     21.213|
|    15|      4.359|
|    32|      4.472|
|    95|      3.873|
|   143|      0.000|
|   250|      1.000|
|   350|      1.414|
+------+-----------+
(11 rows)
>>
* select qoh, avgwt=avg(weight) from parts where qoh<10 group by qoh having max(pnum-
) <13 order by 1;\g 
<<

+------+-----------+
|qoh   |avgwt      |
+------+-----------+
|     1|     10.000|
|     2|    685.000|
|     3|    578.000|
|     4|    450.000|
+------+-----------+
(4 rows)
>>
* select qoh, avgwt=avg(weight), sumnum=sum(pnum) from parts group by qoh order by 1-
;\g 
<<

+------+-----------+-------------+
|qoh   |avgwt      |sumnum       |
+------+-----------+-------------+
|     0|    252.000|           50|
|     1|     10.000|            1|
|     2|    685.000|            3|
|     3|    578.000|            6|
|     4|    450.000|            4|
|    15|     19.000|            8|
|    32|     20.000|            2|
|    95|     15.000|            7|
|   143|      0.000|           10|
|   250|      1.000|            5|
|   350|      2.000|            9|
+------+-----------+-------------+
(11 rows)
>>
* select qoh, avgst=avg(weight) , sumnum = sum (pnum) from parts 
<<
>>
*	group by qoh having avg (pnum) > 10 ;\g 
<<

+------+-----------+-------------+
|qoh   |avgst      |sumnum       |
+------+-----------+-------------+
|     0|    252.000|           50|
+------+-----------+-------------+
(1 row)
>>
* select color, count (pnum) from parts group by color order by 1;\g 
<<

+--------+-------------+
|color   |col2         |
+--------+-------------+
|black   |            4|
|blue    |            1|
|clear   |            1|
|gray    |            4|
|pink    |            1|
|white   |            2|
|yellow  |            1|
+--------+-------------+
(7 rows)
>>
* select d1=avg (distinct qoh), d2 = sum (distinct qoh), color from prime 
<<
>>
*	where pnum < 14 group by color ;\g 
<<

+-----------+-------------+--------+
|d1         |d2           |color   |
+-----------+-------------+--------+
|      2.000|            6|black   |
|     15.000|           15|blue    |
|    143.000|          143|clear   |
|     94.000|          282|gray    |
|      1.000|            1|pink    |
|    222.500|          445|white   |
|      3.000|            3|yellow  |
+-----------+-------------+--------+
(7 rows)
>>
* select d1=avg(qoh), d2=sum(distinct qoh), color from prime 
<<
>>
*	where pnum < 14 group by color ;\g 
<<

+-----------+-------------+--------+
|d1         |d2           |color   |
+-----------+-------------+--------+
|      2.400|            6|black   |
|     15.000|           15|blue    |
|    143.000|          143|clear   |
|     94.000|          282|gray    |
|      1.000|            1|pink    |
|    222.500|          445|white   |
|      3.000|            3|yellow  |
+-----------+-------------+--------+
(7 rows)
>>
* select d1=avg(qoh), d2=sum(weight), color from prime where pnum <14 group by color-
 order by 3;\g 
<<

+-----------+-------------+--------+
|d1         |d2           |color   |
+-----------+-------------+--------+
|      2.400|         2377|black   |
|     15.000|           38|blue    |
|    143.000|            0|clear   |
|     94.000|          796|gray    |
|      1.000|           20|pink    |
|    222.500|           34|white   |
|      3.000|         1156|yellow  |
+-----------+-------------+--------+
(7 rows)
>>
* select d1=max(qoh), d2=sum (distinct qoh), color from prime 
<<
>>
*	where pnum<14 group by color ;\g 
<<

+------+-------------+--------+
|d1    |d2           |color   |
+------+-------------+--------+
|     4|            6|black   |
|    15|           15|blue    |
|   143|          143|clear   |
|   250|          282|gray    |
|     1|            1|pink    |
|   350|          445|white   |
|     3|            3|yellow  |
+------+-------------+--------+
(7 rows)
>>
* select d1=max(qoh), d2=sum(weight), color from prime where pnum<14 group by color -
order by 3;\g 
<<

+------+-------------+--------+
|d1    |d2           |color   |
+------+-------------+--------+
|     4|         2377|black   |
|    15|           38|blue    |
|   143|            0|clear   |
|   250|          796|gray    |
|     1|           20|pink    |
|   350|           34|white   |
|     3|         1156|yellow  |
+------+-------------+--------+
(7 rows)
>>
* select d1 = max (qoh), d2 = min (weight), color from prime where pnum < 14 group b-
y color order by 3;\g 
<<

+------+------+--------+
|d1    |d2    |color   |
+------+------+--------+
|     4|   107|black   |
|    15|    19|blue    |
|   143|     0|clear   |
|   250|     1|gray    |
|     1|    10|pink    |
|   350|     2|white   |
|     3|   578|yellow  |
+------+------+--------+
(7 rows)
>>
* select d.number, avgsal=avg(e.salary) from dept d, employee e where e.manager=d.ma-
nager group by d.number order by 1;\g 
<<

+------+-----------+
|number|avgsal     |
+------+-----------+
|    10|   8779.000|
|    14|   9687.000|
|    19|  10356.333|
|    20|  10356.333|
|    28|   6688.500|
|    34|   9687.000|
|    35|  12390.500|
|    43|   6688.500|
|    47|  17727.667|
|    58|  17727.667|
|    60|   7000.000|
|    70|   7000.000|
|    73|   7000.000|
+------+-----------+
(13 rows)
>>
* select d.number, avgsal = avg(e.salary) from dept d, employee e where e.manager = -
d.manager group by d.number having max (e.number) > 35 order by 1;\g 
<<

+------+-----------+
|number|avgsal     |
+------+-----------+
|    10|   8779.000|
|    14|   9687.000|
|    19|  10356.333|
|    20|  10356.333|
|    28|   6688.500|
|    34|   9687.000|
|    35|  12390.500|
|    43|   6688.500|
|    47|  17727.667|
|    58|  17727.667|
|    60|   7000.000|
|    70|   7000.000|
|    73|   7000.000|
+------+-----------+
(13 rows)
>>
* drop aggr, employee, dept, parts, prime ;\g 
<<
>>
* \q 
<<
>>


Ending at: Mon Mar 10 14:35:19 2008
