/*
	Test Name: eha00.sep
	Time: 31-JUL-1989 10:39:27
	User Name: testenv      
 
	Test ID : eha00 (formerly ag007)
	Module  : 
	Filename: eha00.sep
	Purpose	:
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : s, p, sp
	Synopsis     : aggregates
	History	: 
             	--------- claire l. created.
		mar 28/89 sgp modified to add to test suite.
		jul 31/89 lah converted to sep format
		11-26-91 Converted to using setup file.
	Setup Test   : eaa00.sep
          28-Aug-1996	(Author)
          07-Jan-1999   (hanch04) update row orders.
	  23-Mar-1999  (vande02) Changed 'sql -s SEPPARAMDB' canon to be empty,
				in order to catch the msg. "TM could not connect
				..." if the test database did not exist.
	18-Jun-2001	(rogch01)
		Update row orders.
*/
? sql -s SEPPARAMDB 
<<

>>
* select * from p order by 1;\g
<<

+------+----------+------+------+----------+
|pno   |pname     |color |weight|city      |
+------+----------+------+------+----------+
|p1    |nut       |red   |    12|london    |
|p2    |bolt      |green |    17|paris     |
|p3    |screw     |blue  |    17|rome      |
|p4    |screw     |red   |    14|london    |
|p5    |cam       |blue  |    12|paris     |
|p6    |cog       |red   |    19|london    |
+------+----------+------+------+----------+
(6 rows)
>>
* select * from s order by 1;\g
<<

+------+------+------+----------+
|sno   |sname |status|city      |
+------+------+------+----------+
|s1    |smith |    20|london    |
|s2    |jones |    10|paris     |
|s3    |blake |    30|paris     |
|s4    |clark |    20|london    |
|s5    |adams |    30|athens    |
+------+------+------+----------+
(5 rows)
>>
* select * from sp order by 1, 2;\g
<<

+------+------+------+
|sno   |pno   |qty   |
+------+------+------+
|s1    |p1    |   300|
|s1    |p2    |   200|
|s1    |p3    |   400|
|s1    |p4    |   200|
|s1    |p5    |   100|
|s1    |p6    |   100|
|s2    |p1    |   300|
|s2    |p2    |   400|
|s3    |p2    |   200|
|s4    |p2    |   200|
|s4    |p4    |   300|
|s4    |p5    |   400|
+------+------+------+
(12 rows)
>>
* select count(*) from s;\g
<<

+-------------+
|col1         |
+-------------+
|            5|
+-------------+
(1 row)
>>
* select count(distinct sno) from sp;\g
<<

+-------------+
|col1         |
+-------------+
|            4|
+-------------+
(1 row)
>>
* select count(*) from sp where pno = 'p2';\g
<<

+-------------+
|col1         |
+-------------+
|            4|
+-------------+
(1 row)
>>
* select distinct pno from sp spx 
<<
>>
*	where 1 < 
<<
>>
*	 (select count(*) from sp spy where spy.pno = spx.pno) order by 1;\g
<<

+------+
|pno   |
+------+
|p1    |
|p2    |
|p4    |
|p5    |
+------+
(4 rows)
>>
* select pno from sp group by pno having count(*) > 1 order by 1;\g
/*
 get part numbers for all parts supplied by more than one supplier 
*/
<<

+------+
|pno   |
+------+
|p1    |
|p2    |
|p4    |
|p5    |
+------+
(4 rows)
>>
* select pno, sum(qty) from sp where pno = 'p2';\g
<<
E_US0B63 line 1, The columns in the SELECT clause must be contained in the
    GROUP BY clause.
    (14-AUG-1989 09:06:25)

>>
* select pno, sum(qty) from sp group by pno order by 1;\g
<<

+------+-------------+
|pno   |col2         |
+------+-------------+
|p1    |          600|
|p2    |         1000|
|p3    |          400|
|p4    |          500|
|p5    |          500|
|p6    |          100|
+------+-------------+
(6 rows)
>>
* select pno, sum(qty) from sp where sno != 's1' group by pno order by 1;\g
<<

+------+-------------+
|pno   |col2         |
+------+-------------+
|p1    |          300|
|p2    |          800|
|p4    |          300|
|p5    |          400|
+------+-------------+
(4 rows)
>>
* select pno from p px 
<<
>>
*	where px.weight * 3 >any 
<<
>>
*	 (select sum(weight) from p py 
<<
>>
*		where py.city > px.city 
<<
>>
*			or py.color > px.color);\g
<<

+------+
|pno   |
+------+
|p6    |
+------+
(1 row)
>>
* select sno from s 
<<
>>
*	where status < (select max(status) from s) order by 1;\g
<<

+------+
|sno   |
+------+
|s1    |
|s2    |
|s4    |
+------+
(3 rows)
>>
<<

+------+
|sno   |
+------+
|s4    |
|s2    |
|s1    |
+------+
(3 rows)
>>
* select sno from s 
<<
>>
*	where status > (select min(status) from s) order by 1;\g
<<

+------+
|sno   |
+------+
|s1    |
|s3    |
|s4    |
|s5    |
+------+
(4 rows)
>>
<<

+------+
|sno   |
+------+
|s5    |
|s3    |
|s4    |
|s1    |
+------+
(4 rows)
>>
* select sno, status, city from s sx 
<<
>>
*	where status >= 
<<
>>
*	 (select avg(status) from s sy 
<<
>>
*		where sy.city = sx.city) order by 1;\g
<<

+------+------+----------+
|sno   |status|city      |
+------+------+----------+
|s1    |    20|london    |
|s3    |    30|paris     |
|s4    |    20|london    |
|s5    |    30|athens    |
+------+------+----------+
(4 rows)
>>
<<

+------+------+----------+
|sno   |status|city      |
+------+------+----------+
|s5    |    30|athens    |
|s1    |    20|london    |
|s4    |    20|london    |
|s3    |    30|paris     |
+------+------+----------+
(4 rows)
>>
* select * from s sx 
<<
>>
*	where status >any 
<<
>>
*	 (select avg(status) from s sy 
<<
>>
*		where sy.city = sx.city);\g
<<

+------+------+------+----------+
|sno   |sname |status|city      |
+------+------+------+----------+
|s3    |blake |    30|paris     |
+------+------+------+----------+
(1 row)
>>
* \q
<<
>>


Ending at: Mon Jun 18 12:21:09 2001
