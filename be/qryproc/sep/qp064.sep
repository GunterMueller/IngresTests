/*
	Test Name: eea22.sep
	Time: 
	User Name: testenv
 
	Test ID : eea22
	Module  : cursors
	Filename: eea22.sep
	Purpose	: Verify that having declared a cursor FOR UPDATE 
		of a list of columns of a view owned by another user, 
		current user will be able to update only those 
		columns in the list on which he/she posseses UPDATE 
		privilege.
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : eea22_table1
	Synopsis     : Try to update columns through a cursor on a view that
		you either don't have update priviledge on, or is not in the
		update list of the cursor. Finally issue a successfully update
		through the cursor.


	History	: 8-Dec-1993 (camacho) created from script that 
			andre created.
		  7-MAR-1997    (vissu01) Modified for NT
		  25-March-1999  (kamra01) modified VPG_SZ to 8192
	11-jun-2003 (abbjo03)
		Add includes and other changes to avoid warnings on VMS.
*/
? fill eea22.sc 
!!
#include <stdio.h>
#include <stdlib.h>

main(argc, argv)
int	argc;
char	*argv[];
{

exec sql include sqlca;

exec sql begin declare section;
	int   v1, v2, v3, v4, v5, v6, cnt;
	char  *dbname;
exec sql end declare section;

if (argc != 2)
    {
        printf("ERROR : program requires 1 arguments.");
        printf(" %d arguments given\n", (argc - 1));
        exit(-1);
    }

dbname = argv[1];

/********* Connecting to database **********/

exec sql whenever sqlerror stop;
exec sql connect :dbname;
exec sql whenever sqlerror call sqlprint;

/********* Creating Objects ****************/

exec sql drop eea22_table1;
exec sql drop eea22_view1;

exec sql create table eea22_table1(c1 i, c2 i, c3 i, c4 i, c5 i) with page_size=8192;
    if (sqlca.sqlcode!=0)
    {
	printf("Failure trying to create table eea22_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }
    
exec sql grant select, update (c1,c3,c5) on eea22_table1 to eea22_user2;
    if (sqlca.sqlcode!=0)
    {
	printf("Failure trying to GRANT rivileges on eea22_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }

exec sql create view eea22_view1 as
	select c1, c2, c3, c4, c5, 
		c1+c2 as c1_plus_c2, c2+c3 as c2_plus_c3,
		c1+c3 as c1_plus_c3 from eea22_table1;
    if (sqlca.sqlcode!=0)
    {
 	printf("Failure trying to create view eea22_view1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }
    
exec sql grant select, update(c2, c3, c5, c2_plus_c3) 
	on eea22_view1 to eea22_user2;
    if (sqlca.sqlcode!=0)
    {
	printf("Failure trying to GRANT rivileges on eea22_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }

    
/********** Populating Table eea22_table1 *************/

exec sql insert into eea22_table1 values(1,2,3,4,5);
exec sql insert into eea22_table1 values(11,12,13,14,15);
exec sql insert into eea22_table1 values(21,22,23,24,25);
exec sql insert into eea22_table1 values(31,32,33,34,35);
exec sql insert into eea22_table1 values(41,42,43,44,45);

exec sql select count(*) into :cnt from eea22_table1;
    if (sqlca.sqlcode!=0)
    {
	printf("Error trying to count rows in eea22_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }
    else if (cnt != 5)
    {
	printf("eea22_table1 contains %d rows - should be 5\n", cnt);
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }

exec sql commit;

/*******************************************************
** declare cursor that will be used to read rows of eea22_table1 in a
** certain order to minimize test diffs
*******************************************************/
exec sql declare ordered cursor for
	select * from eea22_table1 order by c1,c2,c3,c4,c5;

/* Display contents of the table before we start messing with it */

printf("\nDumping table eea22_table1 \n");
printf("------------------------------------\n");
printf("C1\tC2\tC3\tC4\tC5\n");
printf("------------------------------------\n");

exec sql open ordered;

for (cnt = 0; cnt < 5; cnt++)
    {
	exec sql fetch ordered into :v1, :v2, :v3, :v4, :v5;
	if (sqlca.sqlcode < 0)
	{
	    printf("Failure trying to read eea22_table1 using a cursor\n");
	    printf("sqlcode = %d; skip the rest of the tests\n", sqlca.sqlcode);
	    exit(-1);
	}
	else if (sqlca.sqlcode==100)
	{
	    printf("ran out of rows to read after row # %d; will continue\n",
		cnt);
	    break;
	}
	
	printf("%d\t%d\t%d\t%d\t%d\n", v1, v2, v3, v4, v5);
    }
    exec sql close ordered;

/*******************************************************************************
** Test Case:
**	    verify that having declared a cursor FOR UPDATE of a list of columns
**	    of a view owned by another user, current user will be able to update
**	    only those columns in the list on which he/she posseses UPDATE
**	    privilege 
********************************************************************************/
    printf("\n\nEEA22:\n\n");

    exec sql commit;

    printf("SET SESSION AUTHORIZATION eea22_user2\n\n");
    exec sql SET SESSION AUTHORIZATION eea22_user2;

    exec sql declare cursor4 cursor for select c1 from eea22_view1
	for update of c1,c2,c3;
	
    exec sql open cursor4;
    for (cnt = 0; cnt < 5; cnt++)
    {
	exec sql fetch cursor4 into :v1;
	if (sqlca.sqlcode < 0)
	{
	    printf("Failure trying to read eea22_view1 using a cursor\n");
	    printf("sqlcode = %d; skip the rest of test 4\n", sqlca.sqlcode);
	    break;
	}
	else if (sqlca.sqlcode==100)
	{
	    printf("Ran out of rows to read after row # %d.", cnt);
	    printf("skip the rest of test 4\n");
	    break;
	}

	/*******************************************************
	** do the error cases only for the first two iterations
	*******************************************************/
	if (cnt < 2)
	{
	    /*******************************************************
	    ** First try to update a column that is not in the FOR UPDATE list
	    ** AND on which eea22_user2 does NOT possess UPDATE privilege
	    *******************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ***\n");
	    printf("***\tC4 not in update list of cursor.  ***\n\n");

	    exec sql update eea22_view1 set c4=c4+1
		where current of cursor4;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR:  We were able to update a column\n");
		printf("which did not appear in the FOR UPDATE\n");
		printf("list and on which the current user lacked\n");
		printf("UPDATE privilege\n");
	    }

	    /*******************************************************
	    ** next try to update a column on which the user possesses UPDATE
	    ** privilege but which did not appear in the FOR UPDATE LIST
	    *******************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ***\n");
	    printf("***\tC5 not in update list of cursor.  ***\n\n");

	    exec sql update eea22_view1 set c5=c5+1
		where current of cursor4;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR:  We were able to update a column\n");
		printf("which did not appear in the FOR UPDATE \n");
		printf("list\n");
	    }

	    /*******************************************************
	    ** Next try to update a column which appeared in the FOR UPDATE
	    ** list, but on which the current user lacks UPDATE privilege
	    *******************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ***\n");
	    printf("***\tDon't have update priv on C1  ***\n\n");

	    exec sql update eea22_view1 set c1=c1+1
		where current of cursor4;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR:  We were able to update a column\n");
		printf("which appeared in the FOR UPDATE list, \n");
		printf("but on which the user lacked UPDATE \n");
		printf("privilege\n");
	    }

	    /*******************************************************
	    ** Next try to update a column which was in the list and
	    ** a column which was not in the list
	    *******************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ***\n");
	    printf("***\tC5 not in update list of cursor.  ***\n\n");

	    exec sql update eea22_view1 set c2=c2+1, c5=-c5
		where current of cursor4;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR:  We were able to update a column\n");
		printf("which did not appear in the FOR UPDATE\n");
		printf("list along with a column that was\n");
	    }

	    /*******************************************************
	    ** next try to update two column which were in the list:
	    ** but the user has UPDATE on only one of them
	    *******************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ***\n");
	    printf("***\tDon't have update on C1 or C2 ***\n\n");

	    exec sql update eea22_view1 set c1=-c1,c2=-2*c2
		where current of cursor4;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR:  We were able to update a column on\n");
		printf("which the user lacked UPDATE privilege \n");
		printf("along with a column on which he has it.\n");
	    }
	}
	
	/*******************************************************
	** finally, update columns which were mentioned in the FOR 
	** UPDATE list AND on which the user possesses UPDATE privilege
	*******************************************************/
	exec sql update eea22_view1 set c2=-2*c2, c3=-3*c3
	    where current of cursor4;
	if (sqlca.sqlcode < 0)
	{
	    printf("Error: We were unable to update columns \n");
   	    printf("mentioned in the FOR UPDATE list even though\n");
	    printf("the user possesses UPDATE on them\n");
	    printf(" sqlcode = %d\n", sqlca.sqlcode);
	}
    }
    exec sql close cursor4;


	printf("\nDumping table eea22_table1 \n");
	printf("------------------------------------\n");
	printf("C1\tC2\tC3\tC4\tC5\n");
	printf("------------------------------------\n");

	exec sql open ordered;

	for (cnt = 0; cnt < 5; cnt++)
	    {
		exec sql fetch ordered into :v1, :v2, :v3, :v4, :v5;
		if (sqlca.sqlcode < 0)
		{
		    printf("Failure trying to read eea22_table1 using a cursor\n");
		    printf("sqlcode = %d; skip the rest of the tests\n", sqlca.sqlcode);
		    exit(-1);
		}
		else if (sqlca.sqlcode==100)
		{
		    printf("ran out of rows to read after row # %d; will continue\n",
			cnt);
		    break;
		}
	
		printf("%d\t%d\t%d\t%d\t%d\n", v1, v2, v3, v4, v5);
	    }
	exec sql close ordered;



end_of_test4:
    /* now undo the results of test 4 */

/****************************************************
*
*     ROLLING BACK TRANSACTION. Still need to drop
*     table eea22_table1 to finish cleanup!
*
*****************************************************/

    exec sql rollback;

    exec sql whenever sqlerror continue;
    exec sql drop eea22_table1;

    exec sql commit;

    printf("\n\nDisconnecting....\n\n");
    exec sql disconnect;

}
!!
? sepesqlc eea22.sc 
<<
ESQL eea22.sc:
>>
? sepcc eea22.c 
<<
>>
<<
eea22.c
>>
? seplnk eea22 
<<
>>
? sql -s SEPPARAMDB 
<<
>>
* drop table eea22_table1;\g
<<
~
>>
* \q 
<<
>>
? run eea22.exe SEPPARAMDB 
<<
E_US0AC1 DROP: 'eea22_table1' does not exist or is not owned by you.
    (Wed Jan 26 11:25:14 1994)
E_US0AC1 DROP: 'eea22_view1' does not exist or is not owned by you.
    (Thu Dec  9 11:39:46 1993)

Dumping table eea22_table1 
------------------------------------
C1	C2	C3	C4	C5
------------------------------------
1	2	3	4	5
11	12	13	14	15
21	22	23	24	25
31	32	33	34	35
41	42	43	44	45


EEA22:

SET SESSION AUTHORIZATION eea22_user2



***	THIS WAS MEANT TO FAIL ***
***	C4 not in update list of cursor.  ***

E_US089F line 1, Column 'c4' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:47 1993)


***	THIS WAS MEANT TO FAIL ***
***	C5 not in update list of cursor.  ***

E_US089F line 1, Column 'c5' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:47 1993)


***	THIS WAS MEANT TO FAIL ***
***	Don't have update priv on C1  ***

E_PS0403 UPDATE: column 'c1' of 'eea22_view1' may not be updated 
    using cursor 'cursor4' because you lack privileges required 
to update it.
    (Thu Dec  9 11:39:47 1993)


***	THIS WAS MEANT TO FAIL ***
***	C5 not in update list of cursor.  ***

E_US089F line 1, Column 'c5' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	Don't have update on C1 or C2 ***

E_PS0403 UPDATE: column 'c1' of 'eea22_view1' may not be updated 
    using cursor 'cursor4' because you lack privileges required 
to update it.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	C4 not in update list of cursor.  ***

E_US089F line 1, Column 'c4' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	C5 not in update list of cursor.  ***

E_US089F line 1, Column 'c5' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	Don't have update priv on C1  ***

E_PS0403 UPDATE: column 'c1' of 'eea22_view1' may not be updated 
    using cursor 'cursor4' because you lack privileges required 
to update it.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	C5 not in update list of cursor.  ***

E_US089F line 1, Column 'c5' in cursor 'cursor4' is not updatable.
    (Thu Dec  9 11:39:48 1993)


***	THIS WAS MEANT TO FAIL ***
***	Don't have update on C1 or C2 ***

E_PS0403 UPDATE: column 'c1' of 'eea22_view1' may not be updated 
    using cursor 'cursor4' because you lack privileges required 
to update it.
    (Thu Dec  9 11:39:48 1993)

Dumping table eea22_table1 
------------------------------------
C1	C2	C3	C4	C5
------------------------------------
1	-4	-9	4	5
11	-24	-39	14	15
21	-44	-69	24	25
31	-64	-99	34	35
41	-84	-129	44	45


Disconnecting....

>>
? delete eea22.exe 
<<
~
>>
? delete eea22.c 
<<
~
>>
? delete eea22.obj 
<<
~
>>
? delete eea22.o 
<<
~
>>


Ending at: Thu Dec  9 11:39:49 1993


