/*
	Test Name: eea20.sep
	Time: 
	User Name: testenv
 
	Test ID : eea20
	Module  : cursors
	Filename: eea20.sep
	Purpose	: Test that we can't update columns not in the cursor update
		list and columns that we don't have update priv on.
	Input Files  : none
	Output Files : none
	Database     : SEPPARAMDB
	Tables       : eea20_table1
	Synopsis     : Create a cursor that is opened for update of 
		columns c1, c2,and c3. But we only have update priv's
		on columns c1, c3, and c5. 
			1. Try to update c4.
			2. Try to update c5.
			3. Try to update c2.
			4. Try to update c1 and c5.
			5. Try to update c1 and c2.
		Finally try an update that we can do.
			6. Update c1 and c3.

	History	: 8-Dec-1993 (camacho) created from script that 
			andre created.
		 28-Dec-1998	(somsa01)
				Added NT canon for sepcc.
                  25-March-1999  (kamra01) modified VPG_SZ to 8192 
	11-jun-2003 (abbjo03)
		Add includes and other changes to avoid warnings on VMS.
		  10-oct-2003	(somsa01)	Updated to delete more temp
						files.
*/
? fill eea20.sc 
!!
#include <stdio.h>
#include <stdlib.h>

main(argc, argv)
int	argc;
char	*argv[];
{

exec sql include sqlca;

exec sql begin declare section;
	int   v1, v2, v3, v4, v5, v6, cnt;
	char  *dbname;
exec sql end declare section;

if (argc != 2)
    {
        printf("ERROR : program requires 1 arguments.");
        printf(" %d arguments given\n", (argc - 1));
        exit(-1);
    }

dbname = argv[1];

/********* Connecting to database *************/

exec sql whenever sqlerror stop;
exec sql connect :dbname;
exec sql whenever sqlerror call sqlprint;

/********* Creating Objects ******************/

exec sql drop eea20_table1;

exec sql create table eea20_table1(c1 i, c2 i, c3 i, c4 i, c5 i) with page_size=8192;
    if (sqlca.sqlcode!=0)
    {
	printf("Failure trying to create table eea20_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }
    
exec sql grant select, update (c1,c3,c5) on eea20_table1 to eea20_user2;
    if (sqlca.sqlcode!=0)
    {
	printf("Failure trying to GRANT rivileges on eea20_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }

/********** Populating Table eea20_table1 ********/

exec sql insert into eea20_table1 values(1,2,3,4,5);
exec sql insert into eea20_table1 values(11,12,13,14,15);
exec sql insert into eea20_table1 values(21,22,23,24,25);
exec sql insert into eea20_table1 values(31,32,33,34,35);
exec sql insert into eea20_table1 values(41,42,43,44,45);

exec sql select count(*) into :cnt from eea20_table1;
    if (sqlca.sqlcode!=0)
    {
	printf("Error trying to count rows in eea20_table1\n");
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }
    else if (cnt != 5)
    {
	printf("eea20_table1 contains %d rows - should be 5\n", cnt);
	printf("will skip the remainder of the tests\n");
	exit(-1);
    }

exec sql commit;

/*
** declare cursor that will be used to read rows of eea20_table1 in a
** certain order to minimize test diffs
*/
exec sql declare ordered cursor for
	select * from eea20_table1 order by c1,c2,c3,c4,c5;

/* display contents of the table before we start messing with it */

printf("\nDumping table eea20_table1 \n");
printf("------------------------------------\n");
printf("C1\tC2\tC3\tC4\tC5\n");
printf("------------------------------------\n");

exec sql open ordered;

for (cnt = 0; cnt < 5; cnt++)
    {
	exec sql fetch ordered into :v1, :v2, :v3, :v4, :v5;
	if (sqlca.sqlcode < 0)
	{
	    printf("Failure trying to read eea20_table1 using a cursor\n");
	    printf("sqlcode = %d; skip the rest of the tests\n", sqlca.sqlcode);
	    exit(-1);
	}
	else if (sqlca.sqlcode==100)
	{
	    printf("ran out of rows to read after row # %d; will continue\n",
		cnt);
	    break;
	}
	
	printf("%d\t%d\t%d\t%d\t%d\n", v1, v2, v3, v4, v5);
    }
    exec sql close ordered;


/*********************************************************************
** Test Case:
**    Verify that having declared a cursor FOR UPDATE of a list of columns
**    of a base table owned by another user, current user will be able to
**    update only those columns mentioned in the list on which he/she
**    posseses UPDATE privilege 
**********************************************************************/
    printf("\n\nEEA20:\n\n");

    exec sql commit;

    printf("SET SESSION AUTHORIZATION eea20_user2\n");
    exec sql SET SESSION AUTHORIZATION eea20_user2;
    
    exec sql declare cursor2 cursor for select c1 from eea20_table1
	for update of c1,c2,c3;
	
    exec sql open cursor2;
    for (cnt = 0; cnt < 5; cnt++)
    {
	exec sql fetch cursor2 into :v1;
	if (sqlca.sqlcode < 0)
	{
	    printf("Failure trying to read eea20_table1 using a cursor\n");
	    printf("sqlcode = %d; skip the rest of test 2\n", sqlca.sqlcode);
	    break;
	}
	else if (sqlca.sqlcode==100)
	{
	    printf("ran out of rows to read after row # %d;\n", cnt);
	    printf("skip the rest of test 2\n");
	    break;
	}

	/*
	** Do the error cases only for the first two iterations
	*/
	if (cnt < 2)
	{
	    /****************************************************************
	    ** first try to update a column that is not in the FOR UPDATE list
	    ** AND on which eea20_user2 does NOT possess UPDATE privilege
	    ****************************************************************/

	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ****\n");
	    printf("***\tC4 not in update list of cursor and no upd priviledge.\n\n");

	    exec sql update eea20_table1 set c4=c4+1 where current of cursor2;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR: We were able to update a column which\n"); 
		printf("did not appear in the FOR UPDATE list and on which\n");
                printf("the current user lacked UPDATE privilege.\n");
	    }

	    /*****************************************************************
	    ** next try to update a column on which the user possesses UPDATE
	    ** privilege but which did not appear in the FOR UPDATE LIST
	    *****************************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ****\n");
            printf("***\tC5 not in update list of cursor.\n\n");

	    exec sql update eea20_table1 set c5=c5+1 where current of cursor2;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR: We were able to update a column which\n");
		printf("did not appear in the FOR UPDATE list\n");
	    }

	    /***************************************************************
	    ** Next try to update a column which appeared in the FOR UPDATE
	    ** list, but on which the current user lacks UPDATE privilege
	    ****************************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ****\n");
	    printf("***\tDon't have update priviledge on C2.\n\n");

	    exec sql update eea20_table1 set c2=c2+1 where current of cursor2;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR: We were able to update a column which\n");
		printf("appeared in the FOR UPDATE list, but on which the ");
		printf("user lacked UPDATE privilege\n");
	    }

	    /*****************************************************************
	    ** next try to update a column which was in the list and a column
	    ** which was not in the list
	    ******************************************************************/

	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ****\n");
	    printf("***\tC5 not in update list of cursor.\n\n");
	    exec sql update eea20_table1 set c1=c1+1, c5=-c5
		where current of cursor2;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR: We were able to update a column which\n");
		printf("did not appear in the FOR UPDATE list along with\n");
		printf("a column that was\n");
	    }

	    /*****************************************************************
	    ** next try to update two column which were in the list: but the
	    ** user has UPDATE on only one of them
	    ******************************************************************/
	    printf("\n\n***\tTHIS WAS MEANT TO FAIL ****\n ");
	    printf("***\tDon't have update priviledge on C2\n\n");
	    exec sql update eea20_table1 set c1=-c1,c2=-2*c2
		where current of cursor2;
	    if (sqlca.sqlcode == 0)
	    {
		printf("ERROR: We were able to update a column on\n");
		printf("which the user lacked UPDATE privilege along\n");
                printf(" with a column on which he has it\n");
	    }
	}
	
	/******************************************************************
	** finally, update columns which were mentioned in the FOR UPDATE list
	** AND on which the user possesses UPDATE privilege
	******************************************************************/
	exec sql update eea20_table1 set c1=-c1, c3=-3*c3
	    where current of cursor2;
	if (sqlca.sqlcode < 0)
	{
	    printf("ERROR -We were unable to update columns \n");
	    printf("mentioned in the FOR UPDATE list even though the user\n");
            printf("possesses UPDATE on them;\n");
            printf("sqlcode = %d\n", sqlca.sqlcode);
	}
    }
    exec sql close cursor2;

printf("\nDumping table eea20_table1 \n");
printf("------------------------------------\n");
printf("C1\tC2\tC3\tC4\tC5\n");
printf("------------------------------------\n");

exec sql open ordered;

for (cnt = 0; cnt < 5; cnt++)
    {
	exec sql fetch ordered into :v1, :v2, :v3, :v4, :v5;
	if (sqlca.sqlcode < 0)
	{
	    printf("Failure trying to read eea20_table1 using a cursor\n");
	    printf("sqlcode = %d; skip the rest of the tests\n", sqlca.sqlcode);
	    exit(-1);
	}
	else if (sqlca.sqlcode==100)
	{
	    printf("ran out of rows to read after row # %d; will continue\n",
		cnt);
	    break;
	}
	
	printf("%d\t%d\t%d\t%d\t%d\n", v1, v2, v3, v4, v5);
    }
    exec sql close ordered;


end_of_test2:

/****************************************************
*
*     ROLLING BACK TRANSACTION. Still need to drop
*     table eea20_table1 to finish cleanup!
*
*****************************************************/

    exec sql rollback;

    exec sql whenever sqlerror continue;
    exec sql drop eea20_table1;

    printf("\n\nDisconnecting....\n\n");
    exec sql disconnect;

}
!!
? sepesqlc eea20.sc 
<<
ESQL eea20.sc:
>>
? sepcc eea20.c 
<<
>>
<<
eea20.c
>>
? seplnk eea20 
<<
>>
? sql -s SEPPARAMDB 
<<
>>
* drop eea20_table1;\g
<<
~
>>
* \q 
<<
>>
? run eea20.exe SEPPARAMDB 
<<
E_US0AC1 DROP: 'eea20_table1' does not exist or is not owned by you.
    (Wed Dec  8 14:43:51 1993)

Dumping table eea20_table1 
------------------------------------
C1	C2	C3	C4	C5
------------------------------------
1	2	3	4	5
11	12	13	14	15
21	22	23	24	25
31	32	33	34	35
41	42	43	44	45


EEA20:

SET SESSION AUTHORIZATION eea20_user2


***	THIS WAS MEANT TO FAIL ****
***	C4 not in update list of cursor and no upd priviledge.

E_US089F line 1, Column 'c4' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	C5 not in update list of cursor.

E_US089F line 1, Column 'c5' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	Don't have update priviledge on C2.

E_PS0403 UPDATE: column 'c2' of 'eea20_table1' may not be updated 
    using cursor 'cursor2' because you lack privileges required 
to update it.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	C5 not in update list of cursor.

E_US089F line 1, Column 'c5' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
 ***	Don't have update priviledge on C2

E_PS0403 UPDATE: column 'c2' of 'eea20_table1' may not be updated 
    using cursor 'cursor2' because you lack privileges required 
to update it.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	C4 not in update list of cursor and no upd priviledge.

E_US089F line 1, Column 'c4' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	C5 not in update list of cursor.

E_US089F line 1, Column 'c5' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	Don't have update priviledge on C2.

E_PS0403 UPDATE: column 'c2' of 'eea20_table1' may not be updated 
    using cursor 'cursor2' because you lack privileges required 
to update it.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
***	C5 not in update list of cursor.

E_US089F line 1, Column 'c5' in cursor 'cursor2' is not updatable.
    (Wed Dec  8 14:43:52 1993)


***	THIS WAS MEANT TO FAIL ****
 ***	Don't have update priviledge on C2

E_PS0403 UPDATE: column 'c2' of 'eea20_table1' may not be updated 
    using cursor 'cursor2' because you lack privileges required 
to update it.
    (Wed Dec  8 14:43:52 1993)

Dumping table eea20_table1 
------------------------------------
C1	C2	C3	C4	C5
------------------------------------
-41	42	-129	44	45
-31	32	-99	34	35
-21	22	-69	24	25
-11	12	-39	14	15
-1	2	-9	4	5


Disconnecting....

>>
? delete eea20.c 
<<
~
>>
? delete eea20.obj 
<<
~
>>
? delete eea20.o 
<<
~
>>
? delete eea20.exe 
<<
~
>>


Ending at: Wed Dec  8 14:43:53 1993
