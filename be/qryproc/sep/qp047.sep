/*
        Test Name    : eea03.sep
        User Name    : testenv
        Test ID      : eea03.sep
        Module       : ESQLC
        Filename     : eea03.sep
        Purpose      : Test cursors for update
        Input Files  :
        Output Files :
        Database     :
        Tables       :
        Synopsis     :
        History      : 02-apr-1987 - written for 6.0 tests (pad)
                       01-jun-1990 - rewritten for SQL by Olga Pekelny
                       03-aug-1990 - sepified by Olga Pekelny
		       22-jul-1991 = rewritten by Troy Camacho for Portability
		       23-Mar-1999   (vande02) Hard-coded VPG_SZ to 8K/changed
				'sql -s SEPPARAMDB' canon to be empty, in order
				to catch the msg. "TM could not connect ..." if
				the test database did not exist.	
		       19-may-1999   (somsa01)
				Added alternate canon for sepcc on NT.
	11-jun-2003 (abbjo03)
		Add includes and other changes to avoid warnings on VMS.
*/

? fill eea03a.dat 
!!
    6Aitken	  50000.000	    5sales	    2NE	    8Verducci	   1112-mar-1947	     2

    7Cameron	  35000.000	    8tech sup	    2SE	    6Shigio	   1115-aug-1960	     0

    5Clark	  40000.000	    5sales	    2NC	    8Verducci	   1118-nov-1949	     1

    5Curan	  30000.000	    8tech sup	    2NW	    6Shigio	   1120-aug-1959	     0

    5Curry	  32000.000	    8tech sup	    2NW	    6Shigio	   1130-nov-1955	     3

    6Gordon	  27000.000	    8tech sup	    2NC	    6Shigio	   1123-may-1963	     0

    5Green	  26000.000	    6market	    2NW	    7McTigue	   1119-dec-1961	     0

    7Gregori	  31000.000	    5sales	    2NW	    8Verducci	   1121-oct-1949	     2

    8Kreseski	  24000.000	    8tech sup	    2NC	    6Shigio	   1111-sep-1955	     0

    6Mandic	  43000.000	    5sales	    2SE	    8Verducci	   1110-jul-1964	     0

    7McTigue	  41000.000	    5sales	    2NW	    8Verducci	   11 9-apr-1953	     1

    4Ming	  22000.000	    8tech sup	    2SE	    6Shigio	   11 4-may-1956	     1

    5Ramos	  30000.000	    8tech sup	    2NW	    6Shigio	   1121-jan-1941	     0

    8Robinson	  80000.000	    5sales	    2NE	    8Verducci	   1120-nov-1952	     1

    5Sabel	  21000.000	    8tech sup	    2SE	    6Shigio	   11 8-jan-1958	     0

    6Saxena	  22000.000	    8tech sup	    2NC	    6Shigio	   11 8-may-1950	     0

    6Shigio	  28000.000	    5sales	    2SE	    8Verducci	   11 9-jul-1948	     3

    8Stannich	  33000.000	    6market	    2NW	    7McTigue	   1113-dec-1961	     0

    5Stein	  40000.000	    5sales	    2NE	    8Verducci	   1125-dec-1952	     1

    8Sullivan	  35000.000	    8tech sup	    2NW	    6Shigio	   1110-oct-1960	     1

    8Verducci	  55000.000	    5admin	    2NW	    0	   1125-dec-1958	     2

    9Zimmerman	  25000.000	    8tech sup	    2NE	    6Shigio	   1128-aug-1962	     0

    7DiTallo	  65000.000	    8Contract	    3unk	    8Robinson	   1102-sep-1955	   -0

    7Herbert	  35000.000	    7banking	    0	    9Emprinham	   1117-mar-1945	     0

!!
? fill eea03b.dat 
!!
admin   NW                 0.00C  2     4
market  NW              9200.00A  1     2
sales   NC            120000.00A  2     1
sales   NE                 0.00D 18     4
sales   NW            200000.00A  2     1
sales   SC             95000.00E  1     1
sales   SE            175000.00D 18     1
tech supNC              5000.00C  2     3
tech supNE             20000.00D 17     2
tech supNW                 0.00B  1     1
tech supSE                 0.00D 19     1
!!
? fill eea03c.dat 
!!
    1A	   191000 University Ave	    8Berkeley	    2CA	    594000

    1B	   171800 Shattuck Ave	    8Berkeley	    2CA	    594100

    1C	   19900 Lake Shore Blvd	    7Chicago	    2IL	    560080

    1D	   2224130 Pennsylvania Ave	   10Washington	    2DC	    520198

    1E	   1842318 Woodsay Blvd	    7Houston	    2TX	    577009

    1F	   111585 Eye St	   10Washington	    2DC	    520199

!!
? fill eea03.sc 
!!
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
exec sql include sqlca;
/***************/
/*    EEA03    */
/***************/

main(argc, argv)
exec sql begin declare section;
        int argc;
        char **argv;
exec sql end declare section;
{
exec sql whenever sqlerror call sqlprint;
exec sql whenever not found call sqlprint;
exec sql whenever sqlwarning call sqlprint;
exec sql whenever sqlmessage call sqlprint;

EXEC SQL BEGIN DECLARE SECTION;
	/* Declarations for EMP basis table */
	char	ename[11];
	char	edept[9];
	char	ediv[4];
	short	enum_dep;
	/* Declarations for DEPT basis table */
	char	ddname[9];
	char	ddiv[4];
	int	dsales;		/* Really money but no decimal places */
	short	dfloor;
	/* Declarations for  BLDG basis table */
	char	bbldg[3];
	char	bst_adr[31];
	char	bstate[3];
	char	bzip[6];
	/* Useful vars */
	int	done;		/* to signal end of cursor */
	int	err;		/* Error number */
	/* Utility variables/clauses */
	int	IS_3 = 3;
	int	NEW_ZIP = 99999;
	int	countvar;
EXEC SQL END DECLARE SECTION;

printf("\n***************\n");
printf("*    EEA01    *\n");
printf("***************\n\n");

printf("connecting with database...\n");
exec sql connect :argv[1];

	/*  update with default mode */
EXEC SQL DECLARE c1 CURSOR FOR
		SELECT name, dept, div
		FROM emp
		WHERE div = 'NW'
		FOR UPDATE OF name, div;

	/*  update with DEFERRED mode */
EXEC SQL DECLARE c2 CURSOR FOR
		SELECT dname, sales, floor
		FROM dept
		WHERE floor > 1
		FOR DEFERRED UPDATE OF dname, sales, floor;

	/*  update with DIRECT mode */
EXEC SQL DECLARE c3 CURSOR FOR
		SELECT bldg, state, zip
		FROM bldg
		FOR DIRECT UPDATE OF zip;

	/*  BEGIN CURSOR UPDATE  */
	printf( "        ESQL CURSOR UPDATE Test\n" );
	printf("1) EMP (name, dept, div) where div = NW\n");
	done = 0;
	err  = 0;
EXEC SQL OPEN c1;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	while (!done && !err)
	{
EXEC SQL	FETCH c1 INTO :ename, :edept, :ediv;
EXEC SQL 	INQUIRE_INGRES (:done = endquery, :err = errorno);
		if (!done && !err)
		{
		    printf( "%-11s, %-9s, %-4s \n",
			     ename, edept, ediv );
EXEC SQL            UPDATE emp 
	            SET div = 'XX'
	            WHERE CURRENT OF c1;
		}
	}
	if (err) 
	      printf( "Error = %d\n", err );
	err  = 0;
EXEC SQL CLOSE c1;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	if (err) 
	      printf( "Error closing c1 = %d\n", err );
	printf( "\n(2) DEPT(dname, sales, floor) where <d.floor > 1>\n" );
	done = 0;
	err  = 0;
EXEC SQL OPEN c2;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	while (!done && !err)
	{
EXEC SQL 	FETCH c2 INTO :ddname, :dsales, :dfloor;
EXEC SQL 	INQUIRE_INGRES (:done = endquery, :err = errorno);
		if (!done && !err)
		{
		    printf( "%-9s, %-10d, %3d\n",
			     ddname, dsales, dfloor );
EXEC SQL 	    UPDATE dept
		    SET dname = UPPERCASE(dname), 
				sales = :dsales + :IS_3, 
				floor = 1
		    WHERE CURRENT OF c2;
		}
	}
	if (err) printf( "Error = %d\n", err );
	err  = 0;
EXEC SQL CLOSE c2;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	if (err) printf( "Error closing c2 = %d\n", err );

	printf( "\n(3) BLDG( <b.bldg,b.state,b.zip> \n" );
	done = 0;
	err  = 0;
EXEC SQL OPEN c3;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	while (!done && !err)
	{
EXEC SQL 	FETCH c3 INTO :bbldg, :bstate, :bzip;
EXEC SQL 	INQUIRE_INGRES (:done = endquery, :err = errorno);
		if (!done && !err)
		{
		     printf( "%-3.3s, %-31.31s, %-6.6s\n",
			      bbldg, bstate, bzip);
		     if (!strcmp(bstate,"DC"))
EXEC SQL 	    UPDATE bldg
		    SET zip = char(:NEW_ZIP)
		    WHERE CURRENT OF c3;
		}
	}
	if (err) printf( "Error = %d\n", err );
	err  = 0;
EXEC SQL CLOSE c3;
EXEC SQL INQUIRE_INGRES (:err = errorno);
	if (err) printf( "Error closing c3 = %d\n", err );

EXEC SQL ROLLBACK;
EXEC SQL disconnect;
	printf( "\n===END OF TEST RUN===\n" );

exec sql disconnect;

exit(0);
}
!!
? sql -s SEPPARAMDB 
<<

>>
* drop emp\g
<<
~
>>
* drop dept\g
<<
~
>>
* drop bldg\g
<<
~
>>
*	create table emp(
<<
>>
*	name c10 not null with default,
<<
>>
*	salary float not null with default,
<<
>>
*	dept c8 not null with default,
<<
>>
*	div c3 not null with default,
<<
>>
*	mgr c10 not null with default,
<<
>>
*	birthdate c25 not null with default,
<<
>>
*	num_dep smallint not null with default)
<<
>>
*	with noduplicates, page_size=8192\p\g
<<
	create table emp(
	name c10 not null with default,
	salary float not null with default,
	dept c8 not null with default,
	div c3 not null with default,
	mgr c10 not null with default,
	birthdate c25 not null with default,
	num_dep smallint not null with default)
	with noduplicates, page_size=8192
>>
*	copy emp(
<<
>>
*	name= varchar(0)tab,
<<
>>
*	salary= c0tab,
<<
>>
*	dept= varchar(0)tab,
<<
>>
*	div= varchar(0)tab,
<<
>>
*	mgr= varchar(0)tab,
<<
>>
*	birthdate= varchar(0)tab,
<<
>>
*	num_dep= c0nl, nl= d1)
<<
>>
*	from 'eea03a.dat'\g
<<
(24 rows)
>>
* create table dept ( dname c8, div c3, sales f8, bldg c2,
<<
>>
*		floor  i1, num_emp i2) with page_size=8192\g
<<
>>
* copy dept (	dname = c8, div = c3, sales = c20, bldg = c2,
<<
>>
*		floor = c2, num_emp = c0nl)	
<<
>>
*		from 'eea03b.dat'\g
<<
(11 rows)
>>
* create table bldg( bldg c2 not null with default,
<<
>>
*	st_adr c30 not null with default, city c15 not null with default,
<<
>>
*	state c2 not null with default, zip c5 not null with default)
<<
>>
*	with noduplicates, page_size=8192\g
<<
>>
* copy bldg(bldg= varchar(0)tab,
<<
>>
*	st_adr= varchar(0)tab, city= varchar(0)tab,
<<
>>
*	state= varchar(0)tab, zip= varchar(0)nl, nl= d1)
<<
>>
*	from 'eea03c.dat'\g
<<
(6 rows)
>>
* commit\g
<<
>>
* \q
<<
>>
? sepesqlc eea03.sc 
<<
ESQL eea03.sc:
>>
? sepcc eea03.c 
<<
>>
<<
eea03.c
>>
? seplnk eea03 
<<
>>
? run eea03.exe SEPPARAMDB 
<<
***************
*    EEA01    *
***************

connecting with database...
        ESQL CURSOR UPDATE Test
1) EMP (name, dept, div) where div = NW
Curan      , tech sup , NW
Curry      , tech sup , NW
Green      , market   , NW
Gregori    , sales    , NW
McTigue    , sales    , NW
Ramos      , tech sup , NW
Stannich   , market   , NW
Sullivan   , tech sup , NW
Verducci   , admin    , NW

(2) DEPT(dname, sales, floor) where <d.floor > 1>
admin    , 0         ,   2
sales    , 120000    ,   2
sales    , 0         ,  18
sales    , 200000    ,   2
sales    , 175000    ,  18
tech sup , 5000      ,   2
tech sup , 20000     ,  17
tech sup , 0         ,  19

(3) BLDG( <b.bldg,b.state,b.zip>
A  , CA                             , 94000
B  , CA                             , 94100
C  , IL                             , 60080
D  , DC                             , 20198
E  , TX                             , 77009
F  , DC                             , 20199

===END OF TEST RUN===
>>
? sql -s SEPPARAMDB 
<<

>>
* drop emp\g
<<
~
>>
* drop dept\g
<<
~
>>
* drop allt\g
<<
~
>>
* drop bldg\g
<<
~
>>
* \q
<<
>>
? delete eea03.exe 
<<
~
>>
? delete eea03.c 
<<
~
>>
? delete eea03.obj 
<<
~
>>
? delete eea03.o 
<<
~
>>


Ending at: Thu Jul 25 08:58:44 1991
