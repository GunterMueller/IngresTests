/*
Copyright (c) 2007 Ingres Corporation

	Test Name    : am32.sep (formerly cda10.sep)
	User Name    : testenv      
	Test ID      : am32
	Module       : be/qryproc
	Filename     : am32.sep
	Purpose	     : 
	Input Files  :
	Output Files :
	Database     : accessdb1
	Tables       : quelr, _xtremelyLONgtablesnames, string, dummy, 
		       integer, float, func, target
	Synopsis     :
	History	     : xx-xxx-1989	Created

           5-Aug-1991	(Stever)  Removed queries that generated floating point
                        	  overflows and divide-by-zero in order to make
                        	  this test portable. 
           2-Aug-1993	(garys)   Error number different and reversed sample
				  syntax for 65.
          27-Aug-1993	(garys)   Accept new canon for returned float value
				  (to 25 places) on retrieved numeric operation.
          15-Dec-1993	(garys)   Updated canon to accept a column named
				  - integer - without double quote delimiters
				  in help table output.  Previously, column
				  names which had same names as keywords were
				  delimited by double quotes.
          23-Mar-1995   (gauje01) Updated canons to contain current Ingres
				  version number. (OPING1.2)
           8-Oct-1996	(Author)
          07-Jan-1999   (hanch04) Replace table version with TBL_VER
				  Corrected number of zeros.
	  18-Mar-1999	(vande02) Hard-coded VPG_SZ to 4K and removed TBL_VER
				  grammar.lex masks table versions
	  26-Mar-2001   (hanch04) Update test for Ingres 2.6
           4-Oct-2001   (devjo01) Change canons to reflect lifting of keyword
				  restrictions.
          16-Sep-2002   (hanch04) Update to run again 32/64-bit server
          18-Jun-2007   (vande02) Replaced canon for decimal and division test
				  case due to new decimal precision max being
				  (39) as of 2006r3.  The new 2006r3 result
				  has 8 more digits right of the decimal.
				  Tracked by QA issue 119135. Updated copyright.
          29-Oct-2007	(kiria01) b117790
		Updating canons reflecting string-number coercion changes.
*/
? fill fe012a.dat 
!!
1	central processor	pink	10	1
2	memory	gray	20	32
3	disk drive	black	685	2
4	tape drive	black	450	4
5	tapes	gray	1	250
6	line printer	yellow	578	3
7	l-p paper	white	15	95
8	terminals	blue	19	15
13	paper tape reader	black	107	0
14	paper tape punch	black	147	0
9	terminal paper	white	2	350
10	byte-soap	clear	0	143
11	card reader	gray	327	0
12	card punch	gray	427	0
!!
? sql -s SEPPARAMDB 
<<
~
>>
* drop quelr\g
<<
~
>>
* create table quelr (pnum integer2, pname vchar(20), color vchar(8),
<<
>>
* weight integer2, qoh integer2) with page_size=4096 \g
<<
>>
* copy table quelr (pnum=vchar(0)tab, pname=vchar(0)tab, color=vchar(0)tab, 
<<
>>
* weight=vchar(0)tab, qoh=vchar(0)nl) from 'fe012a.dat' \g
<<
(14 rows)
>>
* select * from quelr\g
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
|     1|central processor   |pink    |    10|     1|
|     2|memory              |gray    |    20|    32|
|     3|disk drive          |black   |   685|     2|
|     4|tape drive          |black   |   450|     4|
|     5|tapes               |gray    |     1|   250|
|     6|line printer        |yellow  |   578|     3|
|     7|l-p paper           |white   |    15|    95|
|     8|terminals           |blue    |    19|    15|
|    13|paper tape reader   |black   |   107|     0|
|    14|paper tape punch    |black   |   147|     0|
|     9|terminal paper      |white   |     2|   350|
|    10|byte-soap           |clear   |     0|   143|
|    11|card reader         |gray    |   327|     0|
|    12|card punch          |gray    |   427|     0|
+------+--------------------+--------+------+------+
(14 rows)
>>
* create table 1number (number integer2) with page_size=4096\g
/*
*/
<<
E_US0F0F line 1, Syntax error on '1'.  The correct syntax is: 
    CREATE TABLE tablename ( 
       columnname format [default_clause] [null_clause]  [column_constraint]
    
     | table_constraint 
       {, ... } ) 
       [with_clause] 
     
     CREATE TABLE tablename [(colname_list)] 
       AS subselect 
   [with_clause] 
    (Mon Aug  2 17:37:22 1993)

E_US0AA1 line 1, Syntax error on '1'. Make sure that the specified table
    location or table name is not a keyword and is a valid identifier.
    (Mon Aug  2 17:37:22 1993)

>>
* create table extremelylongtablesnamesXXXXXXXXXX (extremelylongintegerfield integer-
2) with page_size=4096\g
/*
  no more than 12 alphanumeric characters, starting with an 
  alphabetic or underscore is considered an alphabetic 
*/
<<
E_US0A8F line 1, Name too long: 'extremelylongtablesnamesxxxxxxxxx'.
    (Fri Feb 26 13:55:30 1993)

>>
* drop _xtremelyLONgtablesnames\g
<<
~
>>
* create table _xtremelyLONgtablesnames (extremelylongintegerfld integer2) with page-
_size=4096\g
/*
  string constants
  strings are sequences of no more than 255 arbitrary ascii characters 
  bounded by quotes 
  upper case alphabetics accepted literally
  prefix with \ to imbed " and \ 
*/
<<
>>
* drop string \g
<<
~
>>
* create table string (string1 vchar(255)) with page_size=4096\g
<<
>>
* insert into string (string1) values ('1234567890abcdefghijklmnopqrstuvwxyzABCDEFGH-
IJKLMNOPQRSTUVWXYZ')\g
<<
(1 row)
>>
* insert into string (string1) values ('control characters')\g
/*
 non-printing characters are converted to blanks 
  append string (string1="control characters") 
*/
<<
Non-printing character 04 converted to blank
(1 row)
>>
* insert into string (string1) values ('12345678901234567890123456789012345678901234-
567890123456789012345678901234567890123456789012345678901234567890123456789012345678-
901234567890123456789012345678901234567890123456789012345678901234567890123456789012-
34567890123456789012345678901234567890123456')\g
<<
(1 row)
>>
* insert into string (string1) values ('12345678901234567890123456789012345678901234-
567890123456789012345678901234567890123456789012345678901234567890123456789012345678-
901234567890123456789012345678901234567890123456789012345678901234567890123456789012-
345678901234567890123456789012345678901345')\g
<<
(1 row)
>>
* select * from string \g
<<

+------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
----+
|string1                                                                            -
                                                                                    -
                                                                                    -
    |
+------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
----+
|1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ                     -
                                                                                    -
                                                                                    -
    |
| control characters                                                                -
                                                                                    -
                                                                                    -
    |
|12345678901234567890123456789012345678901234567890123456789012345678901234567890123-
456789012345678901234567890123456789012345678901234567890123456789012345678901234567-
890123456789012345678901234567890123456789012345678901234567890123456789012345678901-
2345|
|12345678901234567890123456789012345678901234567890123456789012345678901234567890123-
456789012345678901234567890123456789012345678901234567890123456789012345678901234567-
890123456789012345678901234567890123456789012345678901234567890123456789012345678901-
345 |
+------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
----+
(4 rows)
>>
<<

+------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
----+
|string1                                                                            -
-
                                                                                    -
-
                                                                                    -
-
    |
+------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
----+
|1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ                     -
-
                                                                                    -
-
                                                                                    -
-
    |
| control characters                                                                -
-
                                                                                    -
-
                                                                                    -
-
    |
|12345678901234567890123456789012345678901234567890123456789012345678901234567890123-
-
456789012345678901234567890123456789012345678901234567890123456789012345678901234567-
-
890123456789012345678901234567890123456789012345678901234567890123456789012345678901-
-
2345|
|12345678901234567890123456789012345678901234567890123456789012345678901234567890123-
-
456789012345678901234567890123456789012345678901234567890123456789012345678901234567-
-
890123456789012345678901234567890123456789012345678901234567890123456789012345678901-
-
345 |
+------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
-------------------------------------------------------------------------------------
-
----+
(4 rows)
>>
* drop string\g
<<
>>
* drop table dummy\g
<<
~
>>
* create table dummy (col1 integer4) with page_size=4096\g
<<
>>
* create table integer as select negi2=-32767, posi2=32767, negi4=-32768, posi4=3276-
8, negf4=-2147483647, posf4=2147483647 from dummy with page_size=4096\g
/*
  integers greater than -32,769 and less than +32,768 are left as 
  two byte integers, otherwise, they are converted to four byte integers
  integer constants beyond the range from -2,147,483,648 to +2,147,483,647 
  are converted to floating point 
*/
<<
(0 rows)
>>
* help integer\g 
<<
Name:                 integer
Owner:                testenv
Created:              15-dec-1993 16:58:20     
Type:                 user table
Version:              OPING1.2  

Column Information:
                                                                  Key
Column Name                      Type       Length Nulls Defaults Seq
negi2                            integer         2   no      no       
posi2                            integer         2   no      no       
negi4                            integer         4   no      no       
posi4                            integer         4   no      no       
negf4                            integer         4   no      no       
posf4                            integer         4   no      no       



>>
<<
Name:                 integer
Owner:                testenv
Created:              08-oct-1996 14:05:21     
Type:                 user table
Version:              OI2.0

Column Information:
                                                                  Key
Column Name                      Type       Length Nulls Defaults Seq
negi2                            integer         2   no      no       
posi2                            integer         2   no      no       
negi4                            integer         4   no      no       
posi4                            integer         4   no      no       
negf4                            integer         4   no      no       
posf4                            integer         4   no      no       



>>
* drop integer\g
<<
>>
* select negf4=-2147483648, posf4=2147483648 from dummy \g
/*
  integers greater than -32,769 and less than +32,768 are left as 
  two byte integers, otherwise, they are converted to four byte integers 
  integer constants beyond the range from -2,147,483,648 to +2,147,483,647 
  are converted to floating point
*/
<<

+-----------+-----------+
|negf4      |posf4      |
+-----------+-----------+
+-----------+-----------+
(0 rows)
>>
* help integer\g 
<<
No tables were found that matched 'integer'


>>
* drop integer\g
<<
E_US0AC1 DROP: 'integer' does not exist or is not owned by you.
    ( 8-MAR-1991 10:09:30)

>>
* drop float\g
<<
~
>>
* create table float (f4 float4, i2 integer2) with page_size=4096; insert into float-
 (f4) values (1.0e+1) \g
<<
(1 row)
>>
* insert into float (f4, i2) values (123, 123.45)\g
/*
 numeric format can be converted to any other numeric format 
*/
<<
(1 row)
>>
* insert into float (f4) values (123.)\g
/*
 numeric format can be converted to any other numeric format 
*/
<<
(1 row)
>>
* select * from float \g 
<<

+-----------+------+
|f4         |i2    |
+-----------+------+
|     10.000|      |
|    123.000|   123|
|    123.000|      |
+-----------+------+
(3 rows)
>>
* drop float \g
<<
>>
* select answer=2.5**-pnum from quelr where pnum=2 \g
/*
  integers greater than -32,769 and less than +32,768 
  are left as two byte integers
  arithmetic operators, operator precedence 
*/
<<

+-----------+
|answer     |
+-----------+
|      0.160|
+-----------+
(1 row)
>>
* select answer=weight*2.5**-pnum from quelr where pnum=2\g
<<

+-----------+
|answer     |
+-----------+
|      3.200|
+-----------+
(1 row)
>>
* select answer=qoh/weight-+pnum from quelr where pnum=2\g
<<

+-------------+
|answer       |
+-------------+
|           -1|
+-------------+
(1 row)
>>
* select answer=-+weight*2.5**-pnum+qoh/weight-+pnum from quelr where pnum=2 \g
<<

+-----------+
|answer     |
+-----------+
|     -4.200|
+-----------+
(1 row)
>>
* select answer=(weight-15.0)/pnum*pnum from quelr where pnum=2\g
/*
	The answer as of 2006 Release 3 will have 33 zeros to the
	right of the decimal.  See SD Issue 119135.
*/
<<

+-----------------------------------------+
|answer                                   |
+-----------------------------------------+
|      5.000000000000000000000000000000000|
+-----------------------------------------+
(1 row)
>>
* select pnum from quelr where qoh=2?weight\g
<<
E_US09C5 line 1, Syntax error on '?'.  The correct syntax is: 
    SELECT [ALL|DISTINCT] target_list 
      FROM table(s) 
      [WHERE search_cond] 
      [GROUP BY col(s)] 
      [HAVING search_cond] 
 [UNION subselect] 
 [ORDER BY col(s)]
    (12-JUL-1989 17:28:03)

>>
* select name=pname+color from quelr\g
<<

+----------------------------+
|name                        |
+----------------------------+
|central processorpink       |
|memorygray                  |
|disk driveblack             |
|tape driveblack             |
|tapesgray                   |
|line printeryellow          |
|l-p paperwhite              |
|terminalsblue               |
|paper tape readerblack      |
|paper tape punchblack       |
|terminal paperwhite         |
|byte-soapclear              |
|card readergray             |
|card punchgray              |
+----------------------------+
(14 rows)
>>
* select pnum from quelr where qoh=color\g
/*
 numeric operation using char and numeric domains 
*/
<<

+------+
|pnum  |
+------+
+------+
(0 rows)
>>
* select name=-pname from quelr\g
/*
 unary operators are not allowed on character domains 
*/
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Oct 29 16:02:23 2007)

>>
* select pnum from quelr where qoh = weight-color\g
/*
 unary operators are not allowed on character domains 
*/
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Oct 29 16:02:29 2007)

>>
* select pnum from quelr where pname='abc'+'def'\g
<<

+------+
|pnum  |
+------+
+------+
(0 rows)
>>
* select * from quelr where color='??a*'\g
/*
 * matches any string of zero or more characters 
 ? matches any single character 
*/
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
+------+--------------------+--------+------+------+
(0 rows)
>>
* select * from quelr where color='[p-z]*'\g
/*
 * matches any string of zero or more characters 
 [...] matches any of the characters in the brackets 
*/
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
+------+--------------------+--------+------+------+
(0 rows)
>>
* select * from quelr where color='*[gp-pr]*'\g
/*
 * matches any string of zero or more characters 
 [...] matches any of the characters in the brackets 
*/
<<

+------+--------------------+--------+------+------+
|pnum  |pname               |color   |weight|qoh   |
+------+--------------------+--------+------+------+
+------+--------------------+--------+------+------+
(0 rows)
>>
* drop func\g
<<
~
>>
* create table func ( func vchar(15), f8 float8, i4 integer4, c25 vchar(25)) with pa-
ge_size=4096\g
<<
>>
* insert into func (func, f8) select 'atan(3)', atan(pnum) from quelr where pnum=3\g
/*
 arctangent
*/
<<
(1 row)
>>
* insert into func (func, f8) select 'atan(0.7854)', atan(0.7854) from quelr\g
/*
 arctangent
*/
<<
(14 rows)
>>
* insert into func ( func, f8 ) select 'cos(3)',cos(pnum) from quelr where pnum=3\g
/*
 cosine 
*/
<<
(1 row)
>>
* insert into func ( func, f8) values ('cos(0.7854)',cos(0.7854))\g
/*
 cosine 
*/
<<
(1 row)
>>
* insert into func (func,f8) select 'gamma(3)',gamma(pnum) from quelr\g
<<
E_US0B5A line 1, There is no such function as 'gamma'.
    ( 6-NOV-1989 13:50:43)

>>
* insert into func (func,f8) select 'log(3)',log(pnum) from quelr where pnum=3\g
<<
(1 row)
>>
* insert into func (func,f8) values ('log(0.7854)',log(0.7854))\g
<<
(1 row)
>>
* insert into func(func,f8)select 'sin(3)',sin(pnum) from quelr where pnum=3\g
/*
 sine 
*/
<<
(1 row)
>>
* insert into func (func, f8) values ('sin(0.7854)', sin(0.7854))\g
/*
 sine 
*/
<<
(1 row)
>>
* insert into func (func,f8) select 'sqrt(4)',sqrt(pnum) from quelr where pnum=4\g
<<
(1 row)
>>
* insert into func (func,f8) values ('sqrt(10.5)', sqrt(10.5))\g
<<
(1 row)
>>
* insert into func (func) select mod(11,pname) from quelr where pnum=1\g
/*
 modulo not defined for floating point or character attributes 
*/
<<
E_US100F String cannot be converted to numeric due to incorrect syntax.
    (Mon Oct 29 16:02:33 2007)

>>
* insert into func (i4) values (mod(11.5)) \g
<<
E_US0B57 Line 1, Function 'mod' specified with incorrect number of
    parameters.
    (Thu Oct  4 11:52:37 2001)

>>
* insert into func (func,i4) select 'mod(11,5)',mod(11,pnum) from quelr where pnum=5-
\g
<<
(1 row)
>>
* insert into func (func, f8) values ('abs(-123.456)',abs(-123.456))\g
<<
(1 row)
>>
* \q
<<
>>


Ending at: Mon Oct 29 16:02:41 2007
