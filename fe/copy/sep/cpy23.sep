/*
Copyright (c) 2007 Ingres Corporation

	Test Name: cpy23.sep (formerly cha61.sep)
	Time: Thu Sep 16 17:03:12 1993
	User Name: testenv
	Terminal type: septerm
 
	Test ID : (TBD)
	Module  : 
	Filename:
	Purpose	:
        Purpose :  Test decimal datatypes with the COPY statement.
	Input Files  :
	Output Files :
	Database     : SEPPARAMDB 
	Tables       : drop table dec_table3
	Synopsis     :
		     This test creates a table with only 1 decimal column
                     of precision 39 and scale 0, i.e only whole numbers 
                     may be stored in the table. The fractional parts of 
                     the decimal numbers are truncated and then stored.  
                     The final set of values in the table are copied out into
                     files in various formats, and then read back into the
                     table.

 History: 16-Sep-1993	(aruna)	Created
	  26-Jan-1994   (sandhya)
                        Added set autocommit on after sql so that an
		        ldb error like Packed Decimal overflow will
		        not roll back the distributed transaction.
	  04-Apr-1994   (sandhya)
			Added canon commet for the inserts where the
			precision is more than 31.  This will be 
			treated as float instead od decimal so the
			value selected will have precision of either 15
			or 16 depending on the processor.  A note was
			added to the select statement to make it diff 
			to point to the retrieval of the rows that
			have precison of more than 31.  Verify that the
			15 or 16 digits precision selected for your
			platform is correct.  For more info, see bug
			# 61007.
          27-APR-1994	(garys) Accepted new canon for 15 digit precision
                                without comment and added alt canon for 16 
				digit precision.
          22-Jun-2007	(vande02)
                        Modified test to use the new maximum precision of 39
                        for the decimal column definition.  Increased the input
                        value for 1 insert to hit precision 39, and replaced the
                        canons for 'select' which now display precision of 39
                        digits.

                        The new maximum precision of 39 for decimal data types
                        is as of Ingres Release 3.
*/
? sql -s SEPPARAMDB 
<<

>>
* set autocommit on \g
<<

>>
* drop table dec_table3 \g 
<<
~
>>
* create table dec_table3 (field1 decimal(39,0)) \g 
<<
>>
* insert into dec_table3 values (0.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (1.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (12.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (12345678901234567890123456789.1) \g 
<<
(1 row)
>>
* insert into dec_table3 values (123456789012345678901234567890.1) \g 
<<
(1 row)
>>
* insert into dec_table3 values (1234567890.1234567890) \g 
<<
(1 row)
>>
* insert into dec_table3 values (1.12345678901234567890123456789) \g 
<<
(1 row)
>>
* insert into dec_table3 values (1.123456789012345678901234567890) \g 
<<
(1 row)
>>
* insert into dec_table3 values (1.1234567890123456789012345678901) \g 
<<
(1 row)
>>
* insert into dec_table3 values (0.00000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (0.000000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (0.0000000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (0.999999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (9.99999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (9.999999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-0.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-1.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-12.0) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-12345678901234567890123456789.1) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-123456789012345678901234567890.1) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-12345678901234567890123456789012345678.12) \g 
/*
 * NOTE: THIS INSERT DURING SELECT WILL BE PRECISION 15 OR 16 BASED
 * ON THE PROCESSOR.  THE NON-DECIMAL PART WILL BE TRUCATED.
*/
<<
(1 row)
>>
* insert into dec_table3 values (-1234567890.1234567890) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-1.12345678901234567890123456789) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-1.123456789012345678901234567890) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-1.1234567890123456789012345678901) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-0.00000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-0.000000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-0.0000000000000000000000000000001) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-0.999999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-9.99999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-9.999999999999999999999999999999) \g 
<<
(1 row)
>>
* insert into dec_table3 values (-9.9999999999999999999999999999999) \g 
/*
 * NOTE: THIS INSERT DURING SELECT WILL BE PRECISION 15 OR 16 BASED
 * ON THE PROCESSOR.
*/
<<
(1 row)
>>
* select * from dec_table3 \g 
<<

+----------------------------------------+
|field1                                  |
+----------------------------------------+
|                                       0|
|                                       1|
|                                      12|
|           12345678901234567890123456789|
|          123456789012345678901234567890|
|                              1234567890|
|                                       1|
|                                       1|
|                                       1|
|                                       0|
|                                       0|
|                                       0|
|                                       0|
|                                       9|
|                                       9|
|                                       0|
|                                      -1|
|                                     -12|
|          -12345678901234567890123456789|
|         -123456789012345678901234567890|
| -12345678901234500000000000000000000000|
|                             -1234567890|
|                                      -1|
|                                      -1|
|                                      -1|
|                                       0|
|                                       0|
|                                       0|
|                                       0|
|                                      -9|
|                                      -9|
|                                      -9|
+----------------------------------------+
(32 rows)
>>
<<

+----------------------------------------+
|field1                                  |
+----------------------------------------+
|                                       0|
|                                       1|
|                                      12|
|           12345678901234567890123456789|
|          123456789012345678901234567890|
|                              1234567890|
|                                       1|
|                                       1|
|                                       1|
|                                       0|
|                                       0|
|                                       0|
|                                       0|
|                                       9|
|                                       9|
|                                       0|
|                                      -1|
|                                     -12|
|          -12345678901234567890123456789|
|         -123456789012345678901234567890|
| -12345678901234560000000000000000000000|
|                             -1234567890|
|                                      -1|
|                                      -1|
|                                      -1|
|                                       0|
|                                       0|
|                                       0|
|                                       0|
|                                      -9|
|                                      -9|
|                                     -10|
+----------------------------------------+
(32 rows)
>>
* copy table dec_table3 () into 'dec_table3_bulk.res' \g 
<<
(32 rows)
>>
* copy table dec_table3 (field1=c0nl) into 'dec_table3_c0nl.res' \g 
<<
(32 rows)
>>
* copy table dec_table3 (field1=c0tab) into 'dec_table3_c0tab.res' \g 
<<
(32 rows)
>>
* copy table dec_table3 (field1=varchar(0)) into 'dec_table3_varchar.res' \g 
<<
(32 rows)
>>
* copy table dec_table3(field1=text(0)colon) into 'dec_table3_text0colon.res' \g 
<<
(32 rows)
>>
* copy table dec_table3(field1=integer1) into 'dec_table3_integer1.res' \g 
<<
E_CO003A COPY: Error processing row 4.  Cannot convert column 'field1' to
    row format.

E_CO002B COPY: 1 rows could not be processed.

E_CO0029 COPY: Copy terminated abnormally.  3 rows successfully copied.

>>
* copy table dec_table3(field1=integer) into 'dec_table3_integer.res' \g 
<<
E_CO003A COPY: Error processing row 4.  Cannot convert column 'field1' to
    row format.

E_CO002B COPY: 1 rows could not be processed.

E_CO0029 COPY: Copy terminated abnormally.  3 rows successfully copied.

>>
* copy table dec_table3(field1=smallint) into 'dec_table3_smallint.res' \g 
<<
E_CO003A COPY: Error processing row 4.  Cannot convert column 'field1' to
    row format.

E_CO002B COPY: 1 rows could not be processed.

E_CO0029 COPY: Copy terminated abnormally.  3 rows successfully copied.

>>
* copy table dec_table3(field1=float) into 'dec_table3_float.res' \g 
<<
(32 rows)
>>
* copy table dec_table3(field1=float4) into 'dec_table3_float4.res' \g 
<<
(32 rows)
>>
* copy table dec_table3(field1=money) into 'dec_table3_money.res' \g 
<<
E_CO003A COPY: Error processing row 4.  Cannot convert column 'field1' to
    row format.

E_CO002B COPY: 1 rows could not be processed.

E_CO0029 COPY: Copy terminated abnormally.  3 rows successfully copied.

>>
* copy table dec_table3(field1=decimal(39,15)) into 'dec_table3_decimal.res' \g
<<
E_CO003A COPY: Error processing row 4.  Cannot convert column 'field1' to
    row format.

E_CO002B COPY: 1 rows could not be processed.

E_CO0029 COPY: Copy terminated abnormally.  3 rows successfully copied.

>>
* copy table dec_table3 () from 'dec_table3_bulk.res' \g
<<
(32 rows)
>>
* copy table dec_table3 (field1=c0nl) from  'dec_table3_c0nl.res' \g
<<
(32 rows)
>>
* copy table dec_table3 (field1=c0tab) from  'dec_table3_c0tab.res' \g
<<
(32 rows)
>>
* copy table dec_table3 (field1=varchar(0)) from  'dec_table3_varchar.res' \g
<<
(32 rows)
>>
* copy table dec_table3(field1=text(0)colon) from 'dec_table3_text0colon.res'\g
<<
(32 rows)
>>
* copy table dec_table3(field1=integer1) from 'dec_table3_integer1.res' \g
<<
(3 rows)
>>
* copy table dec_table3(field1=integer) from 'dec_table3_integer.res' \g
<<
(3 rows) 
>>
* copy table dec_table3(field1=smallint) from 'dec_table3_smallint.res' \g
<<
(3 rows)
>>
* copy table dec_table3(field1=float) from 'dec_table3_float.res' \g
<<
(32 rows)
>>
* copy table dec_table3(field1=float4) from 'dec_table3_float4.res' \g
<<
(32 rows) 
>>
* copy table dec_table3(field1=money) from 'dec_table3_money.res' \g
<<
(3 rows)
>>
* copy table dec_table3(field1=decimal(39,15)) from 'dec_table3_decimal.res'\g
<<
(3 rows)
>>
* \q 
<<
>>
? delete dec_table3_bulk.res 
<<
~
>>
? delete dec_table3_c0nl.res 
<<
~
>>
? delete dec_table3_c0tab.res 
<<
~
>>
? delete dec_table3_decimal.res 
<<
~
>>
? delete dec_table3_float.res 
<<
~
>>
? delete dec_table3_float4.res 
<<
~
>>
? delete dec_table3_integer.res 
<<
~
>>
? delete dec_table3_integer1.res 
<<
~
>>
? delete dec_table3_money.res 
<<
~
>>
? delete dec_table3_smallint.res 
<<
~
>>
? delete dec_table3_text0colon.res 
<<
~
>>
? delete dec_table3_varchar.res 
<<
~
>>


Ending at: Fri Jun 22 15:27:44 2007
